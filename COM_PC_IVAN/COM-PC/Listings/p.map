Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    stm32f4xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f4xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f4xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f4xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f4xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f4xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f4xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.HAL_GetTick) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.HAL_GetTick) refers to main.o(.bss.HAL_GetTick.ticks) for HAL_GetTick.ticks
    main.o(.ARM.exidx.text.HAL_GetTick) refers to main.o(.text.HAL_GetTick) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.HAL_InitTick) refers to main.o(.text.HAL_InitTick) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32f4xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to com.o(.text.Init_Thcom) for Init_Thcom
    main.o(.text.main) refers to msgqueue.o(.text.Init_MsgQueue) for Init_MsgQueue
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal.o(.text.HAL_GetREVID) for HAL_GetREVID
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    msgqueue.o(.text.Init_MsgQueue) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    msgqueue.o(.text.Init_MsgQueue) refers to msgqueue.o(.bss.mid_MsgQueuePCRX) for mid_MsgQueuePCRX
    msgqueue.o(.text.Init_MsgQueue) refers to msgqueue.o(.bss.mid_MsgQueuePCTX) for mid_MsgQueuePCTX
    msgqueue.o(.text.Init_MsgQueue) refers to msgqueue.o(.text.Thread_MsgQueue1) for Thread_MsgQueue1
    msgqueue.o(.text.Init_MsgQueue) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    msgqueue.o(.text.Init_MsgQueue) refers to msgqueue.o(.bss.tid_Thread_MsgQueue1) for tid_Thread_MsgQueue1
    msgqueue.o(.ARM.exidx.text.Init_MsgQueue) refers to msgqueue.o(.text.Init_MsgQueue) for [Anonymous Symbol]
    msgqueue.o(.text.Thread_MsgQueue1) refers to msgqueue.o(.rodata..L__const.Thread_MsgQueue1.t) for .L__const.Thread_MsgQueue1.t
    msgqueue.o(.text.Thread_MsgQueue1) refers to msgqueue.o(.bss.mid_MsgQueuePCTX) for mid_MsgQueuePCTX
    msgqueue.o(.text.Thread_MsgQueue1) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    msgqueue.o(.text.Thread_MsgQueue1) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    msgqueue.o(.ARM.exidx.text.Thread_MsgQueue1) refers to msgqueue.o(.text.Thread_MsgQueue1) for [Anonymous Symbol]
    com.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.Init_Thcom) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.Init_Thcom) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.Init_Thcom) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.Init_Thcom) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.Init_Thcom) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.Init_Thcom) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.Init_Thcom) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.Init_Thcom) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.Init_Thcom) refers to com.o(.text.USART_Init) for USART_Init
    com.o(.text.Init_Thcom) refers to com.o(.text.ThcomTX) for ThcomTX
    com.o(.text.Init_Thcom) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    com.o(.text.Init_Thcom) refers to com.o(.bss.tid_ThcomTX) for tid_ThcomTX
    com.o(.text.Init_Thcom) refers to com.o(.text.ThcomRX) for ThcomRX
    com.o(.text.Init_Thcom) refers to com.o(.bss.tid_ThcomRX) for tid_ThcomRX
    com.o(.ARM.exidx.text.Init_Thcom) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.Init_Thcom) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.Init_Thcom) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.Init_Thcom) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.Init_Thcom) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.Init_Thcom) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.Init_Thcom) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.Init_Thcom) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.Init_Thcom) refers to com.o(.text.Init_Thcom) for [Anonymous Symbol]
    com.o(.text.USART_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.USART_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.USART_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.USART_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.USART_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.USART_Init) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.USART_Init) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.USART_Init) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.USART_Init) refers to usart_stm32f4xx.o(.rodata.Driver_USART3) for Driver_USART3
    com.o(.text.USART_Init) refers to com.o(.text.USART_callback) for USART_callback
    com.o(.ARM.exidx.text.USART_Init) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.USART_Init) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.USART_Init) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.USART_Init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.USART_Init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.USART_Init) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.USART_Init) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.USART_Init) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.USART_Init) refers to com.o(.text.USART_Init) for [Anonymous Symbol]
    com.o(.text.ThcomTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.ThcomTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.ThcomTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.ThcomTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.ThcomTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.ThcomTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.ThcomTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.ThcomTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.ThcomTX) refers to com.o(.bss.tid_ThcomTX) for tid_ThcomTX
    com.o(.text.ThcomTX) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    com.o(.text.ThcomTX) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    com.o(.text.ThcomTX) refers to com.o(.text.getInformacionCola) for getInformacionCola
    com.o(.text.ThcomTX) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    com.o(.ARM.exidx.text.ThcomTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.ThcomTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.ThcomTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.ThcomTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.ThcomTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.ThcomTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.ThcomTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.ThcomTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.ThcomTX) refers to com.o(.text.ThcomTX) for [Anonymous Symbol]
    com.o(.text.ThcomRX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.ThcomRX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.ThcomRX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.ThcomRX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.ThcomRX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.ThcomRX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.ThcomRX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.ThcomRX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.ThcomRX) refers to usart_stm32f4xx.o(.rodata.Driver_USART3) for Driver_USART3
    com.o(.text.ThcomRX) refers to com.o(.bss.recibidoRX) for recibidoRX
    com.o(.text.ThcomRX) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    com.o(.text.ThcomRX) refers to com.o(.text.controlarTramaRecibida) for controlarTramaRecibida
    com.o(.text.ThcomRX) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    com.o(.ARM.exidx.text.ThcomRX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.ThcomRX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.ThcomRX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.ThcomRX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.ThcomRX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.ThcomRX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.ThcomRX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.ThcomRX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.ThcomRX) refers to com.o(.text.ThcomRX) for [Anonymous Symbol]
    com.o(.text.USART_callback) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.USART_callback) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.USART_callback) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.USART_callback) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.USART_callback) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.USART_callback) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.USART_callback) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.USART_callback) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.USART_callback) refers to com.o(.bss.tramaCompletaTX) for tramaCompletaTX
    com.o(.text.USART_callback) refers to com.o(.text.procesarDatosTransmitidos) for procesarDatosTransmitidos
    com.o(.text.USART_callback) refers to com.o(.bss.tid_ThcomRX) for tid_ThcomRX
    com.o(.text.USART_callback) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    com.o(.ARM.exidx.text.USART_callback) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.USART_callback) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.USART_callback) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.USART_callback) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.USART_callback) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.USART_callback) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.USART_callback) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.USART_callback) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.USART_callback) refers to com.o(.text.USART_callback) for [Anonymous Symbol]
    com.o(.text.procesarDatosTransmitidos) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.procesarDatosTransmitidos) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.procesarDatosTransmitidos) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.procesarDatosTransmitidos) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.procesarDatosTransmitidos) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.procesarDatosTransmitidos) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.procesarDatosTransmitidos) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.procesarDatosTransmitidos) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.transfer) for transfer
    com.o(.text.procesarDatosTransmitidos) refers to usart_stm32f4xx.o(.rodata.Driver_USART3) for Driver_USART3
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.rodata.INI) for INI
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.comandoTX) for comandoTX
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.tramaTX) for tramaTX
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.longitudTX) for longitudTX
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.horaTX) for horaTX
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.rodata.str1.1) for .L.str
    com.o(.text.procesarDatosTransmitidos) refers to noretval__2snprintf.o(.text) for __2snprintf
    com.o(.text.procesarDatosTransmitidos) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.temperaturaTX) for temperaturaTX
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.medidaTX) for medidaTX
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.rodata.FIN) for FIN
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.tramaCompletaTX) for tramaCompletaTX
    com.o(.text.procesarDatosTransmitidos) refers to com.o(.bss.tid_ThcomTX) for tid_ThcomTX
    com.o(.text.procesarDatosTransmitidos) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.procesarDatosTransmitidos) refers to com.o(.text.procesarDatosTransmitidos) for [Anonymous Symbol]
    com.o(.text.getInformacionCola) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.getInformacionCola) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.getInformacionCola) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.getInformacionCola) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.getInformacionCola) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.getInformacionCola) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.getInformacionCola) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.getInformacionCola) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.getInformacionCola) refers to msgqueue.o(.bss.mid_MsgQueuePCTX) for mid_MsgQueuePCTX
    com.o(.text.getInformacionCola) refers to com.o(.bss.tramaTX) for tramaTX
    com.o(.text.getInformacionCola) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    com.o(.text.getInformacionCola) refers to com.o(.bss.comandoTX) for comandoTX
    com.o(.text.getInformacionCola) refers to com.o(.text.procesarDatosTransmitidos) for procesarDatosTransmitidos
    com.o(.ARM.exidx.text.getInformacionCola) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.getInformacionCola) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.getInformacionCola) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.getInformacionCola) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.getInformacionCola) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.getInformacionCola) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.getInformacionCola) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.getInformacionCola) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.getInformacionCola) refers to com.o(.text.getInformacionCola) for [Anonymous Symbol]
    com.o(.text.controlarTramaRecibida) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.controlarTramaRecibida) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.controlarTramaRecibida) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.controlarTramaRecibida) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.controlarTramaRecibida) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.controlarTramaRecibida) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.controlarTramaRecibida) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.controlarTramaRecibida) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.controlarTramaRecibida) refers to usart_stm32f4xx.o(.rodata.Driver_USART3) for Driver_USART3
    com.o(.text.controlarTramaRecibida) refers to com.o(.bss.cuenta) for cuenta
    com.o(.text.controlarTramaRecibida) refers to com.o(.bss.recibidoRX) for recibidoRX
    com.o(.text.controlarTramaRecibida) refers to com.o(.text.procesarDatosRecibidos) for procesarDatosRecibidos
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.controlarTramaRecibida) refers to com.o(.text.controlarTramaRecibida) for [Anonymous Symbol]
    com.o(.text.procesarDatosRecibidos) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.procesarDatosRecibidos) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.procesarDatosRecibidos) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.procesarDatosRecibidos) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.procesarDatosRecibidos) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.procesarDatosRecibidos) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.procesarDatosRecibidos) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.procesarDatosRecibidos) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.procesarDatosRecibidos) refers to com.o(.bss.receive) for receive
    com.o(.text.procesarDatosRecibidos) refers to com.o(.bss.recibidoRX) for recibidoRX
    com.o(.text.procesarDatosRecibidos) refers to com.o(.bss.comandoRX) for comandoRX
    com.o(.text.procesarDatosRecibidos) refers to usart_stm32f4xx.o(.rodata.Driver_USART3) for Driver_USART3
    com.o(.text.procesarDatosRecibidos) refers to com.o(.bss.temperaturaRX) for temperaturaRX
    com.o(.text.procesarDatosRecibidos) refers to com.o(.bss.horaRX) for horaRX
    com.o(.text.procesarDatosRecibidos) refers to com.o(.text.putInforamcionCola) for putInforamcionCola
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.procesarDatosRecibidos) refers to com.o(.text.procesarDatosRecibidos) for [Anonymous Symbol]
    com.o(.text.putInforamcionCola) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.text.putInforamcionCola) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.text.putInforamcionCola) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.text.putInforamcionCola) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.text.putInforamcionCola) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.text.putInforamcionCola) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.text.putInforamcionCola) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.text.putInforamcionCola) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.text.putInforamcionCola) refers to com.o(.bss.comandoRX) for comandoRX
    com.o(.text.putInforamcionCola) refers to com.o(.bss.tramaRX) for tramaRX
    com.o(.text.putInforamcionCola) refers to com.o(.bss.horaRX) for horaRX
    com.o(.text.putInforamcionCola) refers to com.o(.rodata.str1.1) for .L.str
    com.o(.text.putInforamcionCola) refers to __0sscanf.o(.text) for __0sscanf
    com.o(.text.putInforamcionCola) refers to com.o(.bss.temperaturaRX) for temperaturaRX
    com.o(.text.putInforamcionCola) refers to msgqueue.o(.bss.mid_MsgQueuePCRX) for mid_MsgQueuePCRX
    com.o(.text.putInforamcionCola) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    com.o(.ARM.exidx.text.putInforamcionCola) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.ARM.exidx.text.putInforamcionCola) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.ARM.exidx.text.putInforamcionCola) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.ARM.exidx.text.putInforamcionCola) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.ARM.exidx.text.putInforamcionCola) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.ARM.exidx.text.putInforamcionCola) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.ARM.exidx.text.putInforamcionCola) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.ARM.exidx.text.putInforamcionCola) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.ARM.exidx.text.putInforamcionCola) refers to com.o(.text.putInforamcionCola) for [Anonymous Symbol]
    com.o(.bss.tid_ThcomTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.tid_ThcomTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.tid_ThcomTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.tid_ThcomTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.tid_ThcomTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.tid_ThcomTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.tid_ThcomTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.tid_ThcomTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.tid_ThcomRX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.tid_ThcomRX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.tid_ThcomRX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.tid_ThcomRX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.tid_ThcomRX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.tid_ThcomRX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.tid_ThcomRX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.tid_ThcomRX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.tramaRX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.tramaRX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.tramaRX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.tramaRX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.tramaRX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.tramaRX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.tramaRX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.tramaRX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.cuenta) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.cuenta) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.cuenta) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.cuenta) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.cuenta) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.cuenta) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.cuenta) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.cuenta) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.tramaCompletaTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.tramaCompletaTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.tramaCompletaTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.tramaCompletaTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.tramaCompletaTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.tramaCompletaTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.tramaCompletaTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.tramaCompletaTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.transfer) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.transfer) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.transfer) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.transfer) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.transfer) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.transfer) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.transfer) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.transfer) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.rodata.INI) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.rodata.INI) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.rodata.INI) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.rodata.INI) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.rodata.INI) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.rodata.INI) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.rodata.INI) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.rodata.INI) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.comandoTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.comandoTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.comandoTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.comandoTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.comandoTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.comandoTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.comandoTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.comandoTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.tramaTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.tramaTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.tramaTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.tramaTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.tramaTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.tramaTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.tramaTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.tramaTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.longitudTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.longitudTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.longitudTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.longitudTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.longitudTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.longitudTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.longitudTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.longitudTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.horaTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.horaTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.horaTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.horaTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.horaTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.horaTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.horaTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.horaTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.rodata.str1.1) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.rodata.str1.1) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.rodata.str1.1) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.rodata.str1.1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.rodata.str1.1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.rodata.str1.1) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.rodata.str1.1) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.rodata.str1.1) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.temperaturaTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.temperaturaTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.temperaturaTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.temperaturaTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.temperaturaTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.temperaturaTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.temperaturaTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.temperaturaTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.medidaTX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.medidaTX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.medidaTX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.medidaTX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.medidaTX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.medidaTX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.medidaTX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.medidaTX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.rodata.FIN) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.rodata.FIN) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.rodata.FIN) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.rodata.FIN) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.rodata.FIN) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.rodata.FIN) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.rodata.FIN) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.rodata.FIN) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.recibidoRX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.recibidoRX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.recibidoRX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.recibidoRX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.recibidoRX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.recibidoRX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.recibidoRX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.recibidoRX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.receive) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.receive) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.receive) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.receive) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.receive) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.receive) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.receive) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.receive) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.comandoRX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.comandoRX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.comandoRX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.comandoRX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.comandoRX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.comandoRX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.comandoRX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.comandoRX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.temperaturaRX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.temperaturaRX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.temperaturaRX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.temperaturaRX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.temperaturaRX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.temperaturaRX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.temperaturaRX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.temperaturaRX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    com.o(.bss.horaRX) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    com.o(.bss.horaRX) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    com.o(.bss.horaRX) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    com.o(.bss.horaRX) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    com.o(.bss.horaRX) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    com.o(.bss.horaRX) refers (Special) to _printf_pad.o(.text) for _printf_pre_padding
    com.o(.bss.horaRX) refers (Special) to _scanf_int.o(.text) for _scanf_int
    com.o(.bss.horaRX) refers (Special) to scanf1.o(x$fpl$scanf1) for _scanf_real
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsException) refers to rtx_delay.o(.text.IsException) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_delay.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsException) refers to rtx_evflags.o(.text.IsException) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_evflags.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for isrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for EventFlagsClear
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for isrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_evflags.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_evflags.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsSet) refers to rtx_evflags.o(.text.atomic_set32) for atomic_set32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxObject) refers to rtx_evflags.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_set32) refers to rtx_evflags.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsClear) refers to rtx_evflags.o(.text.atomic_clr32) for atomic_clr32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_clr32) refers to rtx_evflags.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsException) refers to rtx_kernel.o(.text.IsException) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_kernel.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsPrivileged) refers to rtx_kernel.o(.text.IsPrivileged) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.osRtxKernelState) for osRtxKernelState
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelState) refers to rtx_kernel.o(.text.osRtxKernelState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.SVC_Setup) for SVC_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.SVC_Setup) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    rtx_kernel.o(.ARM.exidx.text.SVC_Setup) refers to rtx_kernel.o(.text.SVC_Setup) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.KernelBlock) for KernelBlock
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelBlock) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.GetPendSV) for GetPendSV
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.ClrPendSV) for ClrPendSV
    rtx_kernel.o(.ARM.exidx.text.KernelBlock) refers to rtx_kernel.o(.text.KernelBlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.GetPendSV) refers to rtx_kernel.o(.text.GetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.ClrPendSV) refers to rtx_kernel.o(.text.ClrPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.KernelUnblock) for KernelUnblock
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.text.SetPendSV) for SetPendSV
    rtx_kernel.o(.text.KernelUnblock) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.ARM.exidx.text.KernelUnblock) refers to rtx_kernel.o(.text.KernelUnblock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.SetPendSV) refers to rtx_kernel.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemHeadPtr) refers to rtx_memory.o(.text.MemHeadPtr) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemBlockPtr) refers to rtx_memory.o(.text.MemBlockPtr) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_link_get) for atomic_link_get
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_inc32) for atomic_inc32
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_get) refers to rtx_mempool.o(.text.atomic_link_get) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_inc32) refers to rtx_mempool.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_link_put) for atomic_link_put
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_dec32) for atomic_dec32
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_put) refers to rtx_mempool.o(.text.atomic_link_put) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_dec32) refers to rtx_mempool.o(.text.atomic_dec32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsException) refers to rtx_mempool.o(.text.IsException) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mempool.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for isrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for isrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxObject) refers to rtx_mempool.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsException) refers to rtx_msgqueue.o(.text.IsException) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_msgqueue.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for isrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for isrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxObject) refers to rtx_msgqueue.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.atomic_inc32) for atomic_inc32
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32) refers to rtx_msgqueue.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for atomic_dec32_nz
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_wr8) for atomic_wr8
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8) refers to rtx_msgqueue.o(.text.atomic_wr8) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxObject) refers to rtx_mutex.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsException) refers to rtx_mutex.o(.text.IsException) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mutex.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexId) refers to rtx_mutex.o(.text.osRtxMutexId) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsException) refers to rtx_semaphore.o(.text.IsException) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_semaphore.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for isrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for isrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxObject) refers to rtx_semaphore.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_system.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.isr_queue_get) for isr_queue_get
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMessageObject) for osRtxMessageObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxEventFlagsObject) for osRtxEventFlagsObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxSemaphoreObject) for osRtxSemaphoreObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for osRtxMemoryPoolObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_get) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.osRtxObject) for osRtxObject
    rtx_system.o(.ARM.exidx.text.isr_queue_get) refers to rtx_system.o(.text.isr_queue_get) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_system.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject) refers to rtx_system.o(.text.osRtxEventFlagsObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject) refers to rtx_system.o(.text.osRtxSemaphoreObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMessageObject) refers to rtx_system.o(.text.osRtxMessageObject) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.isr_queue_put) for isr_queue_put
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.SetPendSV) for SetPendSV
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_put) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.ARM.exidx.text.isr_queue_put) refers to rtx_system.o(.text.isr_queue_put) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.SetPendSV) refers to rtx_system.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_system.o(.text.atomic_dec16_nz) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_system.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lim) refers to rtx_system.o(.text.atomic_inc16_lim) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxObject) refers to rtx_system.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_system.o(.text.atomic_inc16_lt) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_system.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_thread.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxObject) refers to rtx_thread.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxEventFlagsObject) for osRtxEventFlagsObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMutexObject) for osRtxMutexObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxSemaphoreObject) for osRtxSemaphoreObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMemoryPoolObject) for osRtxMemoryPoolObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMessageQueueObject) for osRtxMessageQueueObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxEventFlagsObject) refers to rtx_thread.o(.text.osRtxEventFlagsObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMutexObject) refers to rtx_thread.o(.text.osRtxMutexObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxSemaphoreObject) refers to rtx_thread.o(.text.osRtxSemaphoreObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMemoryPoolObject) refers to rtx_thread.o(.text.osRtxMemoryPoolObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMessageQueueObject) refers to rtx_thread.o(.text.osRtxMessageQueueObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_thread.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadId) refers to rtx_thread.o(.text.osRtxThreadId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsException) refers to rtx_thread.o(.text.IsException) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for isrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_thread.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_thread.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadState) for osRtxThreadState
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadState) refers to rtx_thread.o(.text.osRtxThreadState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for osRtxThreadPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsSet) refers to rtx_thread.o(.text.atomic_set32) for atomic_set32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_set32) refers to rtx_thread.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for ThreadFlagsClear
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsClear) refers to rtx_thread.o(.text.atomic_clr32) for atomic_clr32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_clr32) refers to rtx_thread.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerUnlink) for TimerUnlink
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsException) refers to rtx_timer.o(.text.IsException) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_timer.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerUnlink) refers to rtx_timer.o(.text.TimerUnlink) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.osRtxTimerId) refers to rtx_timer.o(.text.osRtxTimerId) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_EV_IRQHandler) refers to i2c_stm32f4xx.o(.text.I2C_EV_IRQHandler) for I2C_EV_IRQHandler
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_EV_IRQHandler) refers to i2c_stm32f4xx.o(.text.I2C1_EV_IRQHandler) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_EV_IRQHandler) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_EV_IRQHandler) refers to i2c_stm32f4xx.o(.text.I2C_EV_IRQHandler) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_ER_IRQHandler) refers to i2c_stm32f4xx.o(.text.I2C_ER_IRQHandler) for I2C_ER_IRQHandler
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_ER_IRQHandler) refers to i2c_stm32f4xx.o(.text.I2C1_ER_IRQHandler) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_ER_IRQHandler) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_ER_IRQHandler) refers to i2c_stm32f4xx.o(.text.I2C_ER_IRQHandler) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.ARM.exidx.text.I2CX_GetVersion) refers to i2c_stm32f4xx.o(.text.I2CX_GetVersion) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.ARM.exidx.text.I2CX_GetCapabilities) refers to i2c_stm32f4xx.o(.text.I2CX_GetCapabilities) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_Initialize) refers to i2c_stm32f4xx.o(.text.I2C_Initialize) for I2C_Initialize
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_Initialize) refers to i2c_stm32f4xx.o(.text.I2C1_Initialize) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_Uninitialize) refers to i2c_stm32f4xx.o(.text.I2C_Uninitialize) for I2C_Uninitialize
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_Uninitialize) refers to i2c_stm32f4xx.o(.text.I2C1_Uninitialize) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_PowerControl) refers to i2c_stm32f4xx.o(.text.I2C_PowerControl) for I2C_PowerControl
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_PowerControl) refers to i2c_stm32f4xx.o(.text.I2C1_PowerControl) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_MasterTransmit) refers to i2c_stm32f4xx.o(.text.I2C_MasterTransmit) for I2C_MasterTransmit
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_MasterTransmit) refers to i2c_stm32f4xx.o(.text.I2C1_MasterTransmit) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_MasterReceive) refers to i2c_stm32f4xx.o(.text.I2C_MasterReceive) for I2C_MasterReceive
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_MasterReceive) refers to i2c_stm32f4xx.o(.text.I2C1_MasterReceive) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_SlaveTransmit) refers to i2c_stm32f4xx.o(.text.I2C_SlaveTransmit) for I2C_SlaveTransmit
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_SlaveTransmit) refers to i2c_stm32f4xx.o(.text.I2C1_SlaveTransmit) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_SlaveReceive) refers to i2c_stm32f4xx.o(.text.I2C_SlaveReceive) for I2C_SlaveReceive
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_SlaveReceive) refers to i2c_stm32f4xx.o(.text.I2C1_SlaveReceive) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_GetDataCount) refers to i2c_stm32f4xx.o(.text.I2C_GetDataCount) for I2C_GetDataCount
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_GetDataCount) refers to i2c_stm32f4xx.o(.text.I2C1_GetDataCount) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_Control) refers to i2c_stm32f4xx.o(.text.I2C_Control) for I2C_Control
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_Control) refers to i2c_stm32f4xx.o(.text.I2C1_Control) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C1_GetStatus) refers to i2c_stm32f4xx.o(.text.I2C_GetStatus) for I2C_GetStatus
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_GetStatus) refers to i2c_stm32f4xx.o(.text.I2C1_GetStatus) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_Initialize) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.text.I2C_Initialize) refers to i2c_stm32f4xx.o(.text.Enable_GPIO_Clock) for Enable_GPIO_Clock
    i2c_stm32f4xx.o(.text.I2C_Initialize) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    i2c_stm32f4xx.o(.text.I2C_Initialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_Initialize) refers to i2c_stm32f4xx.o(.text.I2C_Initialize) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.ARM.exidx.text.Enable_GPIO_Clock) refers to i2c_stm32f4xx.o(.text.Enable_GPIO_Clock) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_Uninitialize) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    i2c_stm32f4xx.o(.text.I2C_Uninitialize) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_Uninitialize) refers to i2c_stm32f4xx.o(.text.I2C_Uninitialize) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_PowerControl) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    i2c_stm32f4xx.o(.text.I2C_PowerControl) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.text.I2C_PowerControl) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    i2c_stm32f4xx.o(.text.I2C_PowerControl) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for HAL_NVIC_ClearPendingIRQ
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_PowerControl) refers to i2c_stm32f4xx.o(.text.I2C_PowerControl) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_MasterTransmit) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.text.I2C_MasterTransmit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_MasterTransmit) refers to i2c_stm32f4xx.o(.text.I2C_MasterTransmit) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_MasterReceive) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.text.I2C_MasterReceive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_MasterReceive) refers to i2c_stm32f4xx.o(.text.I2C_MasterReceive) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_SlaveTransmit) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_SlaveTransmit) refers to i2c_stm32f4xx.o(.text.I2C_SlaveTransmit) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_SlaveReceive) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_SlaveReceive) refers to i2c_stm32f4xx.o(.text.I2C_SlaveReceive) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_GetDataCount) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_GetDataCount) refers to i2c_stm32f4xx.o(.text.I2C_GetDataCount) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_Control) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.text.I2C_Control) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    i2c_stm32f4xx.o(.text.I2C_Control) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    i2c_stm32f4xx.o(.text.I2C_Control) refers to stm32f4xx_hal.o(.text.HAL_Delay) for HAL_Delay
    i2c_stm32f4xx.o(.text.I2C_Control) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    i2c_stm32f4xx.o(.text.I2C_Control) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_Control) refers to i2c_stm32f4xx.o(.text.I2C_Control) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.text.I2C_GetStatus) refers to i2c_stm32f4xx.o(.bss.I2C1_Info) for I2C1_Info
    i2c_stm32f4xx.o(.ARM.exidx.text.I2C_GetStatus) refers to i2c_stm32f4xx.o(.text.I2C_GetStatus) for [Anonymous Symbol]
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2CX_GetVersion) for I2CX_GetVersion
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2CX_GetCapabilities) for I2CX_GetCapabilities
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_Initialize) for I2C1_Initialize
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_Uninitialize) for I2C1_Uninitialize
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_PowerControl) for I2C1_PowerControl
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_MasterTransmit) for I2C1_MasterTransmit
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_MasterReceive) for I2C1_MasterReceive
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_SlaveTransmit) for I2C1_SlaveTransmit
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_SlaveReceive) for I2C1_SlaveReceive
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_GetDataCount) for I2C1_GetDataCount
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_Control) for I2C1_Control
    i2c_stm32f4xx.o(.rodata.Driver_I2C1) refers to i2c_stm32f4xx.o(.text.I2C1_GetStatus) for I2C1_GetStatus
    usart_stm32f4xx.o(.ARM.exidx.text.USART_IRQHandler) refers to usart_stm32f4xx.o(.text.USART_IRQHandler) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_IRQHandler) refers to usart_stm32f4xx.o(.rodata.USART3_Resources) for USART3_Resources
    usart_stm32f4xx.o(.text.USART3_IRQHandler) refers to usart_stm32f4xx.o(.text.USART_IRQHandler) for USART_IRQHandler
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_IRQHandler) refers to usart_stm32f4xx.o(.text.USART3_IRQHandler) for [Anonymous Symbol]
    usart_stm32f4xx.o(.ARM.exidx.text.USARTx_GetVersion) refers to usart_stm32f4xx.o(.text.USARTx_GetVersion) for [Anonymous Symbol]
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetCapabilities) refers to usart_stm32f4xx.o(.text.USART3_GetCapabilities) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_Initialize) refers to usart_stm32f4xx.o(.text.USART_Initialize) for USART_Initialize
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_Initialize) refers to usart_stm32f4xx.o(.text.USART3_Initialize) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_Uninitialize) refers to usart_stm32f4xx.o(.text.USART_Uninitialize) for USART_Uninitialize
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_Uninitialize) refers to usart_stm32f4xx.o(.text.USART3_Uninitialize) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_PowerControl) refers to usart_stm32f4xx.o(.text.USART_PowerControl) for USART_PowerControl
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_PowerControl) refers to usart_stm32f4xx.o(.text.USART3_PowerControl) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_Send) refers to usart_stm32f4xx.o(.text.USART_Send) for USART_Send
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_Send) refers to usart_stm32f4xx.o(.text.USART3_Send) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_Receive) refers to usart_stm32f4xx.o(.text.USART_Receive) for USART_Receive
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_Receive) refers to usart_stm32f4xx.o(.text.USART3_Receive) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_Transfer) refers to usart_stm32f4xx.o(.text.USART_Transfer) for USART_Transfer
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_Transfer) refers to usart_stm32f4xx.o(.text.USART3_Transfer) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_GetTxCount) refers to usart_stm32f4xx.o(.text.USART_GetTxCount) for USART_GetTxCount
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetTxCount) refers to usart_stm32f4xx.o(.text.USART3_GetTxCount) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_GetRxCount) refers to usart_stm32f4xx.o(.text.USART_GetRxCount) for USART_GetRxCount
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetRxCount) refers to usart_stm32f4xx.o(.text.USART3_GetRxCount) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_Control) refers to usart_stm32f4xx.o(.text.USART_Control) for USART_Control
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_Control) refers to usart_stm32f4xx.o(.text.USART3_Control) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_GetStatus) refers to usart_stm32f4xx.o(.text.USART_GetStatus) for USART_GetStatus
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetStatus) refers to usart_stm32f4xx.o(.text.USART3_GetStatus) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_SetModemControl) refers to usart_stm32f4xx.o(.text.USART_SetModemControl) for USART_SetModemControl
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_SetModemControl) refers to usart_stm32f4xx.o(.text.USART3_SetModemControl) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART3_GetModemStatus) refers to usart_stm32f4xx.o(.text.USART_GetModemStatus) for USART_GetModemStatus
    usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetModemStatus) refers to usart_stm32f4xx.o(.text.USART3_GetModemStatus) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_Initialize) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.text.USART_Initialize) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.text.USART_Initialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    usart_stm32f4xx.o(.text.USART_Initialize) refers to usart_stm32f4xx.o(.text.Enable_GPIO_Clock) for Enable_GPIO_Clock
    usart_stm32f4xx.o(.ARM.exidx.text.USART_Initialize) refers to usart_stm32f4xx.o(.text.USART_Initialize) for [Anonymous Symbol]
    usart_stm32f4xx.o(.ARM.exidx.text.Enable_GPIO_Clock) refers to usart_stm32f4xx.o(.text.Enable_GPIO_Clock) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_Uninitialize) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    usart_stm32f4xx.o(.text.USART_Uninitialize) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.ARM.exidx.text.USART_Uninitialize) refers to usart_stm32f4xx.o(.text.USART_Uninitialize) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_PowerControl) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    usart_stm32f4xx.o(.text.USART_PowerControl) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.text.USART_PowerControl) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.text.USART_PowerControl) refers to usart_stm32f4xx.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    usart_stm32f4xx.o(.text.USART_PowerControl) refers to usart_stm32f4xx.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    usart_stm32f4xx.o(.text.USART_PowerControl) refers to usart_stm32f4xx.o(.text.USART_PeripheralReset) for USART_PeripheralReset
    usart_stm32f4xx.o(.ARM.exidx.text.USART_PowerControl) refers to usart_stm32f4xx.o(.text.USART_PowerControl) for [Anonymous Symbol]
    usart_stm32f4xx.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to usart_stm32f4xx.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    usart_stm32f4xx.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to usart_stm32f4xx.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    usart_stm32f4xx.o(.ARM.exidx.text.USART_PeripheralReset) refers to usart_stm32f4xx.o(.text.USART_PeripheralReset) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_Send) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.text.USART_Send) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.text.USART_Send) refers to usart_stm32f4xx.o(.text.USART_Receive) for USART_Receive
    usart_stm32f4xx.o(.ARM.exidx.text.USART_Send) refers to usart_stm32f4xx.o(.text.USART_Send) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_Receive) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.text.USART_Receive) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.text.USART_Receive) refers to usart_stm32f4xx.o(.text.USART_Send) for USART_Send
    usart_stm32f4xx.o(.ARM.exidx.text.USART_Receive) refers to usart_stm32f4xx.o(.text.USART_Receive) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_Transfer) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.text.USART_Transfer) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.text.USART_Transfer) refers to usart_stm32f4xx.o(.text.USART_Receive) for USART_Receive
    usart_stm32f4xx.o(.text.USART_Transfer) refers to usart_stm32f4xx.o(.text.USART_Send) for USART_Send
    usart_stm32f4xx.o(.ARM.exidx.text.USART_Transfer) refers to usart_stm32f4xx.o(.text.USART_Transfer) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_GetTxCount) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.ARM.exidx.text.USART_GetTxCount) refers to usart_stm32f4xx.o(.text.USART_GetTxCount) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_GetRxCount) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.ARM.exidx.text.USART_GetRxCount) refers to usart_stm32f4xx.o(.text.USART_GetRxCount) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_Control) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.text.USART_Control) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    usart_stm32f4xx.o(.text.USART_Control) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.text.USART_Control) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    usart_stm32f4xx.o(.text.USART_Control) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    usart_stm32f4xx.o(.ARM.exidx.text.USART_Control) refers to usart_stm32f4xx.o(.text.USART_Control) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_GetStatus) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for USART3_TransferInfo
    usart_stm32f4xx.o(.text.USART_GetStatus) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.ARM.exidx.text.USART_GetStatus) refers to usart_stm32f4xx.o(.text.USART_GetStatus) for [Anonymous Symbol]
    usart_stm32f4xx.o(.text.USART_SetModemControl) refers to usart_stm32f4xx.o(.bss.USART3_Info) for USART3_Info
    usart_stm32f4xx.o(.ARM.exidx.text.USART_SetModemControl) refers to usart_stm32f4xx.o(.text.USART_SetModemControl) for [Anonymous Symbol]
    usart_stm32f4xx.o(.ARM.exidx.text.USART_GetModemStatus) refers to usart_stm32f4xx.o(.text.USART_GetModemStatus) for [Anonymous Symbol]
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USARTx_GetVersion) for USARTx_GetVersion
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_GetCapabilities) for USART3_GetCapabilities
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_Initialize) for USART3_Initialize
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_Uninitialize) for USART3_Uninitialize
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_PowerControl) for USART3_PowerControl
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_Send) for USART3_Send
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_Receive) for USART3_Receive
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_Transfer) for USART3_Transfer
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_GetTxCount) for USART3_GetTxCount
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_GetRxCount) for USART3_GetRxCount
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_Control) for USART3_Control
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_GetStatus) for USART3_GetStatus
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_SetModemControl) for USART3_SetModemControl
    usart_stm32f4xx.o(.rodata.Driver_USART3) refers to usart_stm32f4xx.o(.text.USART3_GetModemStatus) for USART3_GetModemStatus
    usart_stm32f4xx.o(.rodata.USART3_Resources) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    usart_stm32f4xx.o(.rodata.USART3_Resources) refers to usart_stm32f4xx.o(.rodata.USART3_tx) for [Anonymous Symbol]
    usart_stm32f4xx.o(.rodata.USART3_Resources) refers to usart_stm32f4xx.o(.rodata.USART3_rx) for [Anonymous Symbol]
    usart_stm32f4xx.o(.rodata.USART3_Resources) refers to usart_stm32f4xx.o(.bss.USART3_Info) for [Anonymous Symbol]
    usart_stm32f4xx.o(.rodata.USART3_Resources) refers to usart_stm32f4xx.o(.bss.USART3_TransferInfo) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f4xx_hal.o(.text.HAL_Init) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f4xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Delay) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f4xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f4xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f4xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f4xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f4xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableMemorySwappingBank) refers to stm32f4xx_hal.o(.text.HAL_EnableMemorySwappingBank) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableMemorySwappingBank) refers to stm32f4xx_hal.o(.text.HAL_DisableMemorySwappingBank) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_MspInit) for HAL_ADC_MspInit
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Init) refers to stm32f4xx_hal_adc.o(.text.ADC_Init) for ADC_Init
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Init) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_Init) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspInit) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.ADC_Init) refers to stm32f4xx_hal_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_DeInit) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_MspDeInit) for HAL_ADC_MspDeInit
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_DeInit) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspDeInit) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Start) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_Start) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_PollForConversion) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForConversion) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_PollForConversion) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_PollForEvent) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForEvent) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_PollForEvent) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_IT) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_IT) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_Stop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32f4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for HAL_ADCEx_InjectedConvCpltCallback
    stm32f4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32f4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for HAL_ADC_LevelOutOfWindowCallback
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_IRQHandler) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_LevelOutOfWindowCallback) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ErrorCallback) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32f4xx_hal_adc.o(.text.ADC_DMAConvCplt) for ADC_DMAConvCplt
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32f4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for ADC_DMAHalfConvCplt
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32f4xx_hal_adc.o(.text.ADC_DMAError) for ADC_DMAError
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_DMA) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.ADC_DMAConvCplt) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32f4xx_hal_adc.o(.text.ADC_DMAConvCplt) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32f4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAConvCplt) refers to stm32f4xx_hal_adc.o(.text.ADC_DMAConvCplt) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for HAL_ADC_ConvHalfCpltCallback
    stm32f4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAHalfConvCplt) refers to stm32f4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.ADC_DMAError) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32f4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAError) refers to stm32f4xx_hal_adc.o(.text.ADC_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_DMA) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_Stop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetValue) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_GetValue) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvHalfCpltCallback) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConfigChannel) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_AnalogWDGConfig) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetState) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetError) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart_IT) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedPollForConversion) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop_IT) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedGetValue) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAError) for ADC_MultiModeDMAError
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAConvCplt) for ADC_MultiModeDMAConvCplt
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAHalfConvCplt) for ADC_MultiModeDMAHalfConvCplt
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStart_DMA) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAConvCplt) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback) for HAL_ADC_ConvCpltCallback
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAConvCplt) refers to stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAConvCplt) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAHalfConvCplt) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback) for HAL_ADC_ConvHalfCpltCallback
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAHalfConvCplt) refers to stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAHalfConvCplt) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAError) refers to stm32f4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback) for HAL_ADC_ErrorCallback
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAError) refers to stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAError) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStop_DMA) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeGetValue) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConvCpltCallback) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConfigChannel) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeConfigChannel) refers to stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam) for DMA_CheckFifoParam
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam) refers to stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Init) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MspInit) for HAL_I2C_MspInit
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Init) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Init) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Init) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MspInit) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_DeInit) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MspDeInit) for HAL_I2C_MspDeInit
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_DeInit) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MspDeInit) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestWrite) for I2C_MasterRequestWrite
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnBTFFlagUntilTimeout) for I2C_WaitOnBTFFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout) for I2C_WaitOnTXEFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Transmit) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestWrite) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestWrite) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnMasterAddressFlagUntilTimeout) for I2C_WaitOnMasterAddressFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterRequestWrite) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestWrite) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_IsAcknowledgeFailed) for I2C_IsAcknowledgeFailed
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnTXEFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnBTFFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_IsAcknowledgeFailed) for I2C_IsAcknowledgeFailed
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnBTFFlagUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnBTFFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnBTFFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestRead) for I2C_MasterRequestRead
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnRXNEFlagUntilTimeout) for I2C_WaitOnRXNEFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Receive) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestRead) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestRead) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnMasterAddressFlagUntilTimeout) for I2C_WaitOnMasterAddressFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterRequestRead) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestRead) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnRXNEFlagUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnRXNEFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnRXNEFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout) for I2C_WaitOnTXEFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Transmit) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnRXNEFlagUntilTimeout) for I2C_WaitOnRXNEFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout) for I2C_WaitOnSTOPFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Receive) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_IsAcknowledgeFailed) for I2C_IsAcknowledgeFailed
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnSTOPFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Transmit_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Receive_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Transmit_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Receive_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_DMA) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveTxCpltCallback) for HAL_I2C_SlaveTxCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveRxCpltCallback) for HAL_I2C_SlaveRxCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemRxCpltCallback) for HAL_I2C_MemRxCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterRxCpltCallback) for HAL_I2C_MasterRxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_DMAXferCplt) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_DMAError) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for HAL_DMA_GetError
    stm32f4xx_hal_i2c.o(.text.I2C_DMAError) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_DMAError) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_DMA) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write) refers to stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite) for I2C_RequestMemoryWrite
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout) for I2C_WaitOnTXEFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnBTFFlagUntilTimeout) for I2C_WaitOnBTFFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Write) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnMasterAddressFlagUntilTimeout) for I2C_WaitOnMasterAddressFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout) for I2C_WaitOnTXEFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_RequestMemoryWrite) refers to stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read) refers to stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryRead) for I2C_RequestMemoryRead
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnRXNEFlagUntilTimeout) for I2C_WaitOnRXNEFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Read) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryRead) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryRead) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnMasterAddressFlagUntilTimeout) for I2C_WaitOnMasterAddressFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryRead) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout) for I2C_WaitOnTXEFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_RequestMemoryRead) refers to stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryRead) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Write_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Read_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite) for I2C_RequestMemoryWrite
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Write_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryRead) for I2C_RequestMemoryRead
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Read_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_IsDeviceReady) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_IsDeviceReady) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout) for I2C_WaitOnFlagUntilTimeout
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_IsDeviceReady) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_IsDeviceReady) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Seq_Transmit_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_DMA) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Seq_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Seq_Receive_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_DMA) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Seq_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Seq_Transmit_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort) for I2C_DMAAbort
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Seq_Transmit_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_AbortCpltCallback) for HAL_I2C_AbortCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_DMAAbort) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Seq_Receive_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort) for I2C_DMAAbort
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt) for I2C_DMAXferCplt
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAError) for I2C_DMAError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Seq_Receive_DMA) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_EnableListen_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_EnableListen_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_DisableListen_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_DisableListen_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Abort_IT) refers to stm32f4xx_hal_i2c.o(.text.I2C_ITError) for I2C_ITError
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Abort_IT) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_ITError) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_AbortCpltCallback) for HAL_I2C_AbortCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_ITError) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort) for I2C_DMAAbort
    stm32f4xx_hal_i2c.o(.text.I2C_ITError) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_i2c.o(.text.I2C_ITError) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f4xx_hal_i2c.o(.text.I2C_ITError) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ListenCpltCallback) for HAL_I2C_ListenCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_ITError) refers to stm32f4xx_hal_i2c.o(.text.I2C_ITError) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_SlaveTransmit_TXE) for I2C_SlaveTransmit_TXE
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_RXNE) for I2C_MasterReceive_RXNE
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_ConvertOtherXferOptions) for I2C_ConvertOtherXferOptions
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_Master_SB) for I2C_Master_SB
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_Slave_ADDR) for I2C_Slave_ADDR
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF) for I2C_Slave_STOPF
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_Master_ADD10) for I2C_Master_ADD10
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_Master_ADDR) for I2C_Master_ADDR
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_TXE) for I2C_MasterTransmit_TXE
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_SlaveReceive_RXNE) for I2C_SlaveReceive_RXNE
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_SlaveTransmit_BTF) for I2C_SlaveTransmit_BTF
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_BTF) for I2C_MasterReceive_BTF
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_SlaveReceive_BTF) for I2C_SlaveReceive_BTF
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_BTF) for I2C_MasterTransmit_BTF
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_MemoryTransmit_TXE_BTF) for I2C_MemoryTransmit_TXE_BTF
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_EV_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_ConvertOtherXferOptions) refers to stm32f4xx_hal_i2c.o(.text.I2C_ConvertOtherXferOptions) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Master_SB) refers to stm32f4xx_hal_i2c.o(.text.I2C_Master_SB) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Master_ADD10) refers to stm32f4xx_hal_i2c.o(.text.I2C_Master_ADD10) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Master_ADDR) refers to stm32f4xx_hal_i2c.o(.text.I2C_Master_ADDR) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_TXE) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemTxCpltCallback) for HAL_I2C_MemTxCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_TXE) refers to stm32f4xx_hal_i2c.o(.text.I2C_MemoryTransmit_TXE_BTF) for I2C_MemoryTransmit_TXE_BTF
    stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_TXE) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterTxCpltCallback) for HAL_I2C_MasterTxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterTransmit_TXE) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_TXE) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_BTF) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterTxCpltCallback) for HAL_I2C_MasterTxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterTransmit_BTF) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_BTF) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_MemoryTransmit_TXE_BTF) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemTxCpltCallback) for HAL_I2C_MemTxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MemoryTransmit_TXE_BTF) refers to stm32f4xx_hal_i2c.o(.text.I2C_MemoryTransmit_TXE_BTF) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_RXNE) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPRequestThroughIT) for I2C_WaitOnSTOPRequestThroughIT
    stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_RXNE) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ErrorCallback) for HAL_I2C_ErrorCallback
    stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_RXNE) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemRxCpltCallback) for HAL_I2C_MemRxCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_RXNE) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterRxCpltCallback) for HAL_I2C_MasterRxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterReceive_RXNE) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_RXNE) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_BTF) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemRxCpltCallback) for HAL_I2C_MemRxCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_BTF) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterRxCpltCallback) for HAL_I2C_MasterRxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterReceive_BTF) refers to stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_BTF) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_ADDR) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_AddrCallback) for HAL_I2C_AddrCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Slave_ADDR) refers to stm32f4xx_hal_i2c.o(.text.I2C_Slave_ADDR) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState) for HAL_DMA_GetState
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF) refers to stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort) for I2C_DMAAbort
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF) refers to stm32f4xx_hal_i2c.o(.text.I2C_ITError) for I2C_ITError
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveRxCpltCallback) for HAL_I2C_SlaveRxCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ListenCpltCallback) for HAL_I2C_ListenCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Slave_STOPF) refers to stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_SlaveTransmit_TXE) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveTxCpltCallback) for HAL_I2C_SlaveTxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_SlaveTransmit_TXE) refers to stm32f4xx_hal_i2c.o(.text.I2C_SlaveTransmit_TXE) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_SlaveTransmit_BTF) refers to stm32f4xx_hal_i2c.o(.text.I2C_SlaveTransmit_BTF) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_SlaveReceive_RXNE) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveRxCpltCallback) for HAL_I2C_SlaveRxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_SlaveReceive_RXNE) refers to stm32f4xx_hal_i2c.o(.text.I2C_SlaveReceive_RXNE) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_SlaveReceive_BTF) refers to stm32f4xx_hal_i2c.o(.text.I2C_SlaveReceive_BTF) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_ER_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_ITError) for I2C_ITError
    stm32f4xx_hal_i2c.o(.text.HAL_I2C_ER_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.I2C_Slave_AF) for I2C_Slave_AF
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_ER_IRQHandler) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ER_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_AF) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ListenCpltCallback) for HAL_I2C_ListenCpltCallback
    stm32f4xx_hal_i2c.o(.text.I2C_Slave_AF) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveTxCpltCallback) for HAL_I2C_SlaveTxCpltCallback
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Slave_AF) refers to stm32f4xx_hal_i2c.o(.text.I2C_Slave_AF) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MasterTxCpltCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterTxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MasterRxCpltCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterRxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_SlaveTxCpltCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveTxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_SlaveRxCpltCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveRxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_AddrCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_AddrCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_ListenCpltCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ListenCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MemTxCpltCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemTxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MemRxCpltCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemRxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_ErrorCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_AbortCpltCallback) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_AbortCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_GetState) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_GetMode) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_GetMode) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_GetError) refers to stm32f4xx_hal_i2c.o(.text.HAL_I2C_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPRequestThroughIT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnSTOPRequestThroughIT) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPRequestThroughIT) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.text.I2C_WaitOnMasterAddressFlagUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnMasterAddressFlagUntilTimeout) refers to stm32f4xx_hal_i2c.o(.text.I2C_WaitOnMasterAddressFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_IsAcknowledgeFailed) refers to stm32f4xx_hal_i2c.o(.text.I2C_IsAcknowledgeFailed) for [Anonymous Symbol]
    stm32f4xx_hal_i2c_ex.o(.ARM.exidx.text.HAL_I2CEx_ConfigAnalogFilter) refers to stm32f4xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigAnalogFilter) for [Anonymous Symbol]
    stm32f4xx_hal_i2c_ex.o(.ARM.exidx.text.HAL_I2CEx_ConfigDigitalFilter) refers to stm32f4xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigDigitalFilter) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_Init) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_MspInit) for HAL_USART_MspInit
    stm32f4xx_hal_usart.o(.text.HAL_USART_Init) refers to stm32f4xx_hal_usart.o(.text.USART_SetConfig) for USART_SetConfig
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Init) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Init) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_MspInit) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_SetConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    stm32f4xx_hal_usart.o(.text.USART_SetConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    stm32f4xx_hal_usart.o(.text.USART_SetConfig) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_SetConfig) refers to stm32f4xx_hal_usart.o(.text.USART_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_DeInit) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_MspDeInit) for HAL_USART_MspDeInit
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_DeInit) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_MspDeInit) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit) refers to stm32f4xx_hal_usart.o(.text.USART_WaitOnFlagUntilTimeout) for USART_WaitOnFlagUntilTimeout
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Transmit) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_WaitOnFlagUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_WaitOnFlagUntilTimeout) refers to stm32f4xx_hal_usart.o(.text.USART_WaitOnFlagUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_Receive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_usart.o(.text.HAL_USART_Receive) refers to stm32f4xx_hal_usart.o(.text.USART_WaitOnFlagUntilTimeout) for USART_WaitOnFlagUntilTimeout
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Receive) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Receive) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive) refers to stm32f4xx_hal_usart.o(.text.USART_WaitOnFlagUntilTimeout) for USART_WaitOnFlagUntilTimeout
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TransmitReceive) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Transmit_IT) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Receive_IT) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TransmitReceive_IT) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMAError) for USART_DMAError
    stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMATransmitCplt) for USART_DMATransmitCplt
    stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMATxHalfCplt) for USART_DMATxHalfCplt
    stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Transmit_DMA) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_DMATransmitCplt) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TxCpltCallback) for HAL_USART_TxCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMATransmitCplt) refers to stm32f4xx_hal_usart.o(.text.USART_DMATransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_DMATxHalfCplt) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TxHalfCpltCallback) for HAL_USART_TxHalfCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMATxHalfCplt) refers to stm32f4xx_hal_usart.o(.text.USART_DMATxHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_DMAError) refers to stm32f4xx_hal_usart.o(.text.USART_EndTxTransfer) for USART_EndTxTransfer
    stm32f4xx_hal_usart.o(.text.USART_DMAError) refers to stm32f4xx_hal_usart.o(.text.USART_EndRxTransfer) for USART_EndRxTransfer
    stm32f4xx_hal_usart.o(.text.USART_DMAError) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_ErrorCallback) for HAL_USART_ErrorCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMAError) refers to stm32f4xx_hal_usart.o(.text.USART_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_Receive_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMAReceiveCplt) for USART_DMAReceiveCplt
    stm32f4xx_hal_usart.o(.text.HAL_USART_Receive_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMARxHalfCplt) for USART_DMARxHalfCplt
    stm32f4xx_hal_usart.o(.text.HAL_USART_Receive_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMAError) for USART_DMAError
    stm32f4xx_hal_usart.o(.text.HAL_USART_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Receive_DMA) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_DMAReceiveCplt) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TxRxCpltCallback) for HAL_USART_TxRxCpltCallback
    stm32f4xx_hal_usart.o(.text.USART_DMAReceiveCplt) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_RxCpltCallback) for HAL_USART_RxCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMAReceiveCplt) refers to stm32f4xx_hal_usart.o(.text.USART_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_DMARxHalfCplt) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_RxHalfCpltCallback) for HAL_USART_RxHalfCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMARxHalfCplt) refers to stm32f4xx_hal_usart.o(.text.USART_DMARxHalfCplt) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMAReceiveCplt) for USART_DMAReceiveCplt
    stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMARxHalfCplt) for USART_DMARxHalfCplt
    stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMATransmitCplt) for USART_DMATransmitCplt
    stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMATxHalfCplt) for USART_DMATxHalfCplt
    stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_DMA) refers to stm32f4xx_hal_usart.o(.text.USART_DMAError) for USART_DMAError
    stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TransmitReceive_DMA) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_DMAPause) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_DMAPause) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_DMAResume) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_DMAResume) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_DMAStop) refers to stm32f4xx_hal_usart.o(.text.USART_EndTxTransfer) for USART_EndTxTransfer
    stm32f4xx_hal_usart.o(.text.HAL_USART_DMAStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_usart.o(.text.HAL_USART_DMAStop) refers to stm32f4xx_hal_usart.o(.text.USART_EndRxTransfer) for USART_EndRxTransfer
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_DMAStop) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_DMAStop) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_EndTxTransfer) refers to stm32f4xx_hal_usart.o(.text.USART_EndTxTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_EndRxTransfer) refers to stm32f4xx_hal_usart.o(.text.USART_EndRxTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Abort) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_Abort_IT) refers to stm32f4xx_hal_usart.o(.text.USART_DMATxAbortCallback) for USART_DMATxAbortCallback
    stm32f4xx_hal_usart.o(.text.HAL_USART_Abort_IT) refers to stm32f4xx_hal_usart.o(.text.USART_DMARxAbortCallback) for USART_DMARxAbortCallback
    stm32f4xx_hal_usart.o(.text.HAL_USART_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_usart.o(.text.HAL_USART_Abort_IT) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_AbortCpltCallback) for HAL_USART_AbortCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Abort_IT) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_DMATxAbortCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_AbortCpltCallback) for HAL_USART_AbortCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMATxAbortCallback) refers to stm32f4xx_hal_usart.o(.text.USART_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_DMARxAbortCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_AbortCpltCallback) for HAL_USART_AbortCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMARxAbortCallback) refers to stm32f4xx_hal_usart.o(.text.USART_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_AbortCpltCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_AbortCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_usart.o(.text.USART_Receive_IT) for USART_Receive_IT
    stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_usart.o(.text.USART_EndTransmit_IT) for USART_EndTransmit_IT
    stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_usart.o(.text.USART_Transmit_IT) for USART_Transmit_IT
    stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_usart.o(.text.USART_TransmitReceive_IT) for USART_TransmitReceive_IT
    stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_usart.o(.text.USART_EndRxTransfer) for USART_EndRxTransfer
    stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_usart.o(.text.USART_DMAAbortOnError) for USART_DMAAbortOnError
    stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_ErrorCallback) for HAL_USART_ErrorCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_IRQHandler) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_Receive_IT) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_RxCpltCallback) for HAL_USART_RxCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_Receive_IT) refers to stm32f4xx_hal_usart.o(.text.USART_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_TransmitReceive_IT) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TxRxCpltCallback) for HAL_USART_TxRxCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_TransmitReceive_IT) refers to stm32f4xx_hal_usart.o(.text.USART_TransmitReceive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_DMAAbortOnError) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_ErrorCallback) for HAL_USART_ErrorCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMAAbortOnError) refers to stm32f4xx_hal_usart.o(.text.USART_DMAAbortOnError) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_ErrorCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_Transmit_IT) refers to stm32f4xx_hal_usart.o(.text.USART_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.text.USART_EndTransmit_IT) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TxCpltCallback) for HAL_USART_TxCpltCallback
    stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_EndTransmit_IT) refers to stm32f4xx_hal_usart.o(.text.USART_EndTransmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TxCpltCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TxHalfCpltCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_RxCpltCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_RxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_RxHalfCpltCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TxRxCpltCallback) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_TxRxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_GetState) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_GetError) refers to stm32f4xx_hal_usart.o(.text.HAL_USART_GetError) for [Anonymous Symbol]
    startup_stm32f429xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(RESET) refers to startup_stm32f429xx.o(STACK) for __initial_sp
    startup_stm32f429xx.o(RESET) refers to startup_stm32f429xx.o(.text) for Reset_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f429xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f429xx.o(RESET) refers to i2c_stm32f4xx.o(.text.I2C1_EV_IRQHandler) for I2C1_EV_IRQHandler
    startup_stm32f429xx.o(RESET) refers to i2c_stm32f4xx.o(.text.I2C1_ER_IRQHandler) for I2C1_ER_IRQHandler
    startup_stm32f429xx.o(RESET) refers to usart_stm32f4xx.o(.text.USART3_IRQHandler) for USART3_IRQHandler
    startup_stm32f429xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(.text) refers to system_stm32f4xx.o(.text.SystemInit) for SystemInit
    startup_stm32f429xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f429xx.o(.text) refers to startup_stm32f429xx.o(HEAP) for Heap_Mem
    startup_stm32f429xx.o(.text) refers to startup_stm32f429xx.o(STACK) for Stack_Mem
    system_stm32f4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    __2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    noretval__2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    __0sscanf.o(.text) refers to scanf_char.o(.text) for __vfscanf_char
    __0sscanf.o(.text) refers to _sgetc.o(.text) for _sgetc
    _scanf_int.o(.text) refers to _chval.o(.text) for _chval
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    f2d.o(x$fpl$f2d) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    scanf1.o(x$fpl$scanf1) refers to scanf_fp.o(.text) for _scanf_really_real
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_d2e) for _btod_d2e
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec_accurate.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec_accurate.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec_accurate.o(.text) refers to btod_accurate.o(.text) for _btod_main
    _printf_fp_dec_accurate.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec_accurate.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_char_common.o(.text) refers to __printf_wp.o(.text) for __printf
    scanf_fp.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scanf_fp.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    scanf_fp.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    scanf_fp.o(.text) refers to istatus.o(x$fpl$ieeestatus) for __ieee_status
    scanf_fp.o(.text) refers to bigflt0.o(.text) for _btod_etento
    scanf_fp.o(.text) refers to btod.o(CL$$btod_emuld) for _btod_emuld
    scanf_fp.o(.text) refers to btod.o(CL$$btod_edivd) for _btod_edivd
    scanf_fp.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    scanf_fp.o(.text) refers to scanf2.o(x$fpl$scanf2) for _scanf_infnan
    scanf_fp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    scanf_fp.o(.text) refers to fpconst.o(c$$dmax) for __dbl_max
    scanf_fp.o(.text) refers to fpconst.o(c$$dinf) for __huge_val
    scanf_fp.o(.text) refers to narrow.o(i.__mathlib_narrow) for __mathlib_narrow
    scanf_fp_accurate.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scanf_fp_accurate.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    scanf_fp_accurate.o(.text) refers to strlen.o(.text) for strlen
    scanf_fp_accurate.o(.text) refers to dtob_accurate.o(.text) for _dtob
    scanf_fp_accurate.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    scanf_fp_accurate.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    scanf_fp_accurate.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    scanf_fp_accurate.o(.text) refers to scanf2.o(x$fpl$scanf2) for _scanf_infnan
    scanf_fp_accurate.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    scanf_fp_accurate.o(.text) refers to narrow.o(i.__mathlib_narrow) for __mathlib_narrow
    scanf_char.o(.text) refers to _scanf.o(.text) for __vfscanf
    scanf_char.o(.text) refers to isspace.o(.text) for isspace
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(.text.__user_perthread_libspace) for __user_perthread_libspace
    isspace.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _scanf.o(.text) refers (Weak) to scanf1.o(x$fpl$scanf1) for _scanf_real
    _scanf.o(.text) refers (Weak) to _scanf_int.o(.text) for _scanf_int
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    bigflt0.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers to btod.o(CL$$btod_d2e_norm_op1) for _d2e_norm_op1
    btod.o(CL$$btod_d2e_norm_op1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e_norm_op1) refers to btod.o(CL$$btod_d2e_denorm_low) for _d2e_denorm_low
    btod.o(CL$$btod_d2e_denorm_low) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_ediv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_emuld) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_edivd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_e2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_mult_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_div_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod_accurate.o(.text) refers to btod_accurate_common.o(.text) for _btod_common
    dtob_accurate.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dtob_accurate.o(.text) refers to btod_accurate_common.o(.text) for _btod_pow
    dtob_accurate.o(.text) refers to dtob_accurate.o(.constdata) for .constdata
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000016) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    fpconst.o(c$$dinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpconst.o(c$$dnan) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpconst.o(c$$finf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpconst.o(c$$dmax) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    istatus.o(x$fpl$ieeestatus) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scanf2.o(x$fpl$scanf2) refers to scanf_hexfp.o(.text) for _scanf_really_hex_real
    scanf2.o(x$fpl$scanf2) refers to scanf_infnan.o(.text) for _scanf_really_infnan
    scanf2b.o(x$fpl$scanf2) refers to scanf_hexfp.o(.text) for _scanf_really_hex_real
    scanf2b.o(x$fpl$scanf2) refers to scanf_infnan.o(.text) for _scanf_really_infnan
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    narrow.o(i.__mathlib_narrow) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    narrow.o(i.__mathlib_narrow) refers to narrow.o(i.__mathlib_tofloat) for __mathlib_tofloat
    narrow.o(i.__mathlib_tofloat) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    narrow.o(i.__mathlib_tofloat) refers to frexp.o(i.frexp) for frexp
    narrow.o(i.__mathlib_tofloat) refers to deqf.o(x$fpl$deqf) for __aeabi_cdcmpeq
    narrow.o(i.__mathlib_tofloat) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    narrow.o(i.__mathlib_tofloat) refers to _rserrno.o(.text) for __set_errno
    narrow.o(i.__mathlib_tofloat) refers to drleqf.o(x$fpl$drleqf) for __aeabi_cdrcmple
    narrow.o(i.__softfp___mathlib_tofloat) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    narrow.o(i.__softfp___mathlib_tofloat) refers to narrow.o(i.__mathlib_tofloat) for __mathlib_tofloat
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f429xx.o(.text) for __user_initial_stackheap
    rt_ctype_table.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    _rserrno.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    scanf_hexfp.o(.text) refers to _chval.o(.text) for _chval
    scanf_hexfp.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    scanf_hexfp.o(.text) refers to ldexp.o(i.__support_ldexp) for __support_ldexp
    scanf_hexfp.o(.text) refers to narrow.o(i.__mathlib_narrow) for __mathlib_narrow
    btod_accurate_common.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    d2f.o(x$fpl$d2f) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    d2f.o(x$fpl$d2f) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    d2f.o(x$fpl$d2f) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    deqf.o(x$fpl$deqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    deqf.o(x$fpl$deqf) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    deqf.o(x$fpl$deqf) refers to dcmpi.o(x$fpl$dcmpinf) for __fpl_dcmp_Inf
    drleqf.o(x$fpl$drleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    drleqf.o(x$fpl$drleqf) refers to dleqf.o(x$fpl$dleqf) for __fpl_dcmple_InfNaN
    frexp.o(i.__softfp_frexp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    frexp.o(i.__softfp_frexp) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    frexp.o(i.frexp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    frexp.o(i.frexp) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000012) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000012) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    dcmpi.o(x$fpl$dcmpinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dleqf.o(x$fpl$dleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dleqf.o(x$fpl$dleqf) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dleqf.o(x$fpl$dleqf) refers to dcmpi.o(x$fpl$dcmpinf) for __fpl_dcmp_Inf
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scalbn.o(x$fpl$scalbn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scalbn.o(x$fpl$scalbn) refers to dcheck1.o(x$fpl$dcheck1) for __fpl_dcheck_NaN1
    ldexp.o(i.__softfp_ldexp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ldexp.o(i.__softfp_ldexp) refers to ldexp.o(i.ldexp) for ldexp
    ldexp.o(i.__support_ldexp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ldexp.o(i.__support_ldexp) refers to ldexp.o(i.ldexp) for ldexp
    ldexp.o(i.ldexp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ldexp.o(i.ldexp) refers to deqf.o(x$fpl$deqf) for __aeabi_cdcmpeq
    ldexp.o(i.ldexp) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    ldexp.o(i.ldexp) refers to _rserrno.o(.text) for __set_errno
    ldexp.o(i.ldexp) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    ldexp.o(i.ldexp) refers to dunder.o(i.__mathlib_dbl_overflow) for __mathlib_dbl_overflow
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    dcheck1.o(x$fpl$dcheck1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcheck1.o(x$fpl$dcheck1) refers to retnan.o(x$fpl$retnan) for __fpl_return_NaN
    dunder.o(i.__mathlib_dbl_divzero) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_infnan) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_infnan2) refers to daddsub_clz.o(x$fpl$dadd) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_invalid) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_overflow) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    dunder.o(i.__mathlib_dbl_posinfnan) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_underflow) refers to scalbn.o(x$fpl$scalbn) for __ARM_scalbn
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    daddsub_clz.o(x$fpl$dadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dadd) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dadd) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    daddsub_clz.o(x$fpl$dadd) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    daddsub_clz.o(x$fpl$drsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$drsb) refers to daddsub_clz.o(x$fpl$dsub) for _dsub1
    daddsub_clz.o(x$fpl$dsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_clz.o(x$fpl$dsub) refers to daddsub_clz.o(x$fpl$dadd) for _dadd1
    daddsub_clz.o(x$fpl$dsub) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    retnan.o(x$fpl$retnan) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(x$fpl$retnan) refers to trapv.o(x$fpl$trapveneer) for __fpl_cmpreturn
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    trapv.o(x$fpl$trapveneer) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing stm32f4xx_it.o(.text), (0 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing msgqueue.o(.text), (0 bytes).
    Removing msgqueue.o(.ARM.exidx.text.Init_MsgQueue), (8 bytes).
    Removing msgqueue.o(.ARM.exidx.text.Thread_MsgQueue1), (8 bytes).
    Removing com.o(.text), (0 bytes).
    Removing com.o(.ARM.exidx.text.Init_Thcom), (8 bytes).
    Removing com.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing com.o(.ARM.exidx.text.ThcomTX), (8 bytes).
    Removing com.o(.ARM.exidx.text.ThcomRX), (8 bytes).
    Removing com.o(.ARM.exidx.text.USART_callback), (8 bytes).
    Removing com.o(.ARM.exidx.text.procesarDatosTransmitidos), (8 bytes).
    Removing com.o(.ARM.exidx.text.getInformacionCola), (8 bytes).
    Removing com.o(.ARM.exidx.text.controlarTramaRecibida), (8 bytes).
    Removing com.o(.ARM.exidx.text.procesarDatosRecibidos), (8 bytes).
    Removing com.o(.ARM.exidx.text.putInforamcionCola), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.text.osDelay), (50 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.IsException), (12 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_delay.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (50 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelay), (52 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (64 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (50 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.IsException), (12 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_evflags.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (44 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsSet), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (62 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (42 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (66 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsWait), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (140 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsCheck), (62 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_all), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_any), (34 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (42 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsId), (2 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsSet), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxObject), (2 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_set32), (22 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (154 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsClear), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_clr32), (22 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (168 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (126 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelay), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayStarted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquire), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquired), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreRelease), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreReleased), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (62 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsPrivileged), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (42 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (68 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.KernelBlock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelBlock), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (38 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.GetPendSV), (18 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.ClrPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.ClrPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (106 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.KernelUnblock), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelUnblock), (8 bytes).
    Removing rtx_kernel.o(.text.SetPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemHeadPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemBlockPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_get), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_put), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_dec32), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (58 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.IsException), (12 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mempool.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (44 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolAlloc), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolFree), (84 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (50 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (358 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxObject), (2 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolId), (2 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (120 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (120 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (138 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (44 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (50 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (220 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (140 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (42 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexId), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (46 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreNew), (58 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.IsException), (12 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_semaphore.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (44 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreAcquire), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.isrRtxSemaphoreAcquire), (70 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreRelease), (42 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.isrRtxSemaphoreRelease), (80 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (38 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (42 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (52 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreNew), (176 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphorePostProcess), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.SemaphoreTokenDecrement), (16 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxObject), (2 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_semaphore.o(.text.atomic_dec16_nz), (26 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (42 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphoreId), (2 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreAcquire), (126 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_semaphore.o(.text.SemaphoreTokenIncrement), (26 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.text.atomic_inc16_lt), (30 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreRelease), (114 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (126 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_get), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMessageObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_put), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lim), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxEventFlagsObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMutexObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxSemaphoreObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMemoryPoolObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMessageQueueObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (50 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadState), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPriority), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (170 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (140 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (186 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (146 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsClear), (10 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.atomic_clr32), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (68 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.IsException), (12 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_timer.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (52 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (52 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerUnlink), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (174 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerId), (2 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerId), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (104 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (46 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (38 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (98 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing i2c_stm32f4xx.o(.text), (0 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_EV_IRQHandler), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_EV_IRQHandler), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_ER_IRQHandler), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_ER_IRQHandler), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2CX_GetVersion), (10 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2CX_GetVersion), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2CX_GetCapabilities), (4 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2CX_GetCapabilities), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_Initialize), (10 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_Initialize), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_Uninitialize), (10 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_Uninitialize), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_PowerControl), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_PowerControl), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_MasterTransmit), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_MasterTransmit), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_MasterReceive), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_MasterReceive), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_SlaveTransmit), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_SlaveTransmit), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_SlaveReceive), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_SlaveReceive), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_GetDataCount), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_GetDataCount), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_Control), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_Control), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C1_GetStatus), (8 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C1_GetStatus), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_Initialize), (126 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_Initialize), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.Enable_GPIO_Clock), (36 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.Enable_GPIO_Clock), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_Uninitialize), (46 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_Uninitialize), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_PowerControl), (330 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_PowerControl), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_MasterTransmit), (188 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_MasterTransmit), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_MasterReceive), (192 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_MasterReceive), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_SlaveTransmit), (88 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_SlaveTransmit), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_SlaveReceive), (84 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_SlaveReceive), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_GetDataCount), (38 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_GetDataCount), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_Control), (676 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_Control), (8 bytes).
    Removing i2c_stm32f4xx.o(.text.I2C_GetStatus), (12 bytes).
    Removing i2c_stm32f4xx.o(.ARM.exidx.text.I2C_GetStatus), (8 bytes).
    Removing i2c_stm32f4xx.o(.rodata.Driver_I2C1), (48 bytes).
    Removing usart_stm32f4xx.o(.text), (0 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_IRQHandler), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_IRQHandler), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USARTx_GetVersion), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetCapabilities), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_Initialize), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_Uninitialize), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_PowerControl), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_Send), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_Receive), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_Transfer), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetTxCount), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetRxCount), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_Control), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetStatus), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_SetModemControl), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART3_GetModemStatus), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_Initialize), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.Enable_GPIO_Clock), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_Uninitialize), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_PowerControl), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_PeripheralReset), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_Send), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_Receive), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_Transfer), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_GetTxCount), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_GetRxCount), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_Control), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_GetStatus), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_SetModemControl), (8 bytes).
    Removing usart_stm32f4xx.o(.ARM.exidx.text.USART_GetModemStatus), (8 bytes).
    Removing stm32f4xx_hal.o(.text), (0 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_InitTick), (80 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DeInit), (44 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SetTickFreq), (46 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_Delay), (40 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetHalVersion), (10 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableMemorySwappingBank), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableMemorySwappingBank), (8 bytes).
    Removing stm32f4xx_hal.o(.data.uwTickFreq), (1 bytes).
    Removing stm32f4xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32f4xx_hal_adc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_Init), (78 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Init), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_MspInit), (2 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspInit), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.ADC_Init), (264 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_DeInit), (56 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_Start), (276 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_Stop), (56 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_PollForConversion), (180 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForConversion), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_PollForEvent), (126 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_PollForEvent), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_IT), (280 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_Stop_IT), (70 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_IT), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_IRQHandler), (322 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_LevelOutOfWindowCallback), (2 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_LevelOutOfWindowCallback), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback), (2 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_Start_DMA), (332 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Start_DMA), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.ADC_DMAConvCplt), (114 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAConvCplt), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt), (10 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAHalfConvCplt), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.ADC_DMAError), (22 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.ADC_DMAError), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_Stop_DMA), (86 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_Stop_DMA), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_GetValue), (6 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetValue), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConvHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel), (296 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_ConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_AnalogWDGConfig), (108 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_AnalogWDGConfig), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_GetState), (4 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetState), (8 bytes).
    Removing stm32f4xx_hal_adc.o(.text.HAL_ADC_GetError), (4 bytes).
    Removing stm32f4xx_hal_adc.o(.ARM.exidx.text.HAL_ADC_GetError), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart), (212 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStart_IT), (220 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStart_IT), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop), (84 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedPollForConversion), (152 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedPollForConversion), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedStop_IT), (92 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedStop_IT), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedGetValue), (56 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedGetValue), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStart_DMA), (260 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStart_DMA), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAConvCplt), (104 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAConvCplt), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAHalfConvCplt), (10 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAHalfConvCplt), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.ADC_MultiModeDMAError), (22 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.ADC_MultiModeDMAError), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeStop_DMA), (94 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeStop_DMA), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeGetValue), (12 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeGetValue), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConvCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConvCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_InjectedConfigChannel), (348 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_InjectedConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.text.HAL_ADCEx_MultiModeConfigChannel), (88 bytes).
    Removing stm32f4xx_hal_adc_ex.o(.ARM.exidx.text.HAL_ADCEx_MultiModeConfigChannel), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority), (30 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority), (34 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority), (44 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.SysTick_Config), (46 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable), (26 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (94 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority), (56 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority), (34 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (24 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text), (0 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Init), (206 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam), (80 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift), (60 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit), (90 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Start), (66 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_SetConfig), (48 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT), (98 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort), (138 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (36 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (340 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (396 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (78 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (104 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart), (96 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig), (30 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT), (1456 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory), (20 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (10 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (14 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (26 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text), (0 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Init), (408 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Init), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_MspInit), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MspInit), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_DeInit), (54 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_DeInit), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit), (312 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Transmit), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout), (116 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestWrite), (176 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterRequestWrite), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_WaitOnTXEFlagUntilTimeout), (94 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnTXEFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_WaitOnBTFFlagUntilTimeout), (94 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnBTFFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive), (518 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Receive), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_MasterRequestRead), (254 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterRequestRead), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_WaitOnRXNEFlagUntilTimeout), (94 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnRXNEFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit), (366 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Transmit), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive), (342 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Receive), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout), (74 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnSTOPFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_IT), (276 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_IT), (288 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit_IT), (142 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive_IT), (142 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Transmit_DMA), (322 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_DMAXferCplt), (282 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_DMAXferCplt), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_DMAError), (74 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_DMAError), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Receive_DMA), (320 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Transmit_DMA), (214 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Receive_DMA), (208 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write), (298 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Write), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite), (192 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_RequestMemoryWrite), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read), (526 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Read), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryRead), (268 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_RequestMemoryRead), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_IT), (244 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Write_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_IT), (262 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Read_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write_DMA), (388 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Write_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read_DMA), (452 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Mem_Read_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_IsDeviceReady), (416 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_IsDeviceReady), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_IT), (278 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Seq_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Transmit_DMA), (396 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Seq_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_IT), (342 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Seq_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Seq_Receive_DMA), (526 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Seq_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_IT), (172 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Seq_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Transmit_DMA), (324 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Seq_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_DMAAbort), (224 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_DMAAbort), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_IT), (172 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Seq_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Slave_Seq_Receive_DMA), (324 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Slave_Seq_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_EnableListen_IT), (54 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_EnableListen_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_DisableListen_IT), (64 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_DisableListen_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_Master_Abort_IT), (84 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_Master_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_ITError), (336 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_ITError), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_EV_IRQHandler), (384 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_EV_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_ConvertOtherXferOptions), (30 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_ConvertOtherXferOptions), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_Master_SB), (136 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Master_SB), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_Master_ADD10), (40 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Master_ADD10), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_Master_ADDR), (394 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Master_ADDR), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_TXE), (184 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterTransmit_TXE), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_MasterTransmit_BTF), (122 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterTransmit_BTF), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_MemoryTransmit_TXE_BTF), (166 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MemoryTransmit_TXE_BTF), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_RXNE), (200 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterReceive_RXNE), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_MasterReceive_BTF), (232 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_MasterReceive_BTF), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_Slave_ADDR), (70 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Slave_ADDR), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_Slave_STOPF), (354 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Slave_STOPF), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_SlaveTransmit_TXE), (72 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_SlaveTransmit_TXE), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_SlaveTransmit_BTF), (28 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_SlaveTransmit_BTF), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_SlaveReceive_RXNE), (76 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_SlaveReceive_RXNE), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_SlaveReceive_BTF), (30 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_SlaveReceive_BTF), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_ER_IRQHandler), (164 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_ER_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_Slave_AF), (144 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_Slave_AF), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterTxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MasterTxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_MasterRxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MasterRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveTxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_SlaveTxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_SlaveRxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_SlaveRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_AddrCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_AddrCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_ListenCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_ListenCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemTxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MemTxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_MemRxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_MemRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_ErrorCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_AbortCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_GetState), (6 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_GetState), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_GetMode), (6 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_GetMode), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.HAL_I2C_GetError), (4 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.HAL_I2C_GetError), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_WaitOnSTOPRequestThroughIT), (78 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnSTOPRequestThroughIT), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_WaitOnMasterAddressFlagUntilTimeout), (140 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_WaitOnMasterAddressFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_i2c.o(.text.I2C_IsAcknowledgeFailed), (48 bytes).
    Removing stm32f4xx_hal_i2c.o(.ARM.exidx.text.I2C_IsAcknowledgeFailed), (8 bytes).
    Removing stm32f4xx_hal_i2c_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigAnalogFilter), (60 bytes).
    Removing stm32f4xx_hal_i2c_ex.o(.ARM.exidx.text.HAL_I2CEx_ConfigAnalogFilter), (8 bytes).
    Removing stm32f4xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigDigitalFilter), (64 bytes).
    Removing stm32f4xx_hal_i2c_ex.o(.ARM.exidx.text.HAL_I2CEx_ConfigDigitalFilter), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (128 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (60 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (54 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (54 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (194 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive), (122 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (118 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (122 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (158 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq), (34 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (152 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (62 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (28 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (582 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (128 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (78 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (108 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (52 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (108 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (52 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit), (338 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text), (0 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Init), (80 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Init), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_MspInit), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_MspInit), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_SetConfig), (180 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_DeInit), (48 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_DeInit), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit), (190 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Transmit), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_WaitOnFlagUntilTimeout), (112 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_WaitOnFlagUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Receive), (262 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Receive), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive), (294 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TransmitReceive), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit_IT), (68 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Receive_IT), (82 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_IT), (120 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TransmitReceive_IT), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Transmit_DMA), (122 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_DMATransmitCplt), (60 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMATransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_DMATxHalfCplt), (10 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMATxHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_DMAError), (80 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMAError), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Receive_DMA), (192 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_DMAReceiveCplt), (84 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMAReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_DMARxHalfCplt), (10 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMARxHalfCplt), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_TransmitReceive_DMA), (224 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TransmitReceive_DMA), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_DMAPause), (32 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_DMAPause), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_DMAResume), (32 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_DMAResume), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_DMAStop), (96 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_DMAStop), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_EndTxTransfer), (18 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_EndTxTransfer), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_EndRxTransfer), (26 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_EndRxTransfer), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Abort), (94 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Abort), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_Abort_IT), (162 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_DMATxAbortCallback), (40 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMATxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_DMARxAbortCallback), (40 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMARxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_AbortCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_IRQHandler), (310 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_Receive_IT), (158 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_TransmitReceive_IT), (210 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_TransmitReceive_IT), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_DMAAbortOnError), (16 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_DMAAbortOnError), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_ErrorCallback), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_Transmit_IT), (90 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.USART_EndTransmit_IT), (32 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.USART_EndTransmit_IT), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_TxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_TxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_RxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_RxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_RxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_TxRxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_TxRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_GetState), (6 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_GetState), (8 bytes).
    Removing stm32f4xx_hal_usart.o(.text.HAL_USART_GetError), (4 bytes).
    Removing stm32f4xx_hal_usart.o(.ARM.exidx.text.HAL_USART_GetError), (8 bytes).
    Removing system_stm32f4xx.o(.text), (0 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).

1541 unused section(s) (total 49982 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.s                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  dtob_accurate.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate_common.o ABSOLUTE
    ../clib/ctype.c                          0x00000000   Number         0  isspace.o ABSOLUTE
    ../clib/fenv.c                           0x00000000   Number         0  _rserrno.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7em.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec_accurate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  __0sscanf.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _scanf_int.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  scanf_fp.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  scanf_fp_accurate.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  scanf_char.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _sgetc.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _scanf.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  scanf_hexfp.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  scanf_infnan.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/d2f.s                           0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/daddsub.s                       0x00000000   Number         0  daddsub_clz.o ABSOLUTE
    ../fplib/dcheck1.s                       0x00000000   Number         0  dcheck1.o ABSOLUTE
    ../fplib/dcmpi.s                         0x00000000   Number         0  dcmpi.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/deqf.s                          0x00000000   Number         0  deqf.o ABSOLUTE
    ../fplib/dleqf.s                         0x00000000   Number         0  dleqf.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/drleqf.s                        0x00000000   Number         0  drleqf.o ABSOLUTE
    ../fplib/f2d.s                           0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpconst.s                       0x00000000   Number         0  fpconst.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/istatus.s                       0x00000000   Number         0  istatus.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/retnan.s                        0x00000000   Number         0  retnan.o ABSOLUTE
    ../fplib/scalbn.s                        0x00000000   Number         0  scalbn.o ABSOLUTE
    ../fplib/scanf1.s                        0x00000000   Number         0  scanf1.o ABSOLUTE
    ../fplib/scanf2.s                        0x00000000   Number         0  scanf2.o ABSOLUTE
    ../fplib/scanf2a.s                       0x00000000   Number         0  scanf2a.o ABSOLUTE
    ../fplib/scanf2b.s                       0x00000000   Number         0  scanf2b.o ABSOLUTE
    ../fplib/trapv.s                         0x00000000   Number         0  trapv.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/dunder.c                      0x00000000   Number         0  dunder.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    ../mathlib/frexp.c                       0x00000000   Number         0  frexp.o ABSOLUTE
    ../mathlib/ldexp.c                       0x00000000   Number         0  ldexp.o ABSOLUTE
    ../mathlib/narrow.c                      0x00000000   Number         0  narrow.o ABSOLUTE
    FPU_USED                                 0x00000000   Number         0  irq_armv7m.o ABSOLUTE
    I2C_STM32F4xx.c                          0x00000000   Number         0  i2c_stm32f4xx.o ABSOLUTE
    MsgQueue.c                               0x00000000   Number         0  msgqueue.o ABSOLUTE
    RTE/Device/STM32F429ZITx/startup_stm32f429xx.s 0x00000000   Number         0  startup_stm32f429xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    USART_STM32F4xx.c                        0x00000000   Number         0  usart_stm32f4xx.o ABSOLUTE
    com.c                                    0x00000000   Number         0  com.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32f4xx_hal.c                          0x00000000   Number         0  stm32f4xx_hal.o ABSOLUTE
    stm32f4xx_hal_adc.c                      0x00000000   Number         0  stm32f4xx_hal_adc.o ABSOLUTE
    stm32f4xx_hal_adc_ex.c                   0x00000000   Number         0  stm32f4xx_hal_adc_ex.o ABSOLUTE
    stm32f4xx_hal_cortex.c                   0x00000000   Number         0  stm32f4xx_hal_cortex.o ABSOLUTE
    stm32f4xx_hal_dma.c                      0x00000000   Number         0  stm32f4xx_hal_dma.o ABSOLUTE
    stm32f4xx_hal_dma_ex.c                   0x00000000   Number         0  stm32f4xx_hal_dma_ex.o ABSOLUTE
    stm32f4xx_hal_gpio.c                     0x00000000   Number         0  stm32f4xx_hal_gpio.o ABSOLUTE
    stm32f4xx_hal_i2c.c                      0x00000000   Number         0  stm32f4xx_hal_i2c.o ABSOLUTE
    stm32f4xx_hal_i2c_ex.c                   0x00000000   Number         0  stm32f4xx_hal_i2c_ex.o ABSOLUTE
    stm32f4xx_hal_pwr.c                      0x00000000   Number         0  stm32f4xx_hal_pwr.o ABSOLUTE
    stm32f4xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f4xx_hal_pwr_ex.o ABSOLUTE
    stm32f4xx_hal_rcc.c                      0x00000000   Number         0  stm32f4xx_hal_rcc.o ABSOLUTE
    stm32f4xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f4xx_hal_rcc_ex.o ABSOLUTE
    stm32f4xx_hal_usart.c                    0x00000000   Number         0  stm32f4xx_hal_usart.o ABSOLUTE
    stm32f4xx_it.c                           0x00000000   Number         0  stm32f4xx_it.o ABSOLUTE
    system_stm32f4xx.c                       0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      428  startup_stm32f429xx.o(RESET)
    !!!main                                  0x080001ac   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001b4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001e8   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000204   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x08000220   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000003  0x08000220   Section        6  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    .ARM.Collect$$_printf_percent$$00000009  0x08000226   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000017  0x0800022c   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x08000230   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000232   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000232   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000232   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000232   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000232   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x08000232   Section        6  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x08000238   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000012          0x08000238   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000012)
    .ARM.Collect$$libinit$$00000013          0x08000244   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000244   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000016          0x08000244   Section       10  libinit2.o(.ARM.Collect$$libinit$$00000016)
    .ARM.Collect$$libinit$$00000017          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800024e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800024e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000250   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000252   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000252   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000252   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000252   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000252   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000252   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000252   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000254   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000254   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000254   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800025a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000262   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000266   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000266   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800026e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000270   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000270   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000274   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    [Anonymous Symbol]                       0x0800027c   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x080002a4   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x080002b4   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x080002bc   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x080002ca   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x080002cc   Number         0  irq_armv7m.o(.text)
    .text                                    0x08000310   Section       64  startup_stm32f429xx.o(.text)
    .text                                    0x08000350   Section      240  lludivv7m.o(.text)
    .text                                    0x08000440   Section        0  noretval__2snprintf.o(.text)
    .text                                    0x08000474   Section        0  _printf_pad.o(.text)
    .text                                    0x080004c4   Section        0  _printf_dec.o(.text)
    .text                                    0x0800053c   Section        0  __printf_wp.o(.text)
    .text                                    0x0800064c   Section        0  __0sscanf.o(.text)
    .text                                    0x08000688   Section        0  _scanf_int.o(.text)
    .text                                    0x080007d4   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800085e   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0800086e   Section       68  rt_memclr.o(.text)
    .text                                    0x080008b2   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000900   Section        0  heapauxi.o(.text)
    .text                                    0x08000906   Section        0  _printf_intcommon.o(.text)
    _fp_digits                               0x080009b9   Thumb Code   432  _printf_fp_dec.o(.text)
    .text                                    0x080009b8   Section        0  _printf_fp_dec.o(.text)
    _printf_input_char                       0x08000dd5   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x08000dd4   Section        0  _printf_char_common.o(.text)
    .text                                    0x08000e04   Section        0  _sputc.o(.text)
    .text                                    0x08000e0e   Section        0  _snputc.o(.text)
    .text                                    0x08000e1e   Section        0  _chval.o(.text)
    _fp_value                                0x08000e3d   Thumb Code   588  scanf_fp.o(.text)
    .text                                    0x08000e3c   Section        0  scanf_fp.o(.text)
    _scanf_char_input                        0x08001335   Thumb Code    12  scanf_char.o(.text)
    .text                                    0x08001334   Section        0  scanf_char.o(.text)
    .text                                    0x08001360   Section        0  _sgetc.o(.text)
    .text                                    0x080013a0   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08001404   Section       10  rt_locale_twolibspace.o(.text)
    .text                                    0x0800140e   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x08001412   Section       38  llshl.o(.text)
    .text                                    0x08001438   Section      138  lludiv10.o(.text)
    .text                                    0x080014c2   Section        0  isspace.o(.text)
    .text                                    0x080014d4   Section        0  _printf_fp_infnan.o(.text)
    .text                                    0x08001554   Section        0  _scanf.o(.text)
    .text                                    0x080018c8   Section        0  bigflt0.o(.text)
    .text                                    0x080019ac   Section        8  libspace.o(.text)
    .text                                    0x080019b4   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08001a00   Section       16  rt_ctype_table.o(.text)
    .text                                    0x08001a10   Section        0  _rserrno.o(.text)
    .text                                    0x08001a28   Section        0  scanf_hexfp.o(.text)
    .text                                    0x08001d48   Section        0  scanf_infnan.o(.text)
    .text                                    0x08001e7c   Section        0  exit.o(.text)
    .text                                    0x08001e90   Section      124  strcmpv7em.o(.text)
    .text                                    0x08001f0c   Section        0  sys_exit.o(.text)
    .text                                    0x08001f18   Section        2  use_no_semi.o(.text)
    .text                                    0x08001f1a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08001f1c   Section        0  stm32f4xx_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x08001f20   Section        0  stm32f4xx_it.o(.text.DebugMon_Handler)
    Enable_GPIO_Clock                        0x08001f25   Thumb Code   500  usart_stm32f4xx.o(.text.Enable_GPIO_Clock)
    [Anonymous Symbol]                       0x08001f24   Section        0  usart_stm32f4xx.o(.text.Enable_GPIO_Clock)
    [Anonymous Symbol]                       0x08002118   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x0800211c   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08002120   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x08002124   Section        0  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08002128   Section        0  rtx_evr.o(.text.EvrRtxKernelGetState)
    [Anonymous Symbol]                       0x0800212c   Section        0  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08002130   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x08002134   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x08002138   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x0800213c   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x08002140   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08002144   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x08002148   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x0800214c   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x08002150   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x08002154   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x08002158   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x0800215c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x08002160   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x08002164   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08002168   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x0800216c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x08002170   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x08002174   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x08002178   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    [Anonymous Symbol]                       0x0800217c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x08002180   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x08002184   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08002188   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x0800218c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x08002190   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x08002194   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquire)
    [Anonymous Symbol]                       0x08002198   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    [Anonymous Symbol]                       0x0800219c   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x080021a0   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x080021a4   Section        0  rtx_evr.o(.text.EvrRtxMutexCreated)
    [Anonymous Symbol]                       0x080021a8   Section        0  rtx_evr.o(.text.EvrRtxMutexDelete)
    [Anonymous Symbol]                       0x080021ac   Section        0  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    [Anonymous Symbol]                       0x080021b0   Section        0  rtx_evr.o(.text.EvrRtxMutexError)
    [Anonymous Symbol]                       0x080021b4   Section        0  rtx_evr.o(.text.EvrRtxMutexNew)
    [Anonymous Symbol]                       0x080021b8   Section        0  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    [Anonymous Symbol]                       0x080021bc   Section        0  rtx_evr.o(.text.EvrRtxMutexRelease)
    [Anonymous Symbol]                       0x080021c0   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x080021c4   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x080021c8   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x080021cc   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x080021d0   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x080021d4   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x080021d8   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x080021dc   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    [Anonymous Symbol]                       0x080021e0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x080021e4   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    [Anonymous Symbol]                       0x080021e8   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x080021ec   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x080021f0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    [Anonymous Symbol]                       0x080021f4   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    [Anonymous Symbol]                       0x080021f8   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x080021fc   Section        0  rtx_evr.o(.text.EvrRtxThreadGetId)
    [Anonymous Symbol]                       0x08002200   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x08002204   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x08002208   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x0800220c   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x08002210   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x08002214   Section        0  rtx_evr.o(.text.EvrRtxThreadYield)
    [Anonymous Symbol]                       0x08002218   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x0800221c   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    [Anonymous Symbol]                       0x08002324   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x080024c0   Section        0  stm32f4xx_hal.o(.text.HAL_GetREVID)
    [Anonymous Symbol]                       0x080024d0   Section        0  main.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08002520   Section        0  stm32f4xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x08002550   Section        0  main.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08002554   Section        0  stm32f4xx_hal.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08002558   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x08002560   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08002568   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x080026c8   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x080026d4   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x080026f8   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08002764   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08002a98   Section        0  stm32f4xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08002a9c   Section        0  i2c_stm32f4xx.o(.text.I2C1_ER_IRQHandler)
    [Anonymous Symbol]                       0x08002aa4   Section        0  i2c_stm32f4xx.o(.text.I2C1_EV_IRQHandler)
    I2C_ER_IRQHandler                        0x08002aad   Thumb Code   354  i2c_stm32f4xx.o(.text.I2C_ER_IRQHandler)
    [Anonymous Symbol]                       0x08002aac   Section        0  i2c_stm32f4xx.o(.text.I2C_ER_IRQHandler)
    I2C_EV_IRQHandler                        0x08002c11   Thumb Code  1310  i2c_stm32f4xx.o(.text.I2C_EV_IRQHandler)
    [Anonymous Symbol]                       0x08002c10   Section        0  i2c_stm32f4xx.o(.text.I2C_EV_IRQHandler)
    [Anonymous Symbol]                       0x08003130   Section        0  msgqueue.o(.text.Init_MsgQueue)
    [Anonymous Symbol]                       0x08003184   Section        0  com.o(.text.Init_Thcom)
    IsException                              0x080031dd   Thumb Code    12  rtx_kernel.o(.text.IsException)
    [Anonymous Symbol]                       0x080031dc   Section        0  rtx_kernel.o(.text.IsException)
    IsException                              0x080031e9   Thumb Code    12  rtx_msgqueue.o(.text.IsException)
    [Anonymous Symbol]                       0x080031e8   Section        0  rtx_msgqueue.o(.text.IsException)
    IsException                              0x080031f5   Thumb Code    12  rtx_mutex.o(.text.IsException)
    [Anonymous Symbol]                       0x080031f4   Section        0  rtx_mutex.o(.text.IsException)
    IsException                              0x08003201   Thumb Code    12  rtx_thread.o(.text.IsException)
    [Anonymous Symbol]                       0x08003200   Section        0  rtx_thread.o(.text.IsException)
    IsIrqMasked                              0x0800320d   Thumb Code    24  rtx_kernel.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x0800320c   Section        0  rtx_kernel.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08003225   Thumb Code    24  rtx_msgqueue.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08003224   Section        0  rtx_msgqueue.o(.text.IsIrqMasked)
    IsIrqMasked                              0x0800323d   Thumb Code    24  rtx_mutex.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x0800323c   Section        0  rtx_mutex.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08003255   Thumb Code    24  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08003254   Section        0  rtx_thread.o(.text.IsIrqMasked)
    IsPrivileged                             0x0800326d   Thumb Code    12  rtx_kernel.o(.text.IsPrivileged)
    [Anonymous Symbol]                       0x0800326c   Section        0  rtx_kernel.o(.text.IsPrivileged)
    MemBlockPtr                              0x08003279   Thumb Code     4  rtx_memory.o(.text.MemBlockPtr)
    [Anonymous Symbol]                       0x08003278   Section        0  rtx_memory.o(.text.MemBlockPtr)
    MemHeadPtr                               0x0800327d   Thumb Code     2  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x0800327c   Section        0  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x08003280   Section        0  stm32f4xx_it.o(.text.MemManage_Handler)
    MessageQueueGet                          0x08003285   Thumb Code    42  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08003284   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x080032b1   Thumb Code    84  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x080032b0   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x08003305   Thumb Code    36  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08003304   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08003328   Section        0  stm32f4xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x0800332c   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08003338   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x0800336c   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08003374   Section        0  os_systick.o(.text.OS_Tick_Setup)
    SVC_Setup                                0x080033bd   Thumb Code    48  rtx_kernel.o(.text.SVC_Setup)
    [Anonymous Symbol]                       0x080033bc   Section        0  rtx_kernel.o(.text.SVC_Setup)
    SetPendSV                                0x080033ed   Thumb Code    16  rtx_system.o(.text.SetPendSV)
    [Anonymous Symbol]                       0x080033ec   Section        0  rtx_system.o(.text.SetPendSV)
    SystemClock_Config                       0x080033fd   Thumb Code   158  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x080033fc   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x0800349c   Section        0  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x0800351c   Section        0  system_stm32f4xx.o(.text.SystemInit)
    ThcomRX                                  0x08003521   Thumb Code    48  com.o(.text.ThcomRX)
    [Anonymous Symbol]                       0x08003520   Section        0  com.o(.text.ThcomRX)
    ThcomTX                                  0x08003551   Thumb Code    38  com.o(.text.ThcomTX)
    [Anonymous Symbol]                       0x08003550   Section        0  com.o(.text.ThcomTX)
    ThreadFlagsCheck                         0x08003579   Thumb Code    62  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08003578   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsSet                           0x080035b9   Thumb Code    10  rtx_thread.o(.text.ThreadFlagsSet)
    [Anonymous Symbol]                       0x080035b8   Section        0  rtx_thread.o(.text.ThreadFlagsSet)
    [Anonymous Symbol]                       0x080035c4   Section        0  msgqueue.o(.text.Thread_MsgQueue1)
    TimerInsert                              0x08003601   Thumb Code   104  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08003600   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerUnlink                              0x08003669   Thumb Code    22  rtx_timer.o(.text.TimerUnlink)
    [Anonymous Symbol]                       0x08003668   Section        0  rtx_timer.o(.text.TimerUnlink)
    USART3_Control                           0x08003681   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_Control)
    [Anonymous Symbol]                       0x08003680   Section        0  usart_stm32f4xx.o(.text.USART3_Control)
    USART3_GetCapabilities                   0x08003689   Thumb Code     6  usart_stm32f4xx.o(.text.USART3_GetCapabilities)
    [Anonymous Symbol]                       0x08003688   Section        0  usart_stm32f4xx.o(.text.USART3_GetCapabilities)
    USART3_GetModemStatus                    0x08003691   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_GetModemStatus)
    [Anonymous Symbol]                       0x08003690   Section        0  usart_stm32f4xx.o(.text.USART3_GetModemStatus)
    USART3_GetRxCount                        0x08003699   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_GetRxCount)
    [Anonymous Symbol]                       0x08003698   Section        0  usart_stm32f4xx.o(.text.USART3_GetRxCount)
    USART3_GetStatus                         0x080036a1   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_GetStatus)
    [Anonymous Symbol]                       0x080036a0   Section        0  usart_stm32f4xx.o(.text.USART3_GetStatus)
    USART3_GetTxCount                        0x080036a9   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_GetTxCount)
    [Anonymous Symbol]                       0x080036a8   Section        0  usart_stm32f4xx.o(.text.USART3_GetTxCount)
    [Anonymous Symbol]                       0x080036b0   Section        0  usart_stm32f4xx.o(.text.USART3_IRQHandler)
    USART3_Initialize                        0x080036c1   Thumb Code    10  usart_stm32f4xx.o(.text.USART3_Initialize)
    [Anonymous Symbol]                       0x080036c0   Section        0  usart_stm32f4xx.o(.text.USART3_Initialize)
    USART3_PowerControl                      0x080036cd   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_PowerControl)
    [Anonymous Symbol]                       0x080036cc   Section        0  usart_stm32f4xx.o(.text.USART3_PowerControl)
    USART3_Receive                           0x080036d5   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_Receive)
    [Anonymous Symbol]                       0x080036d4   Section        0  usart_stm32f4xx.o(.text.USART3_Receive)
    USART3_Send                              0x080036dd   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_Send)
    [Anonymous Symbol]                       0x080036dc   Section        0  usart_stm32f4xx.o(.text.USART3_Send)
    USART3_SetModemControl                   0x080036e5   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_SetModemControl)
    [Anonymous Symbol]                       0x080036e4   Section        0  usart_stm32f4xx.o(.text.USART3_SetModemControl)
    USART3_Transfer                          0x080036ed   Thumb Code     8  usart_stm32f4xx.o(.text.USART3_Transfer)
    [Anonymous Symbol]                       0x080036ec   Section        0  usart_stm32f4xx.o(.text.USART3_Transfer)
    USART3_Uninitialize                      0x080036f5   Thumb Code    10  usart_stm32f4xx.o(.text.USART3_Uninitialize)
    [Anonymous Symbol]                       0x080036f4   Section        0  usart_stm32f4xx.o(.text.USART3_Uninitialize)
    USART_Control                            0x08003701   Thumb Code  1430  usart_stm32f4xx.o(.text.USART_Control)
    [Anonymous Symbol]                       0x08003700   Section        0  usart_stm32f4xx.o(.text.USART_Control)
    USART_GetModemStatus                     0x08003c99   Thumb Code     4  usart_stm32f4xx.o(.text.USART_GetModemStatus)
    [Anonymous Symbol]                       0x08003c98   Section        0  usart_stm32f4xx.o(.text.USART_GetModemStatus)
    USART_GetRxCount                         0x08003c9d   Thumb Code    12  usart_stm32f4xx.o(.text.USART_GetRxCount)
    [Anonymous Symbol]                       0x08003c9c   Section        0  usart_stm32f4xx.o(.text.USART_GetRxCount)
    USART_GetStatus                          0x08003ca9   Thumb Code   106  usart_stm32f4xx.o(.text.USART_GetStatus)
    [Anonymous Symbol]                       0x08003ca8   Section        0  usart_stm32f4xx.o(.text.USART_GetStatus)
    USART_GetTxCount                         0x08003d15   Thumb Code    12  usart_stm32f4xx.o(.text.USART_GetTxCount)
    [Anonymous Symbol]                       0x08003d14   Section        0  usart_stm32f4xx.o(.text.USART_GetTxCount)
    [Anonymous Symbol]                       0x08003d20   Section        0  usart_stm32f4xx.o(.text.USART_IRQHandler)
    USART_Init                               0x08003f25   Thumb Code    68  com.o(.text.USART_Init)
    [Anonymous Symbol]                       0x08003f24   Section        0  com.o(.text.USART_Init)
    USART_Initialize                         0x08003f69   Thumb Code    70  usart_stm32f4xx.o(.text.USART_Initialize)
    [Anonymous Symbol]                       0x08003f68   Section        0  usart_stm32f4xx.o(.text.USART_Initialize)
    USART_PeripheralReset                    0x08003fb1   Thumb Code   394  usart_stm32f4xx.o(.text.USART_PeripheralReset)
    [Anonymous Symbol]                       0x08003fb0   Section        0  usart_stm32f4xx.o(.text.USART_PeripheralReset)
    USART_PowerControl                       0x0800413d   Thumb Code   198  usart_stm32f4xx.o(.text.USART_PowerControl)
    [Anonymous Symbol]                       0x0800413c   Section        0  usart_stm32f4xx.o(.text.USART_PowerControl)
    USART_Receive                            0x08004205   Thumb Code   148  usart_stm32f4xx.o(.text.USART_Receive)
    [Anonymous Symbol]                       0x08004204   Section        0  usart_stm32f4xx.o(.text.USART_Receive)
    USART_Send                               0x08004299   Thumb Code   128  usart_stm32f4xx.o(.text.USART_Send)
    [Anonymous Symbol]                       0x08004298   Section        0  usart_stm32f4xx.o(.text.USART_Send)
    USART_SetModemControl                    0x08004319   Thumb Code    84  usart_stm32f4xx.o(.text.USART_SetModemControl)
    [Anonymous Symbol]                       0x08004318   Section        0  usart_stm32f4xx.o(.text.USART_SetModemControl)
    USART_Transfer                           0x0800436d   Thumb Code    84  usart_stm32f4xx.o(.text.USART_Transfer)
    [Anonymous Symbol]                       0x0800436c   Section        0  usart_stm32f4xx.o(.text.USART_Transfer)
    USART_Uninitialize                       0x080043c1   Thumb Code    44  usart_stm32f4xx.o(.text.USART_Uninitialize)
    [Anonymous Symbol]                       0x080043c0   Section        0  usart_stm32f4xx.o(.text.USART_Uninitialize)
    USART_callback                           0x080043ed   Thumb Code    54  com.o(.text.USART_callback)
    [Anonymous Symbol]                       0x080043ec   Section        0  com.o(.text.USART_callback)
    USARTx_GetVersion                        0x08004425   Thumb Code    10  usart_stm32f4xx.o(.text.USARTx_GetVersion)
    [Anonymous Symbol]                       0x08004424   Section        0  usart_stm32f4xx.o(.text.USARTx_GetVersion)
    [Anonymous Symbol]                       0x08004430   Section        0  stm32f4xx_it.o(.text.UsageFault_Handler)
    __NVIC_ClearPendingIRQ                   0x08004435   Thumb Code    14  usart_stm32f4xx.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x08004434   Section        0  usart_stm32f4xx.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_DisableIRQ                        0x08004445   Thumb Code    40  stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x08004444   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ)
    __NVIC_EnableIRQ                         0x0800446d   Thumb Code    14  usart_stm32f4xx.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x0800446c   Section        0  usart_stm32f4xx.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x0800447d   Thumb Code    16  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x0800447c   Section        0  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriorityGrouping               0x0800448d   Thumb Code    32  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x0800448c   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x080044ac   Section        0  rtx_lib.o(.text.__user_perthread_libspace)
    __tagsym$$used.1                         0x08004504   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08004504   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08004520   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08004520   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x0800452c   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x0800452c   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x0800454c   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x0800454c   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08004564   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    atomic_chk32_all                         0x0800456d   Thumb Code    38  rtx_thread.o(.text.atomic_chk32_all)
    [Anonymous Symbol]                       0x0800456c   Section        0  rtx_thread.o(.text.atomic_chk32_all)
    atomic_chk32_any                         0x08004595   Thumb Code    34  rtx_thread.o(.text.atomic_chk32_any)
    [Anonymous Symbol]                       0x08004594   Section        0  rtx_thread.o(.text.atomic_chk32_any)
    atomic_dec16_nz                          0x080045b9   Thumb Code    36  rtx_system.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x080045b8   Section        0  rtx_system.o(.text.atomic_dec16_nz)
    atomic_dec32                             0x080045dd   Thumb Code    16  rtx_mempool.o(.text.atomic_dec32)
    [Anonymous Symbol]                       0x080045dc   Section        0  rtx_mempool.o(.text.atomic_dec32)
    atomic_dec32_nz                          0x080045ed   Thumb Code    26  rtx_msgqueue.o(.text.atomic_dec32_nz)
    [Anonymous Symbol]                       0x080045ec   Section        0  rtx_msgqueue.o(.text.atomic_dec32_nz)
    atomic_inc16_lim                         0x08004609   Thumb Code    26  rtx_system.o(.text.atomic_inc16_lim)
    [Anonymous Symbol]                       0x08004608   Section        0  rtx_system.o(.text.atomic_inc16_lim)
    atomic_inc16_lt                          0x08004625   Thumb Code    40  rtx_system.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x08004624   Section        0  rtx_system.o(.text.atomic_inc16_lt)
    atomic_inc32                             0x0800464d   Thumb Code    16  rtx_mempool.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x0800464c   Section        0  rtx_mempool.o(.text.atomic_inc32)
    atomic_inc32                             0x0800465d   Thumb Code    16  rtx_msgqueue.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x0800465c   Section        0  rtx_msgqueue.o(.text.atomic_inc32)
    atomic_link_get                          0x0800466d   Thumb Code    26  rtx_mempool.o(.text.atomic_link_get)
    [Anonymous Symbol]                       0x0800466c   Section        0  rtx_mempool.o(.text.atomic_link_get)
    atomic_link_put                          0x08004689   Thumb Code    30  rtx_mempool.o(.text.atomic_link_put)
    [Anonymous Symbol]                       0x08004688   Section        0  rtx_mempool.o(.text.atomic_link_put)
    atomic_set32                             0x080046a9   Thumb Code    22  rtx_thread.o(.text.atomic_set32)
    [Anonymous Symbol]                       0x080046a8   Section        0  rtx_thread.o(.text.atomic_set32)
    atomic_wr8                               0x080046c1   Thumb Code    18  rtx_msgqueue.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x080046c0   Section        0  rtx_msgqueue.o(.text.atomic_wr8)
    controlarTramaRecibida                   0x080046d5   Thumb Code   114  com.o(.text.controlarTramaRecibida)
    [Anonymous Symbol]                       0x080046d4   Section        0  com.o(.text.controlarTramaRecibida)
    getInformacionCola                       0x08004749   Thumb Code    52  com.o(.text.getInformacionCola)
    [Anonymous Symbol]                       0x08004748   Section        0  com.o(.text.getInformacionCola)
    isrRtxMessageQueueGet                    0x0800477d   Thumb Code   116  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0800477c   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    isrRtxMessageQueuePut                    0x080047f1   Thumb Code   126  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080047f0   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    isrRtxThreadFlagsSet                     0x08004871   Thumb Code    90  rtx_thread.o(.text.isrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x08004870   Section        0  rtx_thread.o(.text.isrRtxThreadFlagsSet)
    isr_queue_get                            0x080048cd   Thumb Code    46  rtx_system.o(.text.isr_queue_get)
    [Anonymous Symbol]                       0x080048cc   Section        0  rtx_system.o(.text.isr_queue_get)
    isr_queue_put                            0x080048fd   Thumb Code    50  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x080048fc   Section        0  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x08004930   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08004950   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08004978   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x08004998   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080049cc   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080049fc   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08004a40   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x08004a7c   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08004ac0   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08004af8   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08004b2c   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08004b60   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08004b94   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    osRtxEventFlagsObject                    0x08004b99   Thumb Code     2  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x08004b98   Section        0  rtx_system.o(.text.osRtxEventFlagsObject)
    osRtxEventFlagsObject                    0x08004b9d   Thumb Code     2  rtx_thread.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x08004b9c   Section        0  rtx_thread.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x08004ba0   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x08004ba4   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelGetState                      0x08004bb9   Thumb Code    12  rtx_system.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x08004bb8   Section        0  rtx_system.o(.text.osRtxKernelGetState)
    osRtxKernelGetState                      0x08004bc5   Thumb Code    12  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x08004bc4   Section        0  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x08004bd0   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxKernelState                         0x08004bd5   Thumb Code    12  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x08004bd4   Section        0  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x08004be0   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08004c98   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08004d10   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08004d74   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08004da0   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08004de4   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMemoryPoolObject                    0x08004e45   Thumb Code     2  rtx_system.o(.text.osRtxMemoryPoolObject)
    [Anonymous Symbol]                       0x08004e44   Section        0  rtx_system.o(.text.osRtxMemoryPoolObject)
    osRtxMemoryPoolObject                    0x08004e49   Thumb Code     2  rtx_thread.o(.text.osRtxMemoryPoolObject)
    [Anonymous Symbol]                       0x08004e48   Section        0  rtx_thread.o(.text.osRtxMemoryPoolObject)
    osRtxMessageObject                       0x08004e4d   Thumb Code     2  rtx_system.o(.text.osRtxMessageObject)
    [Anonymous Symbol]                       0x08004e4c   Section        0  rtx_system.o(.text.osRtxMessageObject)
    osRtxMessageQueueId                      0x08004e51   Thumb Code     2  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    [Anonymous Symbol]                       0x08004e50   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    osRtxMessageQueueObject                  0x08004e55   Thumb Code     2  rtx_thread.o(.text.osRtxMessageQueueObject)
    [Anonymous Symbol]                       0x08004e54   Section        0  rtx_thread.o(.text.osRtxMessageQueueObject)
    osRtxMessageQueuePostProcess             0x08004e59   Thumb Code   258  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08004e58   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08004f5c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexId                             0x08004f8d   Thumb Code     2  rtx_mutex.o(.text.osRtxMutexId)
    [Anonymous Symbol]                       0x08004f8c   Section        0  rtx_mutex.o(.text.osRtxMutexId)
    osRtxMutexObject                         0x08004f91   Thumb Code     2  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x08004f90   Section        0  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x08004f94   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08005000   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxObject                              0x08005051   Thumb Code     2  rtx_msgqueue.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08005050   Section        0  rtx_msgqueue.o(.text.osRtxObject)
    osRtxObject                              0x08005055   Thumb Code     2  rtx_mutex.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08005054   Section        0  rtx_mutex.o(.text.osRtxObject)
    osRtxObject                              0x08005059   Thumb Code     2  rtx_system.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08005058   Section        0  rtx_system.o(.text.osRtxObject)
    osRtxObject                              0x0800505d   Thumb Code     2  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800505c   Section        0  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08005060   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x080050c4   Section        0  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphoreObject                     0x080050f1   Thumb Code     2  rtx_system.o(.text.osRtxSemaphoreObject)
    [Anonymous Symbol]                       0x080050f0   Section        0  rtx_system.o(.text.osRtxSemaphoreObject)
    osRtxSemaphoreObject                     0x080050f5   Thumb Code     2  rtx_thread.o(.text.osRtxSemaphoreObject)
    [Anonymous Symbol]                       0x080050f4   Section        0  rtx_thread.o(.text.osRtxSemaphoreObject)
    osRtxThreadBlock                         0x080050f9   Thumb Code    72  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x080050f8   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08005141   Thumb Code   160  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08005140   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x080051e1   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x080051e0   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08005230   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x08005329   Thumb Code    54  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08005328   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08005360   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x080053c1   Thumb Code    96  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x080053c0   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadGetRunning                    0x08005421   Thumb Code    12  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08005420   Section        0  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800542d   Thumb Code    12  rtx_mutex.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800542c   Section        0  rtx_mutex.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x08005439   Thumb Code    12  rtx_thread.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08005438   Section        0  rtx_thread.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x08005445   Thumb Code    12  rtx_timer.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08005444   Section        0  rtx_timer.o(.text.osRtxThreadGetRunning)
    osRtxThreadId                            0x08005451   Thumb Code     2  rtx_thread.o(.text.osRtxThreadId)
    [Anonymous Symbol]                       0x08005450   Section        0  rtx_thread.o(.text.osRtxThreadId)
    osRtxThreadJoinWakeup                    0x08005455   Thumb Code    38  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08005454   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x0800547c   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08005494   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x080054c8   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x080054e5   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x080054e4   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x080054f8   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadObject                        0x08005529   Thumb Code     2  rtx_system.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x08005528   Section        0  rtx_system.o(.text.osRtxThreadObject)
    osRtxThreadObject                        0x0800552d   Thumb Code     2  rtx_thread.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x0800552c   Section        0  rtx_thread.o(.text.osRtxThreadObject)
    osRtxThreadPostProcess                   0x08005531   Thumb Code    56  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08005530   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08005568   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08005580   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadSetRunning                    0x08005589   Thumb Code    14  rtx_thread.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x08005588   Section        0  rtx_thread.o(.text.osRtxThreadSetRunning)
    osRtxThreadSetRunning                    0x08005599   Thumb Code    12  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x08005598   Section        0  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x080055a4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x080055f4   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x0800560c   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08005668   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08005694   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08005720   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x08005748   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08005775   Thumb Code   136  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08005774   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080057fc   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08005818   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x08005848   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x08005884   Section        0  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x080058a4   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x080058e0   Section        0  rtx_thread.o(.text.osThreadYield)
    os_kernel_is_active                      0x08005911   Thumb Code    30  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08005910   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    procesarDatosRecibidos                   0x08005931   Thumb Code   286  com.o(.text.procesarDatosRecibidos)
    [Anonymous Symbol]                       0x08005930   Section        0  com.o(.text.procesarDatosRecibidos)
    procesarDatosTransmitidos                0x08005a51   Thumb Code   396  com.o(.text.procesarDatosTransmitidos)
    [Anonymous Symbol]                       0x08005a50   Section        0  com.o(.text.procesarDatosTransmitidos)
    putInforamcionCola                       0x08005c0d   Thumb Code   120  com.o(.text.putInforamcionCola)
    [Anonymous Symbol]                       0x08005c0c   Section        0  com.o(.text.putInforamcionCola)
    svcRtxKernelGetState                     0x08005c89   Thumb Code    16  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08005c88   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickCount                 0x08005c99   Thumb Code    20  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08005c98   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x08005cad   Thumb Code   336  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08005cac   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08005dfd   Thumb Code   132  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08005dfc   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08005e81   Thumb Code   306  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08005e80   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x08005fb5   Thumb Code   392  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08005fb4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x0800613d   Thumb Code   276  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x0800613c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08006251   Thumb Code   230  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08006250   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08006339   Thumb Code   216  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08006338   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08006411   Thumb Code   144  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08006410   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x080064a1   Thumb Code   248  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080064a0   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08006599   Thumb Code    74  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08006598   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsSet                     0x080065e5   Thumb Code   142  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x080065e4   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x08006675   Thumb Code   166  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08006674   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadGetId                        0x0800671d   Thumb Code    16  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x0800671c   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x0800672d   Thumb Code   576  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x0800672c   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadYield                        0x0800696d   Thumb Code    68  rtx_thread.o(.text.svcRtxThreadYield)
    [Anonymous Symbol]                       0x0800696c   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    CL$$btod_d2e                             0x080069b0   Section       62  btod.o(CL$$btod_d2e)
    CL$$btod_d2e_denorm_low                  0x080069ee   Section       70  btod.o(CL$$btod_d2e_denorm_low)
    CL$$btod_d2e_norm_op1                    0x08006a34   Section       96  btod.o(CL$$btod_d2e_norm_op1)
    CL$$btod_div_common                      0x08006a94   Section      824  btod.o(CL$$btod_div_common)
    CL$$btod_e2d                             0x08006dcc   Section      132  btod.o(CL$$btod_e2d)
    CL$$btod_e2e                             0x08006e50   Section      220  btod.o(CL$$btod_e2e)
    CL$$btod_ediv                            0x08006f2c   Section       42  btod.o(CL$$btod_ediv)
    CL$$btod_edivd                           0x08006f56   Section       42  btod.o(CL$$btod_edivd)
    CL$$btod_emul                            0x08006f80   Section       42  btod.o(CL$$btod_emul)
    CL$$btod_emuld                           0x08006faa   Section       42  btod.o(CL$$btod_emuld)
    CL$$btod_mult_common                     0x08006fd4   Section      580  btod.o(CL$$btod_mult_common)
    i.__ARM_fpclassify                       0x08007218   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__mathlib_dbl_overflow                 0x08007240   Section        0  dunder.o(i.__mathlib_dbl_overflow)
    i.__mathlib_dbl_underflow                0x08007250   Section        0  dunder.o(i.__mathlib_dbl_underflow)
    i.__mathlib_narrow                       0x08007260   Section        0  narrow.o(i.__mathlib_narrow)
    i.__mathlib_tofloat                      0x08007270   Section        0  narrow.o(i.__mathlib_tofloat)
    i.__support_ldexp                        0x0800732c   Section        0  ldexp.o(i.__support_ldexp)
    i._is_digit                              0x08007342   Section        0  __printf_wp.o(i._is_digit)
    i.frexp                                  0x08007350   Section        0  frexp.o(i.frexp)
    i.ldexp                                  0x080073a8   Section        0  ldexp.o(i.ldexp)
    locale$$code                             0x0800741c   Section       44  lc_numeric_c.o(locale$$code)
    locale$$code                             0x08007448   Section       44  lc_ctype_c.o(locale$$code)
    x$fpl$d2f                                0x08007474   Section       98  d2f.o(x$fpl$d2f)
    x$fpl$dcheck1                            0x080074d8   Section       16  dcheck1.o(x$fpl$dcheck1)
    x$fpl$dcmpinf                            0x080074e8   Section       24  dcmpi.o(x$fpl$dcmpinf)
    x$fpl$deqf                               0x08007500   Section      120  deqf.o(x$fpl$deqf)
    x$fpl$dleqf                              0x08007578   Section      120  dleqf.o(x$fpl$dleqf)
    x$fpl$dnaninf                            0x080075f0   Section      156  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dretinf                            0x0800768c   Section       12  dretinf.o(x$fpl$dretinf)
    x$fpl$drleqf                             0x08007698   Section      108  drleqf.o(x$fpl$drleqf)
    x$fpl$f2d                                0x08007704   Section       86  f2d.o(x$fpl$f2d)
    x$fpl$fnaninf                            0x0800775a   Section      140  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fretinf                            0x080077e6   Section       10  fretinf.o(x$fpl$fretinf)
    x$fpl$ieeestatus                         0x080077f0   Section        6  istatus.o(x$fpl$ieeestatus)
    x$fpl$printf1                            0x080077f6   Section        4  printf1.o(x$fpl$printf1)
    x$fpl$retnan                             0x080077fa   Section      100  retnan.o(x$fpl$retnan)
    x$fpl$scalbn                             0x0800785e   Section       92  scalbn.o(x$fpl$scalbn)
    x$fpl$scanf1                             0x080078ba   Section        4  scanf1.o(x$fpl$scanf1)
    x$fpl$scanf2                             0x080078be   Section        8  scanf2.o(x$fpl$scanf2)
    x$fpl$trapveneer                         0x080078c6   Section       48  trapv.o(x$fpl$trapveneer)
    x$fpl$usenofp                            0x080078f6   Section        0  usenofp.o(x$fpl$usenofp)
    tenpwrs_x                                0x080078f8   Data          60  bigflt0.o(.constdata)
    .constdata                               0x080078f8   Section      148  bigflt0.o(.constdata)
    tenpwrs_i                                0x08007934   Data          64  bigflt0.o(.constdata)
    __tagsym$$used.4                         0x0800798c   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x080079fc   Number         0  rtx_lib.o(.rodata)
    .L__const.Thread_MsgQueue1.t             0x08007a34   Data          28  msgqueue.o(.rodata..L__const.Thread_MsgQueue1.t)
    FIN                                      0x08007aa0   Data           1  com.o(.rodata.FIN)
    [Anonymous Symbol]                       0x08007aa0   Section        0  com.o(.rodata.FIN)
    INI                                      0x08007aa1   Data           1  com.o(.rodata.INI)
    [Anonymous Symbol]                       0x08007aa1   Section        0  com.o(.rodata.INI)
    USART3_Resources                         0x08007aa4   Data          52  usart_stm32f4xx.o(.rodata.USART3_Resources)
    [Anonymous Symbol]                       0x08007aa4   Section        0  usart_stm32f4xx.o(.rodata.USART3_Resources)
    USART3_rx                                0x08007ad8   Data          12  usart_stm32f4xx.o(.rodata.USART3_rx)
    [Anonymous Symbol]                       0x08007ad8   Section        0  usart_stm32f4xx.o(.rodata.USART3_rx)
    USART3_tx                                0x08007ae4   Data          12  usart_stm32f4xx.o(.rodata.USART3_tx)
    [Anonymous Symbol]                       0x08007ae4   Section        0  usart_stm32f4xx.o(.rodata.USART3_tx)
    os_idle_thread_attr                      0x08007af4   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08007af4   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x08007b18   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x08007b18   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08007b30   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08007b30   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x08007b54   Data           9  com.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08007b54   Section        0  com.o(.rodata.str1.1)
    .L.str                                   0x08007b60   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x08007b60   Section        0  rtx_kernel.o(.rodata.str1.4)
    c$$dinf                                  0x08007b8c   Section        8  fpconst.o(c$$dinf)
    c$$dmax                                  0x08007b94   Section        8  fpconst.o(c$$dmax)
    locale$$data                             0x08007b9c   Section       28  lc_numeric_c.o(locale$$data)
    __lcnum_c_name                           0x08007ba0   Data           2  lc_numeric_c.o(locale$$data)
    __lcnum_c_start                          0x08007ba8   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_point                          0x08007bb4   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_thousands                      0x08007bb6   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_grouping                       0x08007bb7   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_end                            0x08007bb8   Data           0  lc_numeric_c.o(locale$$data)
    locale$$data                             0x08007bb8   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x08007bbc   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x08007bc4   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x08007cc8   Data           0  lc_ctype_c.o(locale$$data)
    .bss                                     0x200000b0   Section       96  libspace.o(.bss)
    HAL_GetTick.ticks                        0x20000110   Data           4  main.o(.bss.HAL_GetTick.ticks)
    [Anonymous Symbol]                       0x20000110   Section        0  main.o(.bss.HAL_GetTick.ticks)
    I2C1_Info                                0x20000114   Data          40  i2c_stm32f4xx.o(.bss.I2C1_Info)
    [Anonymous Symbol]                       0x20000114   Section        0  i2c_stm32f4xx.o(.bss.I2C1_Info)
    USART3_Info                              0x2000013c   Data          20  usart_stm32f4xx.o(.bss.USART3_Info)
    [Anonymous Symbol]                       0x2000013c   Section        0  usart_stm32f4xx.o(.bss.USART3_Info)
    USART3_TransferInfo                      0x20000150   Data          36  usart_stm32f4xx.o(.bss.USART3_TransferInfo)
    [Anonymous Symbol]                       0x20000150   Section        0  usart_stm32f4xx.o(.bss.USART3_TransferInfo)
    comandoRX                                0x20000174   Data           1  com.o(.bss.comandoRX)
    [Anonymous Symbol]                       0x20000174   Section        0  com.o(.bss.comandoRX)
    comandoTX                                0x20000175   Data           1  com.o(.bss.comandoTX)
    [Anonymous Symbol]                       0x20000175   Section        0  com.o(.bss.comandoTX)
    horaRX                                   0x20000180   Data           8  com.o(.bss.horaRX)
    [Anonymous Symbol]                       0x20000180   Section        0  com.o(.bss.horaRX)
    horaTX                                   0x20000188   Data           9  com.o(.bss.horaTX)
    [Anonymous Symbol]                       0x20000188   Section        0  com.o(.bss.horaTX)
    longitudTX                               0x20000191   Data           1  com.o(.bss.longitudTX)
    [Anonymous Symbol]                       0x20000191   Section        0  com.o(.bss.longitudTX)
    medidaTX                                 0x20000192   Data          30  com.o(.bss.medidaTX)
    [Anonymous Symbol]                       0x20000192   Section        0  com.o(.bss.medidaTX)
    os_isr_queue                             0x200001b8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x200001b8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x200001f8   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x200081f8   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x200081f8   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x200081fc   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x200081fc   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x2000820c   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x200083ec   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x200083ec   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20008420   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20008420   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x20008470   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20008470   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200084b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x200084f8   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x200084f8   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x200086f8   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x200086f8   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x200088f8   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x200088f8   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    receive                                  0x200088f9   Data           1  com.o(.bss.receive)
    [Anonymous Symbol]                       0x200088f9   Section        0  com.o(.bss.receive)
    recibidoRX                               0x200088fc   Data          13  com.o(.bss.recibidoRX)
    [Anonymous Symbol]                       0x200088fc   Section        0  com.o(.bss.recibidoRX)
    temperaturaRX                            0x2000890c   Data           4  com.o(.bss.temperaturaRX)
    [Anonymous Symbol]                       0x2000890c   Section        0  com.o(.bss.temperaturaRX)
    temperaturaTX                            0x20008910   Data           5  com.o(.bss.temperaturaTX)
    [Anonymous Symbol]                       0x20008910   Section        0  com.o(.bss.temperaturaTX)
    tid_ThcomRX                              0x20008918   Data           4  com.o(.bss.tid_ThcomRX)
    [Anonymous Symbol]                       0x20008918   Section        0  com.o(.bss.tid_ThcomRX)
    tid_ThcomTX                              0x2000891c   Data           4  com.o(.bss.tid_ThcomTX)
    [Anonymous Symbol]                       0x2000891c   Section        0  com.o(.bss.tid_ThcomTX)
    tid_Thread_MsgQueue1                     0x20008920   Data           4  msgqueue.o(.bss.tid_Thread_MsgQueue1)
    [Anonymous Symbol]                       0x20008920   Section        0  msgqueue.o(.bss.tid_Thread_MsgQueue1)
    tramaCompletaTX                          0x20008924   Data           1  com.o(.bss.tramaCompletaTX)
    [Anonymous Symbol]                       0x20008924   Section        0  com.o(.bss.tramaCompletaTX)
    tramaTX                                  0x20008944   Data          28  com.o(.bss.tramaTX)
    [Anonymous Symbol]                       0x20008944   Section        0  com.o(.bss.tramaTX)
    transfer                                 0x20008960   Data           1  com.o(.bss.transfer)
    [Anonymous Symbol]                       0x20008960   Section        0  com.o(.bss.transfer)
    Heap_Mem                                 0x20008968   Data         512  startup_stm32f429xx.o(HEAP)
    HEAP                                     0x20008968   Section      512  startup_stm32f429xx.o(HEAP)
    Stack_Mem                                0x20008b68   Data        1024  startup_stm32f429xx.o(STACK)
    STACK                                    0x20008b68   Section     1024  startup_stm32f429xx.o(STACK)
    __initial_sp                             0x20008f68   Data           0  startup_stm32f429xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _scanf_longlong                           - Undefined Weak Reference
    _scanf_mbtowc                             - Undefined Weak Reference
    _scanf_string                             - Undefined Weak Reference
    _scanf_wctomb                             - Undefined Weak Reference
    _scanf_wstring                            - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000001ac   Number         0  startup_stm32f429xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f429xx.o(RESET)
    __Vectors_End                            0x080001ac   Data           0  startup_stm32f429xx.o(RESET)
    __main                                   0x080001ad   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001b5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001b5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001b5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001c3   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001e9   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000205   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_f                                0x08000221   Thumb Code     0  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    _printf_percent                          0x08000221   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_d                                0x08000227   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_percent_end                      0x0800022d   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x08000231   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x08000233   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x08000233   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_common                  0x08000233   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_preinit_1                  0x08000233   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000233   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_user_alloc_1               0x08000233   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x08000239   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_2                 0x08000239   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000012)
    __rt_lib_init_lc_ctype_1                 0x08000245   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000245   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_2               0x08000245   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000016)
    __rt_lib_init_alloca_1                   0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_numeric_1               0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_return                     0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x08000251   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000253   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000255   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000255   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000255   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800025b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000263   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000267   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000267   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800026f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000271   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000271   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000275   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x0800027d   Thumb Code   108  irq_armv7m.o(.text)
    PendSV_Handler                           0x080002e9   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x080002f9   Thumb Code    16  irq_armv7m.o(.text)
    Reset_Handler                            0x08000311   Thumb Code     8  startup_stm32f429xx.o(.text)
    ADC_IRQHandler                           0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_RX0_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_RX1_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_SCE_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_TX_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_RX0_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_RX1_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_SCE_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_TX_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DCMI_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2D_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    ETH_IRQHandler                           0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    ETH_WKUP_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI0_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI15_10_IRQHandler                     0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI1_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI2_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI3_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI4_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI9_5_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    FLASH_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    FMC_IRQHandler                           0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    FPU_IRQHandler                           0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    HASH_RNG_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C2_ER_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C2_EV_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C3_ER_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C3_EV_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    LTDC_ER_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    LTDC_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_FS_IRQHandler                        0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_IRQHandler                        0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    PVD_IRQHandler                           0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    RCC_IRQHandler                           0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    RTC_Alarm_IRQHandler                     0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    RTC_WKUP_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    SAI1_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    SDIO_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI1_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI2_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI3_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI4_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI5_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI6_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_CC_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM2_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM3_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM4_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM5_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM6_DAC_IRQHandler                      0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM7_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_CC_IRQHandler                       0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART4_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART5_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART7_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART8_IRQHandler                         0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART1_IRQHandler                        0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART2_IRQHandler                        0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART6_IRQHandler                        0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    WWDG_IRQHandler                          0x0800032b   Thumb Code     0  startup_stm32f429xx.o(.text)
    __user_initial_stackheap                 0x0800032d   Thumb Code     0  startup_stm32f429xx.o(.text)
    __aeabi_uldivmod                         0x08000351   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x08000351   Thumb Code   240  lludivv7m.o(.text)
    __2snprintf                              0x08000441   Thumb Code    48  noretval__2snprintf.o(.text)
    _printf_pre_padding                      0x08000475   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x080004a1   Thumb Code    34  _printf_pad.o(.text)
    _printf_int_dec                          0x080004c5   Thumb Code   104  _printf_dec.o(.text)
    __printf                                 0x0800053d   Thumb Code   270  __printf_wp.o(.text)
    __0sscanf                                0x0800064d   Thumb Code    52  __0sscanf.o(.text)
    _scanf_int                               0x08000689   Thumb Code   332  _scanf_int.o(.text)
    __aeabi_memcpy                           0x080007d5   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080007d5   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0800083b   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0800085f   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0800085f   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x0800086f   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800086f   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x08000873   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080008b3   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080008b3   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080008b3   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080008b7   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x08000901   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000903   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000905   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x08000907   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_fp_dec_real                      0x08000b69   Thumb Code   620  _printf_fp_dec.o(.text)
    _printf_char_common                      0x08000ddf   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x08000e05   Thumb Code    10  _sputc.o(.text)
    _snputc                                  0x08000e0f   Thumb Code    16  _snputc.o(.text)
    _chval                                   0x08000e1f   Thumb Code    28  _chval.o(.text)
    _scanf_really_real                       0x08001089   Thumb Code   684  scanf_fp.o(.text)
    __vfscanf_char                           0x08001341   Thumb Code    24  scanf_char.o(.text)
    _sgetc                                   0x08001361   Thumb Code    30  _sgetc.o(.text)
    _sbackspace                              0x0800137f   Thumb Code    34  _sgetc.o(.text)
    __aeabi_memcpy4                          0x080013a1   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080013a1   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080013a1   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080013e9   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_locale                              0x08001405   Thumb Code    10  rt_locale_twolibspace.o(.text)
    __aeabi_errno_addr                       0x0800140f   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x0800140f   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x0800140f   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __aeabi_llsl                             0x08001413   Thumb Code     0  llshl.o(.text)
    _ll_shift_l                              0x08001413   Thumb Code    38  llshl.o(.text)
    _ll_udiv10                               0x08001439   Thumb Code   138  lludiv10.o(.text)
    isspace                                  0x080014c3   Thumb Code    18  isspace.o(.text)
    _printf_fp_infnan                        0x080014d5   Thumb Code   112  _printf_fp_infnan.o(.text)
    __vfscanf                                0x08001555   Thumb Code   878  _scanf.o(.text)
    _btod_etento                             0x080018c9   Thumb Code   224  bigflt0.o(.text)
    __user_libspace                          0x080019ad   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080019ad   Thumb Code     0  libspace.o(.text)
    __user_setup_stackheap                   0x080019b5   Thumb Code    74  sys_stackheap_outer.o(.text)
    __rt_ctype_table                         0x08001a01   Thumb Code    16  rt_ctype_table.o(.text)
    __read_errno                             0x08001a11   Thumb Code    10  _rserrno.o(.text)
    __set_errno                              0x08001a1b   Thumb Code    12  _rserrno.o(.text)
    _scanf_really_hex_real                   0x08001a29   Thumb Code   786  scanf_hexfp.o(.text)
    _scanf_really_infnan                     0x08001d49   Thumb Code   292  scanf_infnan.o(.text)
    exit                                     0x08001e7d   Thumb Code    18  exit.o(.text)
    strcmp                                   0x08001e91   Thumb Code   124  strcmpv7em.o(.text)
    _sys_exit                                0x08001f0d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08001f19   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08001f19   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08001f1b   Thumb Code     0  indicate_semi.o(.text)
    BusFault_Handler                         0x08001f1d   Thumb Code     2  stm32f4xx_it.o(.text.BusFault_Handler)
    DebugMon_Handler                         0x08001f21   Thumb Code     2  stm32f4xx_it.o(.text.DebugMon_Handler)
    EvrRtxDelayCompleted                     0x08002119   Thumb Code     2  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxEventFlagsWaitTimeout              0x0800211d   Thumb Code     2  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x08002121   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelErrorNotify                  0x08002125   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    EvrRtxKernelGetState                     0x08002129   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelGetState)
    EvrRtxKernelGetTickCount                 0x0800212d   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    EvrRtxKernelInitialize                   0x08002131   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x08002135   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x08002139   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x0800213d   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x08002141   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x08002145   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x08002149   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x0800214d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x08002151   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x08002155   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x08002159   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x0800215d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x08002161   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x08002165   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x08002169   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x0800216d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x08002171   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08002175   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNew                    0x08002179   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueNew)
    EvrRtxMessageQueueNotInserted            0x0800217d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x08002181   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x08002185   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08002189   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x0800218d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x08002191   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquire                       0x08002195   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x08002199   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x0800219d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x080021a1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x080021a5   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x080021a9   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x080021ad   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x080021b1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexError)
    EvrRtxMutexNew                           0x080021b5   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x080021b9   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x080021bd   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x080021c1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquireTimeout            0x080021c5   Thumb Code     2  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxThreadBlocked                      0x080021c9   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x080021cd   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x080021d1   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x080021d5   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x080021d9   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsError                   0x080021dd   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    EvrRtxThreadFlagsSet                     0x080021e1   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    EvrRtxThreadFlagsSetDone                 0x080021e5   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    EvrRtxThreadFlagsWait                    0x080021e9   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    EvrRtxThreadFlagsWaitCompleted           0x080021ed   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitNotCompleted        0x080021f1   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    EvrRtxThreadFlagsWaitPending             0x080021f5   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    EvrRtxThreadFlagsWaitTimeout             0x080021f9   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadGetId                        0x080021fd   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadGetId)
    EvrRtxThreadJoined                       0x08002201   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x08002205   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x08002209   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x0800220d   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x08002211   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxThreadYield                        0x08002215   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadYield)
    EvrRtxTimerCallback                      0x08002219   Thumb Code     2  rtx_evr.o(.text.EvrRtxTimerCallback)
    HAL_GPIO_DeInit                          0x0800221d   Thumb Code   262  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    HAL_GPIO_Init                            0x08002325   Thumb Code   410  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GetREVID                             0x080024c1   Thumb Code    14  stm32f4xx_hal.o(.text.HAL_GetREVID)
    HAL_GetTick                              0x080024d1   Thumb Code    80  main.o(.text.HAL_GetTick)
    HAL_Init                                 0x08002521   Thumb Code    46  stm32f4xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x08002551   Thumb Code     4  main.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08002555   Thumb Code     2  stm32f4xx_hal.o(.text.HAL_MspInit)
    HAL_NVIC_DisableIRQ                      0x08002559   Thumb Code     8  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ)
    HAL_NVIC_SetPriorityGrouping             0x08002561   Thumb Code     8  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_RCC_ClockConfig                      0x08002569   Thumb Code   352  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetHCLKFreq                      0x080026c9   Thumb Code    12  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetPCLK1Freq                     0x080026d5   Thumb Code    34  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    HAL_RCC_GetSysClockFreq                  0x080026f9   Thumb Code   106  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08002765   Thumb Code   820  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HardFault_Handler                        0x08002a99   Thumb Code     2  stm32f4xx_it.o(.text.HardFault_Handler)
    I2C1_ER_IRQHandler                       0x08002a9d   Thumb Code     8  i2c_stm32f4xx.o(.text.I2C1_ER_IRQHandler)
    I2C1_EV_IRQHandler                       0x08002aa5   Thumb Code     8  i2c_stm32f4xx.o(.text.I2C1_EV_IRQHandler)
    Init_MsgQueue                            0x08003131   Thumb Code    84  msgqueue.o(.text.Init_MsgQueue)
    Init_Thcom                               0x08003185   Thumb Code    86  com.o(.text.Init_Thcom)
    MemManage_Handler                        0x08003281   Thumb Code     2  stm32f4xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x08003329   Thumb Code     2  stm32f4xx_it.o(.text.NMI_Handler)
    OS_Tick_AcknowledgeIRQ                   0x0800332d   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08003339   Thumb Code    50  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x0800336d   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08003375   Thumb Code    72  os_systick.o(.text.OS_Tick_Setup)
    SystemCoreClockUpdate                    0x0800349d   Thumb Code   126  system_stm32f4xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x0800351d   Thumb Code     2  system_stm32f4xx.o(.text.SystemInit)
    Thread_MsgQueue1                         0x080035c5   Thumb Code    58  msgqueue.o(.text.Thread_MsgQueue1)
    USART3_IRQHandler                        0x080036b1   Thumb Code    16  usart_stm32f4xx.o(.text.USART3_IRQHandler)
    USART_IRQHandler                         0x08003d21   Thumb Code   514  usart_stm32f4xx.o(.text.USART_IRQHandler)
    UsageFault_Handler                       0x08004431   Thumb Code     2  stm32f4xx_it.o(.text.UsageFault_Handler)
    __user_perthread_libspace                0x080044ad   Thumb Code    86  rtx_lib.o(.text.__user_perthread_libspace)
    _mutex_acquire                           0x08004505   Thumb Code    26  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x08004521   Thumb Code    10  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x0800452d   Thumb Code    32  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x0800454d   Thumb Code    22  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08004565   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    main                                     0x08004931   Thumb Code    30  main.o(.text.main)
    osKernelGetState                         0x08004951   Thumb Code    38  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x08004979   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x08004999   Thumb Code    50  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080049cd   Thumb Code    46  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x080049fd   Thumb Code    66  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x08004a41   Thumb Code    58  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x08004a7d   Thumb Code    66  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08004ac1   Thumb Code    56  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08004af9   Thumb Code    52  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08004b2d   Thumb Code    50  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08004b61   Thumb Code    52  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x08004b95   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x08004ba1   Thumb Code     2  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x08004ba5   Thumb Code    20  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x08004bd1   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x08004be1   Thumb Code   182  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08004c99   Thumb Code   120  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08004d11   Thumb Code   100  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08004d75   Thumb Code    42  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08004da1   Thumb Code    66  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08004de5   Thumb Code    96  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x08004f5d   Thumb Code    48  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x08004f95   Thumb Code   106  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x08005001   Thumb Code    80  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x08005061   Thumb Code   100  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x080050c5   Thumb Code    44  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08005231   Thumb Code   246  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08005361   Thumb Code    94  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x0800547d   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08005495   Thumb Code    52  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x080054c9   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x080054f9   Thumb Code    48  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08005569   Thumb Code    24  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08005581   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x080055a5   Thumb Code    80  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x080055f5   Thumb Code    22  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x0800560d   Thumb Code    92  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08005669   Thumb Code    42  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08005695   Thumb Code   138  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x08005721   Thumb Code    38  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x08005749   Thumb Code    42  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x080057fd   Thumb Code    26  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x08005819   Thumb Code    48  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x08005849   Thumb Code    60  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadGetId                            0x08005885   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x080058a5   Thumb Code    58  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x080058e1   Thumb Code    48  rtx_thread.o(.text.osThreadYield)
    _btod_d2e                                0x080069b1   Thumb Code    62  btod.o(CL$$btod_d2e)
    _d2e_denorm_low                          0x080069ef   Thumb Code    70  btod.o(CL$$btod_d2e_denorm_low)
    _d2e_norm_op1                            0x08006a35   Thumb Code    96  btod.o(CL$$btod_d2e_norm_op1)
    __btod_div_common                        0x08006a95   Thumb Code   696  btod.o(CL$$btod_div_common)
    _e2d                                     0x08006dcd   Thumb Code   122  btod.o(CL$$btod_e2d)
    _e2e                                     0x08006e51   Thumb Code   220  btod.o(CL$$btod_e2e)
    _btod_ediv                               0x08006f2d   Thumb Code    42  btod.o(CL$$btod_ediv)
    _btod_edivd                              0x08006f57   Thumb Code    42  btod.o(CL$$btod_edivd)
    _btod_emul                               0x08006f81   Thumb Code    42  btod.o(CL$$btod_emul)
    _btod_emuld                              0x08006fab   Thumb Code    42  btod.o(CL$$btod_emuld)
    __btod_mult_common                       0x08006fd5   Thumb Code   580  btod.o(CL$$btod_mult_common)
    __ARM_fpclassify                         0x08007219   Thumb Code    40  fpclassify.o(i.__ARM_fpclassify)
    __mathlib_dbl_overflow                   0x08007241   Thumb Code    14  dunder.o(i.__mathlib_dbl_overflow)
    __mathlib_dbl_underflow                  0x08007251   Thumb Code    10  dunder.o(i.__mathlib_dbl_underflow)
    __mathlib_narrow                         0x08007261   Thumb Code    16  narrow.o(i.__mathlib_narrow)
    __mathlib_tofloat                        0x08007271   Thumb Code   184  narrow.o(i.__mathlib_tofloat)
    __support_ldexp                          0x0800732d   Thumb Code    22  ldexp.o(i.__support_ldexp)
    _is_digit                                0x08007343   Thumb Code    14  __printf_wp.o(i._is_digit)
    frexp                                    0x08007351   Thumb Code    80  frexp.o(i.frexp)
    ldexp                                    0x080073a9   Thumb Code   116  ldexp.o(i.ldexp)
    _get_lc_numeric                          0x0800741d   Thumb Code    44  lc_numeric_c.o(locale$$code)
    _get_lc_ctype                            0x08007449   Thumb Code    44  lc_ctype_c.o(locale$$code)
    __aeabi_d2f                              0x08007475   Thumb Code     0  d2f.o(x$fpl$d2f)
    _d2f                                     0x08007475   Thumb Code    98  d2f.o(x$fpl$d2f)
    __fpl_dcheck_NaN1                        0x080074d9   Thumb Code    10  dcheck1.o(x$fpl$dcheck1)
    __fpl_dcmp_Inf                           0x080074e9   Thumb Code    24  dcmpi.o(x$fpl$dcmpinf)
    __aeabi_cdcmpeq                          0x08007501   Thumb Code     0  deqf.o(x$fpl$deqf)
    _dcmpeq                                  0x08007501   Thumb Code   120  deqf.o(x$fpl$deqf)
    __aeabi_cdcmple                          0x08007579   Thumb Code     0  dleqf.o(x$fpl$dleqf)
    _dcmple                                  0x08007579   Thumb Code   120  dleqf.o(x$fpl$dleqf)
    __fpl_dcmple_InfNaN                      0x080075db   Thumb Code     0  dleqf.o(x$fpl$dleqf)
    __fpl_dnaninf                            0x080075f1   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x0800768d   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_cdrcmple                         0x08007699   Thumb Code     0  drleqf.o(x$fpl$drleqf)
    _drcmple                                 0x08007699   Thumb Code   108  drleqf.o(x$fpl$drleqf)
    __aeabi_f2d                              0x08007705   Thumb Code     0  f2d.o(x$fpl$f2d)
    _f2d                                     0x08007705   Thumb Code    86  f2d.o(x$fpl$f2d)
    __fpl_fnaninf                            0x0800775b   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    __fpl_fretinf                            0x080077e7   Thumb Code    10  fretinf.o(x$fpl$fretinf)
    __ieee_status                            0x080077f1   Thumb Code     6  istatus.o(x$fpl$ieeestatus)
    _printf_fp_dec                           0x080077f7   Thumb Code     4  printf1.o(x$fpl$printf1)
    __fpl_return_NaN                         0x080077fb   Thumb Code   100  retnan.o(x$fpl$retnan)
    __ARM_scalbn                             0x0800785f   Thumb Code    92  scalbn.o(x$fpl$scalbn)
    _scanf_real                              0x080078bb   Thumb Code     4  scanf1.o(x$fpl$scanf1)
    _scanf_hex_real                          0x080078bf   Thumb Code     4  scanf2.o(x$fpl$scanf2)
    _scanf_infnan                            0x080078c3   Thumb Code     4  scanf2.o(x$fpl$scanf2)
    __fpl_cmpreturn                          0x080078c7   Thumb Code    48  trapv.o(x$fpl$trapveneer)
    __I$use$fp                               0x080078f6   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxConfig                              0x0800798c   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x080079fc   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x08007a50   Data          16  system_stm32f4xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x08007a60   Data           8  system_stm32f4xx.o(.rodata.APBPrescTable)
    Driver_USART3                            0x08007a68   Data          56  usart_stm32f4xx.o(.rodata.Driver_USART3)
    osRtxUserSVC                             0x08007af0   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08007b6c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08007b8c   Number         0  anon$$obj.o(Region$$Table)
    __aeabi_HUGE_VAL                         0x08007b8c   Data           0  fpconst.o(c$$dinf)
    __aeabi_HUGE_VALL                        0x08007b8c   Data           0  fpconst.o(c$$dinf)
    __aeabi_INFINITY                         0x08007b8c   Data           0  fpconst.o(c$$dinf)
    __dInf                                   0x08007b8c   Data           0  fpconst.o(c$$dinf)
    __huge_val                               0x08007b8c   Data           0  fpconst.o(c$$dinf)
    __dbl_max                                0x08007b94   Data           0  fpconst.o(c$$dmax)
    __ctype                                  0x08007bc5   Data           0  lc_ctype_c.o(locale$$data)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f4xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000004   Data         164  rtx_kernel.o(.data.os)
    uwTickPrio                               0x200000a8   Data           4  stm32f4xx_hal.o(.data.uwTickPrio)
    __libspace_start                         0x200000b0   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000110   Data           0  libspace.o(.bss)
    cuenta                                   0x20000178   Data           4  com.o(.bss.cuenta)
    mid_MsgQueuePCRX                         0x200001b0   Data           4  msgqueue.o(.bss.mid_MsgQueuePCRX)
    mid_MsgQueuePCTX                         0x200001b4   Data           4  msgqueue.o(.bss.mid_MsgQueuePCTX)
    .bss.os.msgqueue.cb$$Base                0x200083ec   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20008420   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20008470   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200084f8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    tramaRX                                  0x20008928   Data          28  com.o(.bss.tramaRX)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000311

  Load Region LR_1 (Base: 0x08000000, Size: 0x00007d74, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00007cc8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001ac   Data   RO         2124    RESET               startup_stm32f429xx.o
    0x080001ac   0x080001ac   0x00000008   Code   RO         2197  * !!!main             c_w.l(__main.o)
    0x080001b4   0x080001b4   0x00000034   Code   RO         2560    !!!scatter          c_w.l(__scatter.o)
    0x080001e8   0x080001e8   0x0000001a   Code   RO         2562    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000202   0x08000202   0x00000002   PAD
    0x08000204   0x08000204   0x0000001c   Code   RO         2564    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000220   0x08000220   0x00000000   Code   RO         2182    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x08000220   0x08000220   0x00000006   Code   RO         2181    .ARM.Collect$$_printf_percent$$00000003  c_w.l(_printf_f.o)
    0x08000226   0x08000226   0x00000006   Code   RO         2180    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x0800022c   0x0800022c   0x00000004   Code   RO         2222    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x08000230   0x08000230   0x00000002   Code   RO         2364    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000232   0x08000232   0x00000000   Code   RO         2366    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000232   0x08000232   0x00000000   Code   RO         2368    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000232   0x08000232   0x00000000   Code   RO         2371    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000232   0x08000232   0x00000000   Code   RO         2373    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000232   0x08000232   0x00000000   Code   RO         2375    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000232   0x08000232   0x00000006   Code   RO         2376    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x08000238   0x08000238   0x00000000   Code   RO         2378    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000238   0x08000238   0x0000000c   Code   RO         2379    .ARM.Collect$$libinit$$00000012  c_w.l(libinit2.o)
    0x08000244   0x08000244   0x00000000   Code   RO         2380    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000244   0x08000244   0x00000000   Code   RO         2382    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000244   0x08000244   0x0000000a   Code   RO         2383    .ARM.Collect$$libinit$$00000016  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2384    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2386    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2388    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2390    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2392    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2394    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2396    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2398    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2402    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2404    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2406    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000000   Code   RO         2408    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800024e   0x0800024e   0x00000002   Code   RO         2409    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000250   0x08000250   0x00000002   Code   RO         2509    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000252   0x08000252   0x00000000   Code   RO         2541    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         2543    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         2546    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         2549    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         2551    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         2554    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000252   0x08000252   0x00000002   Code   RO         2555    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000254   0x08000254   0x00000000   Code   RO         2205    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000254   0x08000254   0x00000000   Code   RO         2241    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000254   0x08000254   0x00000006   Code   RO         2253    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800025a   0x0800025a   0x00000008   Code   RO         2242    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000262   0x08000262   0x00000004   Code   RO         2244    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000266   0x08000266   0x00000000   Code   RO         2246    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000266   0x08000266   0x00000008   Code   RO         2247    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800026e   0x0800026e   0x00000002   Code   RO         2420    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000270   0x08000270   0x00000000   Code   RO         2458    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000270   0x08000270   0x00000004   Code   RO         2459    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000274   0x08000274   0x00000006   Code   RO         2460    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800027a   0x0800027a   0x00000002   PAD
    0x0800027c   0x0800027c   0x00000094   Code   RO          101    .text               irq_armv7m.o
    0x08000310   0x08000310   0x00000040   Code   RO         2125  * .text               startup_stm32f429xx.o
    0x08000350   0x08000350   0x000000f0   Code   RO         2148    .text               c_w.l(lludivv7m.o)
    0x08000440   0x08000440   0x00000034   Code   RO         2152    .text               c_w.l(noretval__2snprintf.o)
    0x08000474   0x08000474   0x0000004e   Code   RO         2156    .text               c_w.l(_printf_pad.o)
    0x080004c2   0x080004c2   0x00000002   PAD
    0x080004c4   0x080004c4   0x00000078   Code   RO         2158    .text               c_w.l(_printf_dec.o)
    0x0800053c   0x0800053c   0x0000010e   Code   RO         2168    .text               c_w.l(__printf_wp.o)
    0x0800064a   0x0800064a   0x00000002   PAD
    0x0800064c   0x0800064c   0x0000003c   Code   RO         2183    .text               c_w.l(__0sscanf.o)
    0x08000688   0x08000688   0x0000014c   Code   RO         2185    .text               c_w.l(_scanf_int.o)
    0x080007d4   0x080007d4   0x0000008a   Code   RO         2187    .text               c_w.l(rt_memcpy_v6.o)
    0x0800085e   0x0800085e   0x00000010   Code   RO         2189    .text               c_w.l(aeabi_memset4.o)
    0x0800086e   0x0800086e   0x00000044   Code   RO         2191    .text               c_w.l(rt_memclr.o)
    0x080008b2   0x080008b2   0x0000004e   Code   RO         2193    .text               c_w.l(rt_memclr_w.o)
    0x08000900   0x08000900   0x00000006   Code   RO         2195    .text               c_w.l(heapauxi.o)
    0x08000906   0x08000906   0x000000b2   Code   RO         2210    .text               c_w.l(_printf_intcommon.o)
    0x080009b8   0x080009b8   0x0000041c   Code   RO         2212    .text               c_w.l(_printf_fp_dec.o)
    0x08000dd4   0x08000dd4   0x00000030   Code   RO         2216    .text               c_w.l(_printf_char_common.o)
    0x08000e04   0x08000e04   0x0000000a   Code   RO         2218    .text               c_w.l(_sputc.o)
    0x08000e0e   0x08000e0e   0x00000010   Code   RO         2220    .text               c_w.l(_snputc.o)
    0x08000e1e   0x08000e1e   0x0000001c   Code   RO         2223    .text               c_w.l(_chval.o)
    0x08000e3a   0x08000e3a   0x00000002   PAD
    0x08000e3c   0x08000e3c   0x000004f8   Code   RO         2225    .text               c_w.l(scanf_fp.o)
    0x08001334   0x08001334   0x0000002c   Code   RO         2229    .text               c_w.l(scanf_char.o)
    0x08001360   0x08001360   0x00000040   Code   RO         2231    .text               c_w.l(_sgetc.o)
    0x080013a0   0x080013a0   0x00000064   Code   RO         2233    .text               c_w.l(rt_memcpy_w.o)
    0x08001404   0x08001404   0x0000000a   Code   RO         2262    .text               c_w.l(rt_locale_twolibspace.o)
    0x0800140e   0x0800140e   0x00000004   Code   RO         2269    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x08001412   0x08001412   0x00000026   Code   RO         2271    .text               c_w.l(llshl.o)
    0x08001438   0x08001438   0x0000008a   Code   RO         2273    .text               c_w.l(lludiv10.o)
    0x080014c2   0x080014c2   0x00000012   Code   RO         2275    .text               c_w.l(isspace.o)
    0x080014d4   0x080014d4   0x00000080   Code   RO         2277    .text               c_w.l(_printf_fp_infnan.o)
    0x08001554   0x08001554   0x00000374   Code   RO         2281    .text               c_w.l(_scanf.o)
    0x080018c8   0x080018c8   0x000000e4   Code   RO         2283    .text               c_w.l(bigflt0.o)
    0x080019ac   0x080019ac   0x00000008   Code   RO         2338    .text               c_w.l(libspace.o)
    0x080019b4   0x080019b4   0x0000004a   Code   RO         2341    .text               c_w.l(sys_stackheap_outer.o)
    0x080019fe   0x080019fe   0x00000002   PAD
    0x08001a00   0x08001a00   0x00000010   Code   RO         2343    .text               c_w.l(rt_ctype_table.o)
    0x08001a10   0x08001a10   0x00000016   Code   RO         2345    .text               c_w.l(_rserrno.o)
    0x08001a26   0x08001a26   0x00000002   PAD
    0x08001a28   0x08001a28   0x00000320   Code   RO         2347    .text               c_w.l(scanf_hexfp.o)
    0x08001d48   0x08001d48   0x00000134   Code   RO         2349    .text               c_w.l(scanf_infnan.o)
    0x08001e7c   0x08001e7c   0x00000012   Code   RO         2353    .text               c_w.l(exit.o)
    0x08001e8e   0x08001e8e   0x00000002   PAD
    0x08001e90   0x08001e90   0x0000007c   Code   RO         2359    .text               c_w.l(strcmpv7em.o)
    0x08001f0c   0x08001f0c   0x0000000c   Code   RO         2453    .text               c_w.l(sys_exit.o)
    0x08001f18   0x08001f18   0x00000002   Code   RO         2496    .text               c_w.l(use_no_semi.o)
    0x08001f1a   0x08001f1a   0x00000000   Code   RO         2498    .text               c_w.l(indicate_semi.o)
    0x08001f1a   0x08001f1a   0x00000002   PAD
    0x08001f1c   0x08001f1c   0x00000002   Code   RO            8    .text.BusFault_Handler  stm32f4xx_it.o
    0x08001f1e   0x08001f1e   0x00000002   PAD
    0x08001f20   0x08001f20   0x00000002   Code   RO           12    .text.DebugMon_Handler  stm32f4xx_it.o
    0x08001f22   0x08001f22   0x00000002   PAD
    0x08001f24   0x08001f24   0x000001f4   Code   RO         1356    .text.Enable_GPIO_Clock  usart_stm32f4xx.o
    0x08002118   0x08002118   0x00000002   Code   RO          345    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x0800211a   0x0800211a   0x00000002   PAD
    0x0800211c   0x0800211c   0x00000002   Code   RO          393    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x0800211e   0x0800211e   0x00000002   PAD
    0x08002120   0x08002120   0x00000002   Code   RO          207    .text.EvrRtxKernelError  rtx_evr.o
    0x08002122   0x08002122   0x00000002   PAD
    0x08002124   0x08002124   0x00000002   Code   RO          251    .text.EvrRtxKernelErrorNotify  rtx_evr.o
    0x08002126   0x08002126   0x00000002   PAD
    0x08002128   0x08002128   0x00000002   Code   RO          217    .text.EvrRtxKernelGetState  rtx_evr.o
    0x0800212a   0x0800212a   0x00000002   PAD
    0x0800212c   0x0800212c   0x00000002   Code   RO          243    .text.EvrRtxKernelGetTickCount  rtx_evr.o
    0x0800212e   0x0800212e   0x00000002   PAD
    0x08002130   0x08002130   0x00000002   Code   RO          209    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x08002132   0x08002132   0x00000002   PAD
    0x08002134   0x08002134   0x00000002   Code   RO          211    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x08002136   0x08002136   0x00000002   PAD
    0x08002138   0x08002138   0x00000002   Code   RO          219    .text.EvrRtxKernelStart  rtx_evr.o
    0x0800213a   0x0800213a   0x00000002   PAD
    0x0800213c   0x0800213c   0x00000002   Code   RO          221    .text.EvrRtxKernelStarted  rtx_evr.o
    0x0800213e   0x0800213e   0x00000002   PAD
    0x08002140   0x08002140   0x00000002   Code   RO          197    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x08002142   0x08002142   0x00000002   PAD
    0x08002144   0x08002144   0x00000002   Code   RO          203    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x08002146   0x08002146   0x00000002   PAD
    0x08002148   0x08002148   0x00000002   Code   RO          205    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x0800214a   0x0800214a   0x00000002   PAD
    0x0800214c   0x0800214c   0x00000002   Code   RO          201    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x0800214e   0x0800214e   0x00000002   PAD
    0x08002150   0x08002150   0x00000002   Code   RO          199    .text.EvrRtxMemoryFree  rtx_evr.o
    0x08002152   0x08002152   0x00000002   PAD
    0x08002154   0x08002154   0x00000002   Code   RO          195    .text.EvrRtxMemoryInit  rtx_evr.o
    0x08002156   0x08002156   0x00000002   PAD
    0x08002158   0x08002158   0x00000002   Code   RO          471    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x0800215a   0x0800215a   0x00000002   PAD
    0x0800215c   0x0800215c   0x00000002   Code   RO          499    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x0800215e   0x0800215e   0x00000002   PAD
    0x08002160   0x08002160   0x00000002   Code   RO          495    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x08002162   0x08002162   0x00000002   PAD
    0x08002164   0x08002164   0x00000002   Code   RO          515    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x08002166   0x08002166   0x00000002   PAD
    0x08002168   0x08002168   0x00000002   Code   RO          517    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x0800216a   0x0800216a   0x00000002   PAD
    0x0800216c   0x0800216c   0x00000002   Code   RO          519    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x0800216e   0x0800216e   0x00000002   PAD
    0x08002170   0x08002170   0x00000002   Code   RO          509    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x08002172   0x08002172   0x00000002   PAD
    0x08002174   0x08002174   0x00000002   Code   RO          511    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08002176   0x08002176   0x00000002   PAD
    0x08002178   0x08002178   0x00000002   Code   RO          497    .text.EvrRtxMessageQueueNew  rtx_evr.o
    0x0800217a   0x0800217a   0x00000002   PAD
    0x0800217c   0x0800217c   0x00000002   Code   RO          513    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x0800217e   0x0800217e   0x00000002   PAD
    0x08002180   0x08002180   0x00000002   Code   RO          523    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x08002182   0x08002182   0x00000002   PAD
    0x08002184   0x08002184   0x00000002   Code   RO          503    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x08002186   0x08002186   0x00000002   PAD
    0x08002188   0x08002188   0x00000002   Code   RO          505    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x0800218a   0x0800218a   0x00000002   PAD
    0x0800218c   0x0800218c   0x00000002   Code   RO          507    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x0800218e   0x0800218e   0x00000002   PAD
    0x08002190   0x08002190   0x00000002   Code   RO          521    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x08002192   0x08002192   0x00000002   PAD
    0x08002194   0x08002194   0x00000002   Code   RO          411    .text.EvrRtxMutexAcquire  rtx_evr.o
    0x08002196   0x08002196   0x00000002   PAD
    0x08002198   0x08002198   0x00000002   Code   RO          413    .text.EvrRtxMutexAcquirePending  rtx_evr.o
    0x0800219a   0x0800219a   0x00000002   PAD
    0x0800219c   0x0800219c   0x00000002   Code   RO          415    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x0800219e   0x0800219e   0x00000002   PAD
    0x080021a0   0x080021a0   0x00000002   Code   RO          417    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x080021a2   0x080021a2   0x00000002   PAD
    0x080021a4   0x080021a4   0x00000002   Code   RO          407    .text.EvrRtxMutexCreated  rtx_evr.o
    0x080021a6   0x080021a6   0x00000002   PAD
    0x080021a8   0x080021a8   0x00000002   Code   RO          427    .text.EvrRtxMutexDelete  rtx_evr.o
    0x080021aa   0x080021aa   0x00000002   PAD
    0x080021ac   0x080021ac   0x00000002   Code   RO          429    .text.EvrRtxMutexDestroyed  rtx_evr.o
    0x080021ae   0x080021ae   0x00000002   PAD
    0x080021b0   0x080021b0   0x00000002   Code   RO          403    .text.EvrRtxMutexError  rtx_evr.o
    0x080021b2   0x080021b2   0x00000002   PAD
    0x080021b4   0x080021b4   0x00000002   Code   RO          405    .text.EvrRtxMutexNew  rtx_evr.o
    0x080021b6   0x080021b6   0x00000002   PAD
    0x080021b8   0x080021b8   0x00000002   Code   RO          419    .text.EvrRtxMutexNotAcquired  rtx_evr.o
    0x080021ba   0x080021ba   0x00000002   PAD
    0x080021bc   0x080021bc   0x00000002   Code   RO          421    .text.EvrRtxMutexRelease  rtx_evr.o
    0x080021be   0x080021be   0x00000002   PAD
    0x080021c0   0x080021c0   0x00000002   Code   RO          423    .text.EvrRtxMutexReleased  rtx_evr.o
    0x080021c2   0x080021c2   0x00000002   PAD
    0x080021c4   0x080021c4   0x00000002   Code   RO          443    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x080021c6   0x080021c6   0x00000002   PAD
    0x080021c8   0x080021c8   0x00000002   Code   RO          295    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x080021ca   0x080021ca   0x00000002   PAD
    0x080021cc   0x080021cc   0x00000002   Code   RO          257    .text.EvrRtxThreadCreated  rtx_evr.o
    0x080021ce   0x080021ce   0x00000002   PAD
    0x080021d0   0x080021d0   0x00000002   Code   RO          307    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x080021d2   0x080021d2   0x00000002   PAD
    0x080021d4   0x080021d4   0x00000002   Code   RO          253    .text.EvrRtxThreadError  rtx_evr.o
    0x080021d6   0x080021d6   0x00000002   PAD
    0x080021d8   0x080021d8   0x00000002   Code   RO          303    .text.EvrRtxThreadExit  rtx_evr.o
    0x080021da   0x080021da   0x00000002   PAD
    0x080021dc   0x080021dc   0x00000002   Code   RO          313    .text.EvrRtxThreadFlagsError  rtx_evr.o
    0x080021de   0x080021de   0x00000002   PAD
    0x080021e0   0x080021e0   0x00000002   Code   RO          315    .text.EvrRtxThreadFlagsSet  rtx_evr.o
    0x080021e2   0x080021e2   0x00000002   PAD
    0x080021e4   0x080021e4   0x00000002   Code   RO          317    .text.EvrRtxThreadFlagsSetDone  rtx_evr.o
    0x080021e6   0x080021e6   0x00000002   PAD
    0x080021e8   0x080021e8   0x00000002   Code   RO          325    .text.EvrRtxThreadFlagsWait  rtx_evr.o
    0x080021ea   0x080021ea   0x00000002   PAD
    0x080021ec   0x080021ec   0x00000002   Code   RO          331    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x080021ee   0x080021ee   0x00000002   PAD
    0x080021f0   0x080021f0   0x00000002   Code   RO          333    .text.EvrRtxThreadFlagsWaitNotCompleted  rtx_evr.o
    0x080021f2   0x080021f2   0x00000002   PAD
    0x080021f4   0x080021f4   0x00000002   Code   RO          327    .text.EvrRtxThreadFlagsWaitPending  rtx_evr.o
    0x080021f6   0x080021f6   0x00000002   PAD
    0x080021f8   0x080021f8   0x00000002   Code   RO          329    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x080021fa   0x080021fa   0x00000002   PAD
    0x080021fc   0x080021fc   0x00000002   Code   RO          261    .text.EvrRtxThreadGetId  rtx_evr.o
    0x080021fe   0x080021fe   0x00000002   PAD
    0x08002200   0x08002200   0x00000002   Code   RO          293    .text.EvrRtxThreadJoined  rtx_evr.o
    0x08002202   0x08002202   0x00000002   PAD
    0x08002204   0x08002204   0x00000002   Code   RO          255    .text.EvrRtxThreadNew  rtx_evr.o
    0x08002206   0x08002206   0x00000002   PAD
    0x08002208   0x08002208   0x00000002   Code   RO          299    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x0800220a   0x0800220a   0x00000002   PAD
    0x0800220c   0x0800220c   0x00000002   Code   RO          301    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x0800220e   0x0800220e   0x00000002   PAD
    0x08002210   0x08002210   0x00000002   Code   RO          297    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x08002212   0x08002212   0x00000002   PAD
    0x08002214   0x08002214   0x00000002   Code   RO          275    .text.EvrRtxThreadYield  rtx_evr.o
    0x08002216   0x08002216   0x00000002   PAD
    0x08002218   0x08002218   0x00000002   Code   RO          349    .text.EvrRtxTimerCallback  rtx_evr.o
    0x0800221a   0x0800221a   0x00000002   PAD
    0x0800221c   0x0800221c   0x00000106   Code   RO         1695    .text.HAL_GPIO_DeInit  stm32f4xx_hal_gpio.o
    0x08002322   0x08002322   0x00000002   PAD
    0x08002324   0x08002324   0x0000019a   Code   RO         1693    .text.HAL_GPIO_Init  stm32f4xx_hal_gpio.o
    0x080024be   0x080024be   0x00000002   PAD
    0x080024c0   0x080024c0   0x0000000e   Code   RO         1428    .text.HAL_GetREVID  stm32f4xx_hal.o
    0x080024ce   0x080024ce   0x00000002   PAD
    0x080024d0   0x080024d0   0x00000050   Code   RO           21    .text.HAL_GetTick   main.o
    0x08002520   0x08002520   0x0000002e   Code   RO         1400    .text.HAL_Init      stm32f4xx_hal.o
    0x0800254e   0x0800254e   0x00000002   PAD
    0x08002550   0x08002550   0x00000004   Code   RO           23    .text.HAL_InitTick  main.o
    0x08002554   0x08002554   0x00000002   Code   RO         1404    .text.HAL_MspInit   stm32f4xx_hal.o
    0x08002556   0x08002556   0x00000002   PAD
    0x08002558   0x08002558   0x00000008   Code   RO         1583    .text.HAL_NVIC_DisableIRQ  stm32f4xx_hal_cortex.o
    0x08002560   0x08002560   0x00000008   Code   RO         1567    .text.HAL_NVIC_SetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x08002568   0x08002568   0x00000160   Code   RO         1971    .text.HAL_RCC_ClockConfig  stm32f4xx_hal_rcc.o
    0x080026c8   0x080026c8   0x0000000c   Code   RO         1981    .text.HAL_RCC_GetHCLKFreq  stm32f4xx_hal_rcc.o
    0x080026d4   0x080026d4   0x00000022   Code   RO         1983    .text.HAL_RCC_GetPCLK1Freq  stm32f4xx_hal_rcc.o
    0x080026f6   0x080026f6   0x00000002   PAD
    0x080026f8   0x080026f8   0x0000006a   Code   RO         1973    .text.HAL_RCC_GetSysClockFreq  stm32f4xx_hal_rcc.o
    0x08002762   0x08002762   0x00000002   PAD
    0x08002764   0x08002764   0x00000334   Code   RO         1969    .text.HAL_RCC_OscConfig  stm32f4xx_hal_rcc.o
    0x08002a98   0x08002a98   0x00000002   Code   RO            4    .text.HardFault_Handler  stm32f4xx_it.o
    0x08002a9a   0x08002a9a   0x00000002   PAD
    0x08002a9c   0x08002a9c   0x00000008   Code   RO         1262    .text.I2C1_ER_IRQHandler  i2c_stm32f4xx.o
    0x08002aa4   0x08002aa4   0x00000008   Code   RO         1258    .text.I2C1_EV_IRQHandler  i2c_stm32f4xx.o
    0x08002aac   0x08002aac   0x00000162   Code   RO         1264    .text.I2C_ER_IRQHandler  i2c_stm32f4xx.o
    0x08002c0e   0x08002c0e   0x00000002   PAD
    0x08002c10   0x08002c10   0x0000051e   Code   RO         1260    .text.I2C_EV_IRQHandler  i2c_stm32f4xx.o
    0x0800312e   0x0800312e   0x00000002   PAD
    0x08003130   0x08003130   0x00000054   Code   RO           39    .text.Init_MsgQueue  msgqueue.o
    0x08003184   0x08003184   0x00000056   Code   RO           54    .text.Init_Thcom    com.o
    0x080031da   0x080031da   0x00000002   PAD
    0x080031dc   0x080031dc   0x0000000c   Code   RO          554    .text.IsException   rtx_kernel.o
    0x080031e8   0x080031e8   0x0000000c   Code   RO          774    .text.IsException   rtx_msgqueue.o
    0x080031f4   0x080031f4   0x0000000c   Code   RO          852    .text.IsException   rtx_mutex.o
    0x08003200   0x08003200   0x0000000c   Code   RO         1042    .text.IsException   rtx_thread.o
    0x0800320c   0x0800320c   0x00000018   Code   RO          556    .text.IsIrqMasked   rtx_kernel.o
    0x08003224   0x08003224   0x00000018   Code   RO          776    .text.IsIrqMasked   rtx_msgqueue.o
    0x0800323c   0x0800323c   0x00000018   Code   RO          854    .text.IsIrqMasked   rtx_mutex.o
    0x08003254   0x08003254   0x00000018   Code   RO         1044    .text.IsIrqMasked   rtx_thread.o
    0x0800326c   0x0800326c   0x0000000c   Code   RO          560    .text.IsPrivileged  rtx_kernel.o
    0x08003278   0x08003278   0x00000004   Code   RO          678    .text.MemBlockPtr   rtx_memory.o
    0x0800327c   0x0800327c   0x00000002   Code   RO          676    .text.MemHeadPtr    rtx_memory.o
    0x0800327e   0x0800327e   0x00000002   PAD
    0x08003280   0x08003280   0x00000002   Code   RO            6    .text.MemManage_Handler  stm32f4xx_it.o
    0x08003282   0x08003282   0x00000002   PAD
    0x08003284   0x08003284   0x0000002a   Code   RO          824    .text.MessageQueueGet  rtx_msgqueue.o
    0x080032ae   0x080032ae   0x00000002   PAD
    0x080032b0   0x080032b0   0x00000054   Code   RO          814    .text.MessageQueuePut  rtx_msgqueue.o
    0x08003304   0x08003304   0x00000024   Code   RO          810    .text.MessageQueueRemove  rtx_msgqueue.o
    0x08003328   0x08003328   0x00000002   Code   RO            2    .text.NMI_Handler   stm32f4xx_it.o
    0x0800332a   0x0800332a   0x00000002   PAD
    0x0800332c   0x0800332c   0x0000000c   Code   RO         1226    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x08003338   0x08003338   0x00000032   Code   RO         1222    .text.OS_Tick_Enable  os_systick.o
    0x0800336a   0x0800336a   0x00000002   PAD
    0x0800336c   0x0800336c   0x00000006   Code   RO         1228    .text.OS_Tick_GetIRQn  os_systick.o
    0x08003372   0x08003372   0x00000002   PAD
    0x08003374   0x08003374   0x00000048   Code   RO         1220    .text.OS_Tick_Setup  os_systick.o
    0x080033bc   0x080033bc   0x00000030   Code   RO          602    .text.SVC_Setup     rtx_kernel.o
    0x080033ec   0x080033ec   0x00000010   Code   RO          968    .text.SetPendSV     rtx_system.o
    0x080033fc   0x080033fc   0x0000009e   Code   RO           27    .text.SystemClock_Config  main.o
    0x0800349a   0x0800349a   0x00000002   PAD
    0x0800349c   0x0800349c   0x0000007e   Code   RO         2134    .text.SystemCoreClockUpdate  system_stm32f4xx.o
    0x0800351a   0x0800351a   0x00000002   PAD
    0x0800351c   0x0800351c   0x00000002   Code   RO         2132    .text.SystemInit    system_stm32f4xx.o
    0x0800351e   0x0800351e   0x00000002   PAD
    0x08003520   0x08003520   0x00000030   Code   RO           60    .text.ThcomRX       com.o
    0x08003550   0x08003550   0x00000026   Code   RO           58    .text.ThcomTX       com.o
    0x08003576   0x08003576   0x00000002   PAD
    0x08003578   0x08003578   0x0000003e   Code   RO         1092    .text.ThreadFlagsCheck  rtx_thread.o
    0x080035b6   0x080035b6   0x00000002   PAD
    0x080035b8   0x080035b8   0x0000000a   Code   RO         1142    .text.ThreadFlagsSet  rtx_thread.o
    0x080035c2   0x080035c2   0x00000002   PAD
    0x080035c4   0x080035c4   0x0000003a   Code   RO           41    .text.Thread_MsgQueue1  msgqueue.o
    0x080035fe   0x080035fe   0x00000002   PAD
    0x08003600   0x08003600   0x00000068   Code   RO         1194    .text.TimerInsert   rtx_timer.o
    0x08003668   0x08003668   0x00000016   Code   RO         1190    .text.TimerUnlink   rtx_timer.o
    0x0800367e   0x0800367e   0x00000002   PAD
    0x08003680   0x08003680   0x00000008   Code   RO         1346    .text.USART3_Control  usart_stm32f4xx.o
    0x08003688   0x08003688   0x00000006   Code   RO         1328    .text.USART3_GetCapabilities  usart_stm32f4xx.o
    0x0800368e   0x0800368e   0x00000002   PAD
    0x08003690   0x08003690   0x00000008   Code   RO         1352    .text.USART3_GetModemStatus  usart_stm32f4xx.o
    0x08003698   0x08003698   0x00000008   Code   RO         1344    .text.USART3_GetRxCount  usart_stm32f4xx.o
    0x080036a0   0x080036a0   0x00000008   Code   RO         1348    .text.USART3_GetStatus  usart_stm32f4xx.o
    0x080036a8   0x080036a8   0x00000008   Code   RO         1342    .text.USART3_GetTxCount  usart_stm32f4xx.o
    0x080036b0   0x080036b0   0x00000010   Code   RO         1324    .text.USART3_IRQHandler  usart_stm32f4xx.o
    0x080036c0   0x080036c0   0x0000000a   Code   RO         1330    .text.USART3_Initialize  usart_stm32f4xx.o
    0x080036ca   0x080036ca   0x00000002   PAD
    0x080036cc   0x080036cc   0x00000008   Code   RO         1334    .text.USART3_PowerControl  usart_stm32f4xx.o
    0x080036d4   0x080036d4   0x00000008   Code   RO         1338    .text.USART3_Receive  usart_stm32f4xx.o
    0x080036dc   0x080036dc   0x00000008   Code   RO         1336    .text.USART3_Send   usart_stm32f4xx.o
    0x080036e4   0x080036e4   0x00000008   Code   RO         1350    .text.USART3_SetModemControl  usart_stm32f4xx.o
    0x080036ec   0x080036ec   0x00000008   Code   RO         1340    .text.USART3_Transfer  usart_stm32f4xx.o
    0x080036f4   0x080036f4   0x0000000a   Code   RO         1332    .text.USART3_Uninitialize  usart_stm32f4xx.o
    0x080036fe   0x080036fe   0x00000002   PAD
    0x08003700   0x08003700   0x00000596   Code   RO         1378    .text.USART_Control  usart_stm32f4xx.o
    0x08003c96   0x08003c96   0x00000002   PAD
    0x08003c98   0x08003c98   0x00000004   Code   RO         1384    .text.USART_GetModemStatus  usart_stm32f4xx.o
    0x08003c9c   0x08003c9c   0x0000000c   Code   RO         1376    .text.USART_GetRxCount  usart_stm32f4xx.o
    0x08003ca8   0x08003ca8   0x0000006a   Code   RO         1380    .text.USART_GetStatus  usart_stm32f4xx.o
    0x08003d12   0x08003d12   0x00000002   PAD
    0x08003d14   0x08003d14   0x0000000c   Code   RO         1374    .text.USART_GetTxCount  usart_stm32f4xx.o
    0x08003d20   0x08003d20   0x00000202   Code   RO         1322    .text.USART_IRQHandler  usart_stm32f4xx.o
    0x08003f22   0x08003f22   0x00000002   PAD
    0x08003f24   0x08003f24   0x00000044   Code   RO           56    .text.USART_Init    com.o
    0x08003f68   0x08003f68   0x00000046   Code   RO         1354    .text.USART_Initialize  usart_stm32f4xx.o
    0x08003fae   0x08003fae   0x00000002   PAD
    0x08003fb0   0x08003fb0   0x0000018a   Code   RO         1366    .text.USART_PeripheralReset  usart_stm32f4xx.o
    0x0800413a   0x0800413a   0x00000002   PAD
    0x0800413c   0x0800413c   0x000000c6   Code   RO         1360    .text.USART_PowerControl  usart_stm32f4xx.o
    0x08004202   0x08004202   0x00000002   PAD
    0x08004204   0x08004204   0x00000094   Code   RO         1370    .text.USART_Receive  usart_stm32f4xx.o
    0x08004298   0x08004298   0x00000080   Code   RO         1368    .text.USART_Send    usart_stm32f4xx.o
    0x08004318   0x08004318   0x00000054   Code   RO         1382    .text.USART_SetModemControl  usart_stm32f4xx.o
    0x0800436c   0x0800436c   0x00000054   Code   RO         1372    .text.USART_Transfer  usart_stm32f4xx.o
    0x080043c0   0x080043c0   0x0000002c   Code   RO         1358    .text.USART_Uninitialize  usart_stm32f4xx.o
    0x080043ec   0x080043ec   0x00000036   Code   RO           62    .text.USART_callback  com.o
    0x08004422   0x08004422   0x00000002   PAD
    0x08004424   0x08004424   0x0000000a   Code   RO         1326    .text.USARTx_GetVersion  usart_stm32f4xx.o
    0x0800442e   0x0800442e   0x00000002   PAD
    0x08004430   0x08004430   0x00000002   Code   RO           10    .text.UsageFault_Handler  stm32f4xx_it.o
    0x08004432   0x08004432   0x00000002   PAD
    0x08004434   0x08004434   0x0000000e   Code   RO         1362    .text.__NVIC_ClearPendingIRQ  usart_stm32f4xx.o
    0x08004442   0x08004442   0x00000002   PAD
    0x08004444   0x08004444   0x00000028   Code   RO         1585    .text.__NVIC_DisableIRQ  stm32f4xx_hal_cortex.o
    0x0800446c   0x0800446c   0x0000000e   Code   RO         1364    .text.__NVIC_EnableIRQ  usart_stm32f4xx.o
    0x0800447a   0x0800447a   0x00000002   PAD
    0x0800447c   0x0800447c   0x00000010   Code   RO          604    .text.__NVIC_GetPriorityGrouping  rtx_kernel.o
    0x0800448c   0x0800448c   0x00000020   Code   RO         1569    .text.__NVIC_SetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x080044ac   0x080044ac   0x00000056   Code   RO          640    .text.__user_perthread_libspace  rtx_lib.o
    0x08004502   0x08004502   0x00000002   PAD
    0x08004504   0x08004504   0x0000001a   Code   RO          646    .text._mutex_acquire  rtx_lib.o
    0x0800451e   0x0800451e   0x00000002   PAD
    0x08004520   0x08004520   0x0000000a   Code   RO          650    .text._mutex_free   rtx_lib.o
    0x0800452a   0x0800452a   0x00000002   PAD
    0x0800452c   0x0800452c   0x00000020   Code   RO          644    .text._mutex_initialize  rtx_lib.o
    0x0800454c   0x0800454c   0x00000016   Code   RO          648    .text._mutex_release  rtx_lib.o
    0x08004562   0x08004562   0x00000002   PAD
    0x08004564   0x08004564   0x00000008   Code   RO          638    .text._platform_post_stackheap_init  rtx_lib.o
    0x0800456c   0x0800456c   0x00000026   Code   RO         1094    .text.atomic_chk32_all  rtx_thread.o
    0x08004592   0x08004592   0x00000002   PAD
    0x08004594   0x08004594   0x00000022   Code   RO         1096    .text.atomic_chk32_any  rtx_thread.o
    0x080045b6   0x080045b6   0x00000002   PAD
    0x080045b8   0x080045b8   0x00000024   Code   RO          970    .text.atomic_dec16_nz  rtx_system.o
    0x080045dc   0x080045dc   0x00000010   Code   RO          704    .text.atomic_dec32  rtx_mempool.o
    0x080045ec   0x080045ec   0x0000001a   Code   RO          826    .text.atomic_dec32_nz  rtx_msgqueue.o
    0x08004606   0x08004606   0x00000002   PAD
    0x08004608   0x08004608   0x0000001a   Code   RO          972    .text.atomic_inc16_lim  rtx_system.o
    0x08004622   0x08004622   0x00000002   PAD
    0x08004624   0x08004624   0x00000028   Code   RO          976    .text.atomic_inc16_lt  rtx_system.o
    0x0800464c   0x0800464c   0x00000010   Code   RO          698    .text.atomic_inc32  rtx_mempool.o
    0x0800465c   0x0800465c   0x00000010   Code   RO          816    .text.atomic_inc32  rtx_msgqueue.o
    0x0800466c   0x0800466c   0x0000001a   Code   RO          696    .text.atomic_link_get  rtx_mempool.o
    0x08004686   0x08004686   0x00000002   PAD
    0x08004688   0x08004688   0x0000001e   Code   RO          702    .text.atomic_link_put  rtx_mempool.o
    0x080046a6   0x080046a6   0x00000002   PAD
    0x080046a8   0x080046a8   0x00000016   Code   RO         1144    .text.atomic_set32  rtx_thread.o
    0x080046be   0x080046be   0x00000002   PAD
    0x080046c0   0x080046c0   0x00000012   Code   RO          828    .text.atomic_wr8    rtx_msgqueue.o
    0x080046d2   0x080046d2   0x00000002   PAD
    0x080046d4   0x080046d4   0x00000072   Code   RO           68    .text.controlarTramaRecibida  com.o
    0x08004746   0x08004746   0x00000002   PAD
    0x08004748   0x08004748   0x00000034   Code   RO           66    .text.getInformacionCola  com.o
    0x0800477c   0x0800477c   0x00000074   Code   RO          786    .text.isrRtxMessageQueueGet  rtx_msgqueue.o
    0x080047f0   0x080047f0   0x0000007e   Code   RO          782    .text.isrRtxMessageQueuePut  rtx_msgqueue.o
    0x0800486e   0x0800486e   0x00000002   PAD
    0x08004870   0x08004870   0x0000005a   Code   RO         1082    .text.isrRtxThreadFlagsSet  rtx_thread.o
    0x080048ca   0x080048ca   0x00000002   PAD
    0x080048cc   0x080048cc   0x0000002e   Code   RO          952    .text.isr_queue_get  rtx_system.o
    0x080048fa   0x080048fa   0x00000002   PAD
    0x080048fc   0x080048fc   0x00000032   Code   RO          966    .text.isr_queue_put  rtx_system.o
    0x0800492e   0x0800492e   0x00000002   PAD
    0x08004930   0x08004930   0x0000001e   Code   RO           25    .text.main          main.o
    0x0800494e   0x0800494e   0x00000002   PAD
    0x08004950   0x08004950   0x00000026   Code   RO          564    .text.osKernelGetState  rtx_kernel.o
    0x08004976   0x08004976   0x00000002   PAD
    0x08004978   0x08004978   0x00000020   Code   RO          580    .text.osKernelGetTickCount  rtx_kernel.o
    0x08004998   0x08004998   0x00000032   Code   RO          552    .text.osKernelInitialize  rtx_kernel.o
    0x080049ca   0x080049ca   0x00000002   PAD
    0x080049cc   0x080049cc   0x0000002e   Code   RO          568    .text.osKernelStart  rtx_kernel.o
    0x080049fa   0x080049fa   0x00000002   PAD
    0x080049fc   0x080049fc   0x00000042   Code   RO          784    .text.osMessageQueueGet  rtx_msgqueue.o
    0x08004a3e   0x08004a3e   0x00000002   PAD
    0x08004a40   0x08004a40   0x0000003a   Code   RO          772    .text.osMessageQueueNew  rtx_msgqueue.o
    0x08004a7a   0x08004a7a   0x00000002   PAD
    0x08004a7c   0x08004a7c   0x00000042   Code   RO          780    .text.osMessageQueuePut  rtx_msgqueue.o
    0x08004abe   0x08004abe   0x00000002   PAD
    0x08004ac0   0x08004ac0   0x00000038   Code   RO          858    .text.osMutexAcquire  rtx_mutex.o
    0x08004af8   0x08004af8   0x00000034   Code   RO          864    .text.osMutexDelete  rtx_mutex.o
    0x08004b2c   0x08004b2c   0x00000032   Code   RO          850    .text.osMutexNew    rtx_mutex.o
    0x08004b5e   0x08004b5e   0x00000002   PAD
    0x08004b60   0x08004b60   0x00000034   Code   RO          860    .text.osMutexRelease  rtx_mutex.o
    0x08004b94   0x08004b94   0x00000002   Code   RO         1249    .text.osRtxErrorNotify  rtx_config.o
    0x08004b96   0x08004b96   0x00000002   PAD
    0x08004b98   0x08004b98   0x00000002   Code   RO          956    .text.osRtxEventFlagsObject  rtx_system.o
    0x08004b9a   0x08004b9a   0x00000002   PAD
    0x08004b9c   0x08004b9c   0x00000002   Code   RO         1004    .text.osRtxEventFlagsObject  rtx_thread.o
    0x08004b9e   0x08004b9e   0x00000002   PAD
    0x08004ba0   0x08004ba0   0x00000002   Code   RO         1247    .text.osRtxIdleThread  rtx_config.o
    0x08004ba2   0x08004ba2   0x00000002   PAD
    0x08004ba4   0x08004ba4   0x00000014   Code   RO          550    .text.osRtxKernelErrorNotify  rtx_kernel.o
    0x08004bb8   0x08004bb8   0x0000000c   Code   RO          948    .text.osRtxKernelGetState  rtx_system.o
    0x08004bc4   0x08004bc4   0x0000000c   Code   RO         1020    .text.osRtxKernelGetState  rtx_thread.o
    0x08004bd0   0x08004bd0   0x00000002   Code   RO          548    .text.osRtxKernelPreInit  rtx_kernel.o
    0x08004bd2   0x08004bd2   0x00000002   PAD
    0x08004bd4   0x08004bd4   0x0000000c   Code   RO          598    .text.osRtxKernelState  rtx_kernel.o
    0x08004be0   0x08004be0   0x000000b6   Code   RO          680    .text.osRtxMemoryAlloc  rtx_memory.o
    0x08004c96   0x08004c96   0x00000002   PAD
    0x08004c98   0x08004c98   0x00000078   Code   RO          682    .text.osRtxMemoryFree  rtx_memory.o
    0x08004d10   0x08004d10   0x00000064   Code   RO          674    .text.osRtxMemoryInit  rtx_memory.o
    0x08004d74   0x08004d74   0x0000002a   Code   RO          694    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x08004d9e   0x08004d9e   0x00000002   PAD
    0x08004da0   0x08004da0   0x00000042   Code   RO          700    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x08004de2   0x08004de2   0x00000002   PAD
    0x08004de4   0x08004de4   0x00000060   Code   RO          692    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x08004e44   0x08004e44   0x00000002   Code   RO          960    .text.osRtxMemoryPoolObject  rtx_system.o
    0x08004e46   0x08004e46   0x00000002   PAD
    0x08004e48   0x08004e48   0x00000002   Code   RO         1010    .text.osRtxMemoryPoolObject  rtx_thread.o
    0x08004e4a   0x08004e4a   0x00000002   PAD
    0x08004e4c   0x08004e4c   0x00000002   Code   RO          962    .text.osRtxMessageObject  rtx_system.o
    0x08004e4e   0x08004e4e   0x00000002   PAD
    0x08004e50   0x08004e50   0x00000002   Code   RO          768    .text.osRtxMessageQueueId  rtx_msgqueue.o
    0x08004e52   0x08004e52   0x00000002   PAD
    0x08004e54   0x08004e54   0x00000002   Code   RO         1012    .text.osRtxMessageQueueObject  rtx_thread.o
    0x08004e56   0x08004e56   0x00000002   PAD
    0x08004e58   0x08004e58   0x00000102   Code   RO          808    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x08004f5a   0x08004f5a   0x00000002   PAD
    0x08004f5c   0x08004f5c   0x00000030   Code   RO          766    .text.osRtxMessageQueueTimerSetup  rtx_msgqueue.o
    0x08004f8c   0x08004f8c   0x00000002   Code   RO          870    .text.osRtxMutexId  rtx_mutex.o
    0x08004f8e   0x08004f8e   0x00000002   PAD
    0x08004f90   0x08004f90   0x00000002   Code   RO         1006    .text.osRtxMutexObject  rtx_thread.o
    0x08004f92   0x08004f92   0x00000002   PAD
    0x08004f94   0x08004f94   0x0000006a   Code   RO          844    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x08004ffe   0x08004ffe   0x00000002   PAD
    0x08005000   0x08005000   0x00000050   Code   RO          848    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x08005050   0x08005050   0x00000002   Code   RO          812    .text.osRtxObject   rtx_msgqueue.o
    0x08005052   0x08005052   0x00000002   PAD
    0x08005054   0x08005054   0x00000002   Code   RO          846    .text.osRtxObject   rtx_mutex.o
    0x08005056   0x08005056   0x00000002   PAD
    0x08005058   0x08005058   0x00000002   Code   RO          974    .text.osRtxObject   rtx_system.o
    0x0800505a   0x0800505a   0x00000002   PAD
    0x0800505c   0x0800505c   0x00000002   Code   RO          994    .text.osRtxObject   rtx_thread.o
    0x0800505e   0x0800505e   0x00000002   PAD
    0x08005060   0x08005060   0x00000064   Code   RO          950    .text.osRtxPendSV_Handler  rtx_system.o
    0x080050c4   0x080050c4   0x0000002c   Code   RO          964    .text.osRtxPostProcess  rtx_system.o
    0x080050f0   0x080050f0   0x00000002   Code   RO          958    .text.osRtxSemaphoreObject  rtx_system.o
    0x080050f2   0x080050f2   0x00000002   PAD
    0x080050f4   0x080050f4   0x00000002   Code   RO         1008    .text.osRtxSemaphoreObject  rtx_thread.o
    0x080050f6   0x080050f6   0x00000002   PAD
    0x080050f8   0x080050f8   0x00000048   Code   RO         1024    .text.osRtxThreadBlock  rtx_thread.o
    0x08005140   0x08005140   0x000000a0   Code   RO         1032    .text.osRtxThreadDelayInsert  rtx_thread.o
    0x080051e0   0x080051e0   0x00000050   Code   RO         1028    .text.osRtxThreadDelayRemove  rtx_thread.o
    0x08005230   0x08005230   0x000000f6   Code   RO         1000    .text.osRtxThreadDelayTick  rtx_thread.o
    0x08005326   0x08005326   0x00000002   PAD
    0x08005328   0x08005328   0x00000036   Code   RO         1134    .text.osRtxThreadDestroy  rtx_thread.o
    0x0800535e   0x0800535e   0x00000002   PAD
    0x08005360   0x08005360   0x0000005e   Code   RO         1018    .text.osRtxThreadDispatch  rtx_thread.o
    0x080053be   0x080053be   0x00000002   PAD
    0x080053c0   0x080053c0   0x00000060   Code   RO         1124    .text.osRtxThreadFree  rtx_thread.o
    0x08005420   0x08005420   0x0000000c   Code   RO          822    .text.osRtxThreadGetRunning  rtx_msgqueue.o
    0x0800542c   0x0800542c   0x0000000c   Code   RO          874    .text.osRtxThreadGetRunning  rtx_mutex.o
    0x08005438   0x08005438   0x0000000c   Code   RO         1022    .text.osRtxThreadGetRunning  rtx_thread.o
    0x08005444   0x08005444   0x0000000c   Code   RO         1188    .text.osRtxThreadGetRunning  rtx_timer.o
    0x08005450   0x08005450   0x00000002   Code   RO         1036    .text.osRtxThreadId  rtx_thread.o
    0x08005452   0x08005452   0x00000002   PAD
    0x08005454   0x08005454   0x00000026   Code   RO         1130    .text.osRtxThreadJoinWakeup  rtx_thread.o
    0x0800547a   0x0800547a   0x00000002   PAD
    0x0800547c   0x0800547c   0x00000018   Code   RO          990    .text.osRtxThreadListGet  rtx_thread.o
    0x08005494   0x08005494   0x00000034   Code   RO          986    .text.osRtxThreadListPut  rtx_thread.o
    0x080054c8   0x080054c8   0x0000001a   Code   RO          996    .text.osRtxThreadListRemove  rtx_thread.o
    0x080054e2   0x080054e2   0x00000002   PAD
    0x080054e4   0x080054e4   0x00000012   Code   RO         1002    .text.osRtxThreadListRoot  rtx_thread.o
    0x080054f6   0x080054f6   0x00000002   PAD
    0x080054f8   0x080054f8   0x00000030   Code   RO          992    .text.osRtxThreadListSort  rtx_thread.o
    0x08005528   0x08005528   0x00000002   Code   RO          954    .text.osRtxThreadObject  rtx_system.o
    0x0800552a   0x0800552a   0x00000002   PAD
    0x0800552c   0x0800552c   0x00000002   Code   RO          988    .text.osRtxThreadObject  rtx_thread.o
    0x0800552e   0x0800552e   0x00000002   PAD
    0x08005530   0x08005530   0x00000038   Code   RO         1090    .text.osRtxThreadPostProcess  rtx_thread.o
    0x08005568   0x08005568   0x00000018   Code   RO          998    .text.osRtxThreadReadyPut  rtx_thread.o
    0x08005580   0x08005580   0x00000006   Code   RO         1014    .text.osRtxThreadRegPtr  rtx_thread.o
    0x08005586   0x08005586   0x00000002   PAD
    0x08005588   0x08005588   0x0000000e   Code   RO         1132    .text.osRtxThreadSetRunning  rtx_thread.o
    0x08005596   0x08005596   0x00000002   PAD
    0x08005598   0x08005598   0x0000000c   Code   RO         1192    .text.osRtxThreadSetRunning  rtx_timer.o
    0x080055a4   0x080055a4   0x00000050   Code   RO         1034    .text.osRtxThreadStartup  rtx_thread.o
    0x080055f4   0x080055f4   0x00000016   Code   RO         1016    .text.osRtxThreadSwitch  rtx_thread.o
    0x0800560a   0x0800560a   0x00000002   PAD
    0x0800560c   0x0800560c   0x0000005c   Code   RO         1030    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x08005668   0x08005668   0x0000002a   Code   RO         1026    .text.osRtxThreadWaitExit  rtx_thread.o
    0x08005692   0x08005692   0x00000002   PAD
    0x08005694   0x08005694   0x0000008a   Code   RO          946    .text.osRtxTick_Handler  rtx_system.o
    0x0800571e   0x0800571e   0x00000002   PAD
    0x08005720   0x08005720   0x00000026   Code   RO         1166    .text.osRtxTimerSetup  rtx_timer.o
    0x08005746   0x08005746   0x00000002   PAD
    0x08005748   0x08005748   0x0000002a   Code   RO         1170    .text.osRtxTimerThread  rtx_timer.o
    0x08005772   0x08005772   0x00000002   PAD
    0x08005774   0x08005774   0x00000088   Code   RO         1168    .text.osRtxTimerTick  rtx_timer.o
    0x080057fc   0x080057fc   0x0000001a   Code   RO         1072    .text.osThreadExit  rtx_thread.o
    0x08005816   0x08005816   0x00000002   PAD
    0x08005818   0x08005818   0x00000030   Code   RO         1080    .text.osThreadFlagsSet  rtx_thread.o
    0x08005848   0x08005848   0x0000003c   Code   RO         1088    .text.osThreadFlagsWait  rtx_thread.o
    0x08005884   0x08005884   0x00000020   Code   RO         1048    .text.osThreadGetId  rtx_thread.o
    0x080058a4   0x080058a4   0x0000003a   Code   RO         1040    .text.osThreadNew   rtx_thread.o
    0x080058de   0x080058de   0x00000002   PAD
    0x080058e0   0x080058e0   0x00000030   Code   RO         1062    .text.osThreadYield  rtx_thread.o
    0x08005910   0x08005910   0x0000001e   Code   RO          642    .text.os_kernel_is_active  rtx_lib.o
    0x0800592e   0x0800592e   0x00000002   PAD
    0x08005930   0x08005930   0x0000011e   Code   RO           70    .text.procesarDatosRecibidos  com.o
    0x08005a4e   0x08005a4e   0x00000002   PAD
    0x08005a50   0x08005a50   0x000001bc   Code   RO           64    .text.procesarDatosTransmitidos  com.o
    0x08005c0c   0x08005c0c   0x0000007c   Code   RO           72    .text.putInforamcionCola  com.o
    0x08005c88   0x08005c88   0x00000010   Code   RO          566    .text.svcRtxKernelGetState  rtx_kernel.o
    0x08005c98   0x08005c98   0x00000014   Code   RO          582    .text.svcRtxKernelGetTickCount  rtx_kernel.o
    0x08005cac   0x08005cac   0x00000150   Code   RO          596    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x08005dfc   0x08005dfc   0x00000084   Code   RO          600    .text.svcRtxKernelStart  rtx_kernel.o
    0x08005e80   0x08005e80   0x00000132   Code   RO          830    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x08005fb2   0x08005fb2   0x00000002   PAD
    0x08005fb4   0x08005fb4   0x00000188   Code   RO          770    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x0800613c   0x0800613c   0x00000114   Code   RO          820    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x08006250   0x08006250   0x000000e6   Code   RO          872    .text.svcRtxMutexAcquire  rtx_mutex.o
    0x08006336   0x08006336   0x00000002   PAD
    0x08006338   0x08006338   0x000000d8   Code   RO          880    .text.svcRtxMutexDelete  rtx_mutex.o
    0x08006410   0x08006410   0x00000090   Code   RO          866    .text.svcRtxMutexNew  rtx_mutex.o
    0x080064a0   0x080064a0   0x000000f8   Code   RO          876    .text.svcRtxMutexRelease  rtx_mutex.o
    0x08006598   0x08006598   0x0000004a   Code   RO         1128    .text.svcRtxThreadExit  rtx_thread.o
    0x080065e2   0x080065e2   0x00000002   PAD
    0x080065e4   0x080065e4   0x0000008e   Code   RO         1146    .text.svcRtxThreadFlagsSet  rtx_thread.o
    0x08006672   0x08006672   0x00000002   PAD
    0x08006674   0x08006674   0x000000a6   Code   RO         1156    .text.svcRtxThreadFlagsWait  rtx_thread.o
    0x0800671a   0x0800671a   0x00000002   PAD
    0x0800671c   0x0800671c   0x00000010   Code   RO         1050    .text.svcRtxThreadGetId  rtx_thread.o
    0x0800672c   0x0800672c   0x00000240   Code   RO         1038    .text.svcRtxThreadNew  rtx_thread.o
    0x0800696c   0x0800696c   0x00000044   Code   RO         1114    .text.svcRtxThreadYield  rtx_thread.o
    0x080069b0   0x080069b0   0x0000003e   Code   RO         2286    CL$$btod_d2e        c_w.l(btod.o)
    0x080069ee   0x080069ee   0x00000046   Code   RO         2288    CL$$btod_d2e_denorm_low  c_w.l(btod.o)
    0x08006a34   0x08006a34   0x00000060   Code   RO         2287    CL$$btod_d2e_norm_op1  c_w.l(btod.o)
    0x08006a94   0x08006a94   0x00000338   Code   RO         2296    CL$$btod_div_common  c_w.l(btod.o)
    0x08006dcc   0x08006dcc   0x00000084   Code   RO         2294    CL$$btod_e2d        c_w.l(btod.o)
    0x08006e50   0x08006e50   0x000000dc   Code   RO         2293    CL$$btod_e2e        c_w.l(btod.o)
    0x08006f2c   0x08006f2c   0x0000002a   Code   RO         2290    CL$$btod_ediv       c_w.l(btod.o)
    0x08006f56   0x08006f56   0x0000002a   Code   RO         2292    CL$$btod_edivd      c_w.l(btod.o)
    0x08006f80   0x08006f80   0x0000002a   Code   RO         2289    CL$$btod_emul       c_w.l(btod.o)
    0x08006faa   0x08006faa   0x0000002a   Code   RO         2291    CL$$btod_emuld      c_w.l(btod.o)
    0x08006fd4   0x08006fd4   0x00000244   Code   RO         2295    CL$$btod_mult_common  c_w.l(btod.o)
    0x08007218   0x08007218   0x00000028   Code   RO         2330    i.__ARM_fpclassify  m_ws.l(fpclassify.o)
    0x08007240   0x08007240   0x0000000e   Code   RO         2478    i.__mathlib_dbl_overflow  m_ws.l(dunder.o)
    0x0800724e   0x0800724e   0x00000002   PAD
    0x08007250   0x08007250   0x00000010   Code   RO         2480    i.__mathlib_dbl_underflow  m_ws.l(dunder.o)
    0x08007260   0x08007260   0x00000010   Code   RO         2332    i.__mathlib_narrow  m_ws.l(narrow.o)
    0x08007270   0x08007270   0x000000bc   Code   RO         2333    i.__mathlib_tofloat  m_ws.l(narrow.o)
    0x0800732c   0x0800732c   0x00000016   Code   RO         2448    i.__support_ldexp   m_ws.l(ldexp.o)
    0x08007342   0x08007342   0x0000000e   Code   RO         2170    i._is_digit         c_w.l(__printf_wp.o)
    0x08007350   0x08007350   0x00000058   Code   RO         2417    i.frexp             m_ws.l(frexp.o)
    0x080073a8   0x080073a8   0x00000074   Code   RO         2449    i.ldexp             m_ws.l(ldexp.o)
    0x0800741c   0x0800741c   0x0000002c   Code   RO         2314    locale$$code        c_w.l(lc_numeric_c.o)
    0x08007448   0x08007448   0x0000002c   Code   RO         2427    locale$$code        c_w.l(lc_ctype_c.o)
    0x08007474   0x08007474   0x00000062   Code   RO         2410    x$fpl$d2f           fz_ws.l(d2f.o)
    0x080074d6   0x080074d6   0x00000002   PAD
    0x080074d8   0x080074d8   0x00000010   Code   RO         2472    x$fpl$dcheck1       fz_ws.l(dcheck1.o)
    0x080074e8   0x080074e8   0x00000018   Code   RO         2435    x$fpl$dcmpinf       fz_ws.l(dcmpi.o)
    0x08007500   0x08007500   0x00000078   Code   RO         2412    x$fpl$deqf          fz_ws.l(deqf.o)
    0x08007578   0x08007578   0x00000078   Code   RO         2437    x$fpl$dleqf         fz_ws.l(dleqf.o)
    0x080075f0   0x080075f0   0x0000009c   Code   RO         2439    x$fpl$dnaninf       fz_ws.l(dnaninf.o)
    0x0800768c   0x0800768c   0x0000000c   Code   RO         2235    x$fpl$dretinf       fz_ws.l(dretinf.o)
    0x08007698   0x08007698   0x0000006c   Code   RO         2414    x$fpl$drleqf        fz_ws.l(drleqf.o)
    0x08007704   0x08007704   0x00000056   Code   RO         2199    x$fpl$f2d           fz_ws.l(f2d.o)
    0x0800775a   0x0800775a   0x0000008c   Code   RO         2237    x$fpl$fnaninf       fz_ws.l(fnaninf.o)
    0x080077e6   0x080077e6   0x0000000a   Code   RO         2443    x$fpl$fretinf       fz_ws.l(fretinf.o)
    0x080077f0   0x080077f0   0x00000006   Code   RO         2322    x$fpl$ieeestatus    fz_ws.l(istatus.o)
    0x080077f6   0x080077f6   0x00000004   Code   RO         2201    x$fpl$printf1       fz_ws.l(printf1.o)
    0x080077fa   0x080077fa   0x00000064   Code   RO         2522    x$fpl$retnan        fz_ws.l(retnan.o)
    0x0800785e   0x0800785e   0x0000005c   Code   RO         2445    x$fpl$scalbn        fz_ws.l(scalbn.o)
    0x080078ba   0x080078ba   0x00000004   Code   RO         2203    x$fpl$scanf1        fz_ws.l(scanf1.o)
    0x080078be   0x080078be   0x00000008   Code   RO         2324    x$fpl$scanf2        fz_ws.l(scanf2.o)
    0x080078c6   0x080078c6   0x00000030   Code   RO         2556    x$fpl$trapveneer    fz_ws.l(trapv.o)
    0x080078f6   0x080078f6   0x00000000   Code   RO         2239    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x080078f6   0x080078f6   0x00000002   PAD
    0x080078f8   0x080078f8   0x00000094   Data   RO         2284    .constdata          c_w.l(bigflt0.o)
    0x0800798c   0x0800798c   0x000000a8   Data   RO          656    .rodata             rtx_lib.o
    0x08007a34   0x08007a34   0x0000001c   Data   RO           46    .rodata..L__const.Thread_MsgQueue1.t  msgqueue.o
    0x08007a50   0x08007a50   0x00000010   Data   RO         2137    .rodata.AHBPrescTable  system_stm32f4xx.o
    0x08007a60   0x08007a60   0x00000008   Data   RO         2138    .rodata.APBPrescTable  system_stm32f4xx.o
    0x08007a68   0x08007a68   0x00000038   Data   RO         1386    .rodata.Driver_USART3  usart_stm32f4xx.o
    0x08007aa0   0x08007aa0   0x00000001   Data   RO           88    .rodata.FIN         com.o
    0x08007aa1   0x08007aa1   0x00000001   Data   RO           80    .rodata.INI         com.o
    0x08007aa2   0x08007aa2   0x00000002   PAD
    0x08007aa4   0x08007aa4   0x00000034   Data   RO         1391    .rodata.USART3_Resources  usart_stm32f4xx.o
    0x08007ad8   0x08007ad8   0x0000000c   Data   RO         1388    .rodata.USART3_rx   usart_stm32f4xx.o
    0x08007ae4   0x08007ae4   0x0000000c   Data   RO         1387    .rodata.USART3_tx   usart_stm32f4xx.o
    0x08007af0   0x08007af0   0x00000004   Data   RO          658    .rodata.osRtxUserSVC  rtx_lib.o
    0x08007af4   0x08007af4   0x00000024   Data   RO          653    .rodata.os_idle_thread_attr  rtx_lib.o
    0x08007b18   0x08007b18   0x00000018   Data   RO          655    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08007b30   0x08007b30   0x00000024   Data   RO          654    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08007b54   0x08007b54   0x00000009   Data   RO           85    .rodata.str1.1      com.o
    0x08007b5d   0x08007b5d   0x00000003   PAD
    0x08007b60   0x08007b60   0x0000000b   Data   RO          628    .rodata.str1.4      rtx_kernel.o
    0x08007b6b   0x08007b6b   0x00000001   PAD
    0x08007b6c   0x08007b6c   0x00000020   Data   RO         2559    Region$$Table       anon$$obj.o
    0x08007b8c   0x08007b8c   0x00000008   Data   RO         2318    c$$dinf             fz_ws.l(fpconst.o)
    0x08007b94   0x08007b94   0x00000008   Data   RO         2321    c$$dmax             fz_ws.l(fpconst.o)
    0x08007b9c   0x08007b9c   0x0000001c   Data   RO         2313    locale$$data        c_w.l(lc_numeric_c.o)
    0x08007bb8   0x08007bb8   0x00000110   Data   RO         2426    locale$$data        c_w.l(lc_ctype_c.o)


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08007cc8, Size: 0x000000ac, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08007cc8   0x00000004   Data   RW         2136    .data.SystemCoreClock  system_stm32f4xx.o
    0x20000004   0x08007ccc   0x000000a4   Data   RW          629    .data.os            rtx_kernel.o
    0x200000a8   0x08007d70   0x00000004   Data   RW         1458    .data.uwTickPrio    stm32f4xx_hal.o


    Execution Region ER_ZI (Exec base: 0x200000b0, Load base: 0x08007d74, Size: 0x00008eb8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000b0        -       0x00000060   Zero   RW         2339    .bss                c_w.l(libspace.o)
    0x20000110        -       0x00000004   Zero   RW           29    .bss.HAL_GetTick.ticks  main.o
    0x20000114        -       0x00000028   Zero   RW         1313    .bss.I2C1_Info      i2c_stm32f4xx.o
    0x2000013c        -       0x00000014   Zero   RW         1389    .bss.USART3_Info    usart_stm32f4xx.o
    0x20000150        -       0x00000024   Zero   RW         1390    .bss.USART3_TransferInfo  usart_stm32f4xx.o
    0x20000174        -       0x00000001   Zero   RW           91    .bss.comandoRX      com.o
    0x20000175        -       0x00000001   Zero   RW           81    .bss.comandoTX      com.o
    0x20000176   0x08007d74   0x00000002   PAD
    0x20000178        -       0x00000004   Zero   RW           77    .bss.cuenta         com.o
    0x2000017c   0x08007d74   0x00000004   PAD
    0x20000180        -       0x00000008   Zero   RW           93    .bss.horaRX         com.o
    0x20000188        -       0x00000009   Zero   RW           84    .bss.horaTX         com.o
    0x20000191        -       0x00000001   Zero   RW           83    .bss.longitudTX     com.o
    0x20000192        -       0x0000001e   Zero   RW           87    .bss.medidaTX       com.o
    0x200001b0        -       0x00000004   Zero   RW           43    .bss.mid_MsgQueuePCRX  msgqueue.o
    0x200001b4        -       0x00000004   Zero   RW           44    .bss.mid_MsgQueuePCTX  msgqueue.o
    0x200001b8        -       0x00008040   Zero   RW          652    .bss.os             rtx_lib.o
    0x200081f8        -       0x00000001   Zero   RW         1238    .bss.os             os_systick.o
    0x200081f9   0x08007d74   0x00000003   PAD
    0x200081fc        -       0x000001f0   Zero   RW          659    .bss.os.libspace    rtx_lib.o
    0x200083ec        -       0x00000034   Zero   RW          663    .bss.os.msgqueue.cb  rtx_lib.o
    0x20008420        -       0x00000050   Zero   RW          664    .bss.os.msgqueue.mem  rtx_lib.o
    0x20008470        -       0x00000088   Zero   RW          660    .bss.os.thread.cb   rtx_lib.o
    0x200084f8        -       0x00000200   Zero   RW          661    .bss.os.thread.idle.stack  rtx_lib.o
    0x200086f8        -       0x00000200   Zero   RW          662    .bss.os.thread.timer.stack  rtx_lib.o
    0x200088f8        -       0x00000001   Zero   RW          665    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x200088f9        -       0x00000001   Zero   RW           90    .bss.receive        com.o
    0x200088fa   0x08007d74   0x00000002   PAD
    0x200088fc        -       0x0000000d   Zero   RW           89    .bss.recibidoRX     com.o
    0x20008909   0x08007d74   0x00000003   PAD
    0x2000890c        -       0x00000004   Zero   RW           92    .bss.temperaturaRX  com.o
    0x20008910        -       0x00000005   Zero   RW           86    .bss.temperaturaTX  com.o
    0x20008915   0x08007d74   0x00000003   PAD
    0x20008918        -       0x00000004   Zero   RW           75    .bss.tid_ThcomRX    com.o
    0x2000891c        -       0x00000004   Zero   RW           74    .bss.tid_ThcomTX    com.o
    0x20008920        -       0x00000004   Zero   RW           45    .bss.tid_Thread_MsgQueue1  msgqueue.o
    0x20008924        -       0x00000001   Zero   RW           78    .bss.tramaCompletaTX  com.o
    0x20008925   0x08007d74   0x00000003   PAD
    0x20008928        -       0x0000001c   Zero   RW           76    .bss.tramaRX        com.o
    0x20008944        -       0x0000001c   Zero   RW           82    .bss.tramaTX        com.o
    0x20008960        -       0x00000001   Zero   RW           79    .bss.transfer       com.o
    0x20008961   0x08007d74   0x00000007   PAD
    0x20008968        -       0x00000200   Zero   RW         2123    HEAP                startup_stm32f429xx.o
    0x20008b68        -       0x00000400   Zero   RW         2122    STACK               startup_stm32f429xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1314         52         11          0        143       6296   com.o
      1680          0          0          0         40      16698   i2c_stm32f4xx.o
       148          8          0          0          0        764   irq_armv7m.o
       272          0          0          0          4       3590   main.o
       142          0         28          0         12       1248   msgqueue.o
       140          0          0          0          1       4951   os_systick.o
         4          0          0          0          0        671   rtx_config.o
       130          0          0          0          0      24321   rtx_evr.o
       816          0         11        164          0      15628   rtx_kernel.o
       214          0        268          0      34621       7315   rtx_lib.o
       408          0          0          0          0       2839   rtx_memory.o
       292          0          0          0          0      15145   rtx_mempool.o
      1986          0          0          0          0      18638   rtx_msgqueue.o
      1286          0          0          0          0      10132   rtx_mutex.o
       520         10          0          0          0       6541   rtx_system.o
      2990         10          0          0          0      32998   rtx_thread.o
       366          0          0          0          0      10418   rtx_timer.o
        64         26        428          0       1536        892   startup_stm32f429xx.o
        62          0          0          4          0       7993   stm32f4xx_hal.o
        88          0          0          0          0      11133   stm32f4xx_hal_cortex.o
       672          0          0          0          0       5411   stm32f4xx_hal_gpio.o
      1324          0          0          0          0       7575   stm32f4xx_hal_rcc.o
        12          0          0          0          0        725   stm32f4xx_it.o
       128          0         24          4          0       2208   system_stm32f4xx.o
      3888        100        132          0         56      19737   usart_stm32f4xx.o

    ----------------------------------------------------------------------
     19304        206        940        172      36440     233867   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       358          0          6          0         27          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        60          8          0          0          0         84   __0sscanf.o
         8          0          0          0          0         68   __main.o
       284          0          0          0          0        156   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        28          0          0          0          0         68   _chval.o
        48          6          0          0          0         96   _printf_char_common.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
         6          0          0          0          0          0   _printf_f.o
      1052          0          0          0          0        148   _printf_fp_dec.o
       128         16          0          0          0         84   _printf_fp_infnan.o
       178          0          0          0          0         88   _printf_intcommon.o
        78          0          0          0          0        108   _printf_pad.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
        22          0          0          0          0        100   _rserrno.o
       884          6          0          0          0        100   _scanf.o
       332          0          0          0          0         96   _scanf_int.o
        64          0          0          0          0         84   _sgetc.o
        16          0          0          0          0         68   _snputc.o
        10          0          0          0          0         68   _sputc.o
        16          0          0          0          0         68   aeabi_memset4.o
       228          4        148          0          0         96   bigflt0.o
      2152        136          0          0          0        956   btod.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        18          0          0          0          0         76   isspace.o
        44         10        272          0          0         76   lc_ctype_c.o
        44         10         28          0          0         76   lc_numeric_c.o
         2          0          0          0          0          0   libinit.o
        30          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        38          0          0          0          0         68   llshl.o
       138          0          0          0          0         80   lludiv10.o
       240          0          0          0          0        100   lludivv7m.o
        52          4          0          0          0         84   noretval__2snprintf.o
        16          4          0          0          0         76   rt_ctype_table.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_locale_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        44          8          0          0          0         84   scanf_char.o
      1272         16          0          0          0        168   scanf_fp.o
       800         14          0          0          0        100   scanf_hexfp.o
       308         16          0          0          0        100   scanf_infnan.o
       124          0          0          0          0         88   strcmpv7em.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        98          4          0          0          0         92   d2f.o
        16          4          0          0          0         68   dcheck1.o
        24          0          0          0          0         68   dcmpi.o
       120          4          0          0          0         92   deqf.o
       120          4          0          0          0         92   dleqf.o
       156          4          0          0          0         92   dnaninf.o
        12          0          0          0          0         68   dretinf.o
       108          0          0          0          0         80   drleqf.o
        86          4          0          0          0         84   f2d.o
       140          4          0          0          0         84   fnaninf.o
         0          0         16          0          0          0   fpconst.o
        10          0          0          0          0         68   fretinf.o
         6          0          0          0          0         68   istatus.o
         4          0          0          0          0         68   printf1.o
       100          0          0          0          0         68   retnan.o
        92          0          0          0          0         68   scalbn.o
         4          0          0          0          0         68   scanf1.o
         8          0          0          0          0         84   scanf2.o
        48          0          0          0          0         68   trapv.o
         0          0          0          0          0          0   usenofp.o
        30          6          0          0          0        136   dunder.o
        40          0          0          0          0         68   fpclassify.o
        88          8          0          0          0         76   frexp.o
       138          0          0          0          0        160   ldexp.o
       204          4          0          0          0        168   narrow.o

    ----------------------------------------------------------------------
     11236        336        464          0         96       6748   Library Totals
        24          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      9560        290        448          0         96       4760   c_w.l
      1152         28         16          0          0       1380   fz_ws.l
       500         18          0          0          0        608   m_ws.l

    ----------------------------------------------------------------------
     11236        336        464          0         96       6748   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     30540        542       1404        172      36536     236307   Grand Totals
     30540        542       1404        172      36536     236307   ELF Image Totals
     30540        542       1404        172          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                31944 (  31.20kB)
    Total RW  Size (RW Data + ZI Data)             36708 (  35.85kB)
    Total ROM Size (Code + RO Data + RW Data)      32116 (  31.36kB)

==============================================================================

